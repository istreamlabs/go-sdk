components:
  schemas:
    ArchiveFERRequest:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        correlation_id:
          type: string
          description: Correlation ID for this FER archive request
        global_query_string:
          type: string
          description: Portion of the query string that applies to all packages
        notification:
          type: object
          description: Notification settings
          properties:
            sns:
              type: object
              properties:
                region:
                  type: string
                topic_arn:
                  type: string
              additionalProperties: false
              required:
                - topic_arn
                - region
          additionalProperties: false
          required:
            - sns
        packages:
          type: array
          description: Packages to be archived as FERs
          items:
            type: object
            properties:
              archive:
                type: object
                properties:
                  s3:
                    type: object
                    properties:
                      bucket_name:
                        type: string
                      key:
                        type: string
                      region:
                        type: string
                    additionalProperties: false
                    required:
                      - region
                      - bucket_name
                      - key
                additionalProperties: false
                required:
                  - s3
              dash:
                type: object
                properties:
                  fallback_url:
                    type: string
                  primary_url:
                    type: string
                  query_string:
                    type: string
                additionalProperties: false
                required:
                  - query_string
                  - primary_url
                  - fallback_url
              hls:
                type: object
                properties:
                  fallback_url:
                    type: string
                  primary_url:
                    type: string
                  query_string:
                    type: string
                additionalProperties: false
                required:
                  - query_string
                  - primary_url
                  - fallback_url
              package_id:
                type: string
            additionalProperties: false
            required:
              - archive
              - package_id
      additionalProperties: false
      required:
        - correlation_id
        - global_query_string
        - packages
        - notification
    ArchiveFERResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        correlation_id:
          type: string
          description: Identifier that is carried through the archive request
        task_id:
          type: string
          description: Task ID for the archive task started by the L2V service
      additionalProperties: false
      required:
        - task_id
    CancelTaskResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        error:
          type: object
          description: Error when canceling task
          properties:
            location:
              type: string
              description: Where the error occured, e.g. 'body.items[3].tags' or 'path.thing-id'
            message:
              type: string
              description: Error message text
            value:
              description: The value at the given location
          additionalProperties: false
      additionalProperties: false
      required:
        - error
    Channel:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        created:
          type: string
          description: Date and time the channel was created.
          format: date-time
          readOnly: true
        description:
          type: string
          description: A human-readable description of the channel.
        desired_state:
          type: string
          description: Desired running state for a channel.
          enum:
            - "ON"
            - "OFF"
        enable_byoip:
          type: boolean
          description: Indicates whether the channel's transcoder needs to run in a designated IP range.
        id:
          type: string
          description: External Channel ID provided at channel creation time
          example: my-channel
          minLength: 1
          pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
          readOnly: true
        ingest:
          type: object
          description: Ingest configures inputs for the transcoder.
          properties:
            slate:
              type: object
              description: Slate configures default slating behavior.
              properties:
                source_loss_url:
                  type: string
                  description: Source loss URL defines the location of the TS file to play when no source is available. It must have one audio and one video stream. Either MPEG2 or H.264 can be used.
                  format: uri-reference
                  example: https://example.com/slate.ts
              additionalProperties: false
            source:
              type: object
              description: Source provides a reference to the input media stream for this channel.
              properties:
                audio_sources:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        minLength: 1
                      language:
                        type: string
                        description: RFC 5646, e.g. 'en' 'en-US'
                        minLength: 1
                      license:
                        type: string
                        description: License specifies how the audio in this source is licensed.
                        enum:
                          - LIVE
                          - REPLAY
                      name:
                        type: string
                        description: Language fiendly name, e.g. 'English', 'Spanish'
                        minLength: 1
                      selector:
                        type: string
                        description: Expression for choosing an audio track in the stream for this AudioSource https://wbdstreaming.atlassian.net/wiki/spaces/LIVE/pages/250351679/Proposal+Audio+Track+Selection
                    additionalProperties: false
                  minItems: 1
                captions_source:
                  type: string
                  description: Closed captions source embedding. If unspecified, defaults to ATSC_A53.
                  enum:
                    - ATSC_A53
                    - SMPTE_2038
                id:
                  type: string
                  description: Unique identifier for this source.
                  example: s-examplej95ah2qab
                self:
                  type: string
                  description: Self link for the source.
                  format: uri-reference
                  readOnly: true
                video_source:
                  type: object
                  description: Additional information about the source video stream. This is only used to configure the transcoder compute resources to account for scaling and colorspace conversion of the source input.
                  properties:
                    dynamic_range:
                      type: string
                      description: The highest dynamic range the source will ever send to the transcoder.
                      enum:
                        - SDR
                        - HDR
                    max_resolution:
                      type: string
                      description: The maximum resolution the source will ever send to the transcoder.
                      enum:
                        - SD
                        - HD
                        - FHD
                        - TwoK
                        - QHD
                        - UHD
                  additionalProperties: false
              additionalProperties: false
          additionalProperties: false
          required:
            - source
        labels:
          type: array
          description: Optional labels for a channel. Any included labels must be at least 1 character long, but no greater than 256 characters. The maximum number of labels is 10.
          items:
            type: string
          maxItems: 10
        modified:
          type: string
          description: Date and time the channel was last modified.
          format: date-time
          readOnly: true
        name:
          type: string
          description: A friendly human-readable name for the channel. This will get displayed in user interfaces.
          example: My Channel
        organization:
          type: string
          minLength: 1
        packaging:
          type: object
          description: Packaging configures media format and content protection settings.
          properties:
            packagers:
              type: object
              description: Defines the list of packagers available for Publications.
              additionalProperties:
                type: object
                properties:
                  content_protection:
                    type: object
                    description: Configures how to protect packaged media segments.
                    properties:
                      atlas:
                        type: object
                        description: Only one of ['simple', 'atlas', 'cpix'] may be set.
                        properties:
                          asset_id:
                            type: string
                            description: The Asset Identifier which was taken from the token entitlement service request.
                          company_id:
                            type: string
                            description: The Identifier of the Company that this token belongs.
                          drms:
                            type: array
                            description: DRM system keys to request
                            items:
                              type: string
                              enum:
                                - WIDEVINE
                                - FAIRPLAY
                                - PRIMETIME
                                - PLAYREADY
                                - W3C_COMMON_CLEAR_KEY
                                - BULK_FILE
                            uniqueItems: true
                          widevine_v0_pssh_box:
                            type: boolean
                            description: When TRUE the KeyID is not embedded in the pssh box which sets the version to 0. Defaults to generating v1 pssh_boxes that includes the key_id
                        additionalProperties: false
                      bulk_file:
                        type: object
                        description: Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
                        properties:
                          iv_rotation:
                            type: string
                            description: How often the IV should be rotated and how it should be created
                            enum:
                              - RANDOM_PER_KEY
                              - PER_SEGMENT_NUMBER
                              - UNIQUE_PER_SEGMENT
                        additionalProperties: false
                      common:
                        type: object
                        description: Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
                        properties:
                          scheme_type:
                            type: string
                            description: Defines the scheme that can be used with Common Encryption
                            enum:
                              - CENC
                              - CBCS
                        additionalProperties: false
                      cpix:
                        type: object
                        description: Only one of ['simple', 'atlas', 'cpix'] may be set.
                        properties:
                          certificates_id:
                            type: string
                            description: Unique ID used for certificate settings, unique per distributor.
                          content_id:
                            type: string
                            description: (Optional) Content ID that identifies this channel in the CPIX service. Value is defined by the DRM system owner, and if defined will be included as part of a POST request.
                          credentials_id:
                            type: string
                            description: Unique ID used for credentials settings, unique per distributor.
                          decryption_key_id:
                            type: string
                            description: Unique ID of the decryption key to use in case the server response contains content keys encrypted. The key is unique per distirutor, and configured ahead of time by the publishing team and the CPIX service owner.
                          drms:
                            type: array
                            description: (Optional) DRM system keys to request. If not defined a GET request will be done, and any key returned will be handled. If defined, random kid(s) (key ids) will be generated on rotation for each DRM system, and a POST request will be done to create them.
                            items:
                              type: string
                              enum:
                                - WIDEVINE
                                - FAIRPLAY
                                - PRIMETIME
                                - PLAYREADY
                                - W3C_COMMON_CLEAR_KEY
                                - BULK_FILE
                            uniqueItems: true
                          headers_id:
                            type: string
                            description: (Optional) An identifier to a list of HTTP headers to be added to the request sent to the CPIX service.
                          uri:
                            type: string
                            description: CPIX service URI
                            format: uri-reference
                            minLength: 1
                        additionalProperties: false
                      key_rotation:
                        type: object
                        description: Configures how keys should be rotated
                        properties:
                          interval_secs:
                            type: number
                            description: Rotate keys based on the specified time interval. If Program is also provided then this time interval will only apply to media segments that are outside of program boundaries. If Program is NOT provided then only this time interval will be used to decided when to rotate keys.
                            format: float
                            minimum: 300
                          program:
                            type: boolean
                            description: Rotate keys on (SCTE35) program boundaries such that no two programs will be protected with the same key.
                          program_overlap_skip_encrypt:
                            type: boolean
                            description: Do not encrypt segments that are part of more than one SCTE-35 program.
                        additionalProperties: false
                      sample_aes:
                        type: object
                        description: Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
                        additionalProperties: false
                      simple:
                        type: object
                        description: Only one of ['simple', 'atlas', 'cpix'] may be set.
                        properties:
                          publish_points:
                            type: array
                            description: Pub points where keys should be published. If multiple are specified, only one needs to succeed to consider the key successfully published.
                            items:
                              type: object
                              properties:
                                basic_auth:
                                  type: object
                                  description: Only one of ['basic_auth'] may be set.
                                  properties:
                                    password:
                                      type: string
                                      description: Plain text password for basic auth.
                                    username:
                                      type: string
                                      description: Username for basic auth.
                                  additionalProperties: false
                                compression:
                                  type: string
                                  description: Configures whether or not (and how) to compress manifests being published to the origin. If not specified, manifests will not be compressed.
                                  enum:
                                    - NONE
                                    - GZIP
                                do_not_monitor:
                                  type: boolean
                                  description: (Optional) Specifies if this pubpoint should not be monitored by PLM.
                                headers:
                                  type: object
                                  description: Allows custom HTTP headers to be set via configuration for all HTTP requests.
                                  additionalProperties:
                                    type: string
                                method:
                                  type: string
                                  description: Method overrides what HTTP method to specify in requests to the Publish Point. If not specified the service will default to POST.
                                playback_base_url:
                                  type: string
                                  description: The base URL where published playlists will be able to be obtained. This is often different than the publish_base_url for CDN publishing workflows.
                                  format: uri-reference
                                playback_query_params:
                                  type: string
                                  description: 'Specifies any query parameters that will be added to playback urls. Should not include the initial ''?'' Example: ''foo=bar&q=golang'''
                                publish_base_url:
                                  type: string
                                  description: The base URL where generated playlists will be sent/published. Each publish point requires a unique 'publish_base_url'.
                                  format: uri-reference
                              additionalProperties: false
                          require_publish:
                            type: string
                            description: Indicates which publish points must succeed for segment publishing to use the keys.
                            enum:
                              - ANY
                              - ALL
                        additionalProperties: false
                    additionalProperties: false
                  mp2t:
                    type: object
                    description: Uses MP2T format for each segments. Only one of ['mp2t', 'mp4'] may be set.
                    properties:
                      force_unmuxed_audio:
                        type: boolean
                        description: Forces the Video and Audio Encodings to be unmuxed when there is one audio encodings. This setting will have to be uniformed across MP2T packagers within a config. When there are two or more audio encodings, unmuxed will be used automatically.
                      insert_id3_utc_time:
                        type: boolean
                        description: If true, insert ID3 tags that include a UTC timestamp. This is a Turner/WM-specific extension.
                    additionalProperties: false
                  mp4:
                    type: object
                    description: Uses MP4 format for each segments. Only one of ['mp2t', 'mp4'] may be set.
                    properties:
                      caption_placement:
                        type: string
                        description: CaptionPlacement defines where caption messages should be placed in the output MP4.
                        enum:
                          - SEI_PAYLOAD
                          - CLCP_TRACK
                      insert_pssh_box:
                        type: boolean
                        description: Insert pssh boxes generated by content protection into packaged segments. Defaults to not insert pssh boxes to the packaged segments.
                    additionalProperties: false
                  ttml:
                    type: object
                    description: Only one of ['web_vtt', 'ttml'] may be set.
                    additionalProperties: false
                  web_vtt:
                    type: object
                    description: Only one of ['web_vtt', 'ttml'] may be set.
                    properties:
                      file_format:
                        type: string
                        description: The file format used to encapsulate the WebVTT segments.
                        enum:
                          - TEXT
                          - MP4
                    additionalProperties: false
                additionalProperties: false
          additionalProperties: false
        publishing:
          type: object
          description: Publishing configures playlist formats and where to send video and playlist data.
          properties:
            closed_caption_streams:
              type: array
              description: Configures how captioning information, which references CEA-608 captions embedded in video segments, is published.
              items:
                type: object
                properties:
                  auto_select:
                    type: string
                    description: Indicates that the client should play the captioning media selection group if the user has not indicated a user preference. If both auto_select and default are not set, the first captioning media selection group will be used.
                    enum:
                      - "NO"
                      - "YES"
                  default:
                    type: string
                    description: Configures the captioning media selection group that will be played if the user has not indicated a user preference. If both auto_select and default are not set, the first captioning media selection group will be used.
                    enum:
                      - "NO"
                      - "YES"
                  language:
                    type: string
                    description: Language code as RFC 5646, e.g. 'en' 'en-US'.
                  name:
                    type: string
                    description: Source stream name.
                additionalProperties: false
            feature_flags:
              type: array
              description: Set of string identifiers corresponding to features that this Channel is opting in.
              items:
                type: string
            live2vod:
              type: object
              description: Live2VOD configuration used to archive the channel data, this allows clip creation after the content is no longer live.
              properties:
                clear_capture:
                  type: boolean
                  description: BETA - (Optional) Indicates whether the system should send the unpackaged segments produced from the transcoder to the L2V system for purposes of creating mp4s and/or repackaging.
                product_id:
                  type: string
                  description: Product ID that VODs will be associated with in the Live2VOD system. The value of this ID is pre-configured in the Live2VOD portal.
                  minLength: 1
                retention_days:
                  type: integer
                  description: Specifies the retention time, in days, for archived content.
                  format: int32
                  minimum: 1
                  maximum: 30
              additionalProperties: false
            publications:
              type: array
              description: A set of individual configurations that each can configure a specific destination and mechanism of delivery for segments and/or playlists.
              items:
                type: object
                properties:
                  audio_encoder_ids:
                    type: array
                    description: Optionally specify which audio encoders should be used for this publication. If none are specified, all audio encoders configured for the transcoder will be used.
                    items:
                      type: string
                    uniqueItems: true
                  create_vods:
                    type: boolean
                    description: Create VODs for all publish points in this publication. Note that Live2VOD must also be configured for the parent |Channel|.
                  dash:
                    type: object
                    description: DASH configures publication settings. Only one of HLS or DASH can be set.
                    properties:
                      minimum_update_period_secs:
                        type: integer
                        description: Sets the minimumUpdatePeriod field in MPD to be this value. If set to 0 (default), segment duration is used. The value shall not exceed the 'suggested_presentation_delay_secs'.
                        format: int32
                      signaling_formats:
                        type: array
                        description: Signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering playlists.
                        items:
                          type: string
                          enum:
                            - SCTE35_SPLICE_INFO_SECTION
                            - SCTE35_BIN
                        uniqueItems: true
                      suggested_presentation_delay_secs:
                        type: integer
                        description: The suggested amount of time (in seconds) the player should be behind the live stream. This value must be greater or equal to 'minimum_update_period_secs'.
                        format: int32
                        minimum: 0
                      url_type:
                        type: string
                        description: If set to 'URL_TYPE_UNDEFINED' playlist generation will use 'RELATIVE'.
                        enum:
                          - RELATIVE
                          - ABSOLUTE
                          - HOST_RELATIVE
                    additionalProperties: false
                  drms:
                    type: array
                    description: Optionally specify which DRMs to advertise in the playlist. If specified, this must be a subset of the DRMs specified by the packager associated with this publication. If omitted or empty, all DRMs specified by the packager will be advertised. This setting can only be used for HLS playlists.
                    items:
                      type: string
                      enum:
                        - WIDEVINE
                        - FAIRPLAY
                        - PRIMETIME
                        - PLAYREADY
                        - W3C_COMMON_CLEAR_KEY
                        - BULK_FILE
                    uniqueItems: true
                  dvr_window_secs:
                    type: integer
                    description: DVR window is the max sum(duration of media segments) that will be kept in a manifest at a given time in seconds. The max supported DVR window is 10 hours.
                    format: int32
                    minimum: 0
                    maximum: 36000
                  fer_audio_encoder_ids:
                    type: array
                    description: Optionally specify which audio encoders should be used when generating the FER of this Presentation, this overrides the 'audio_encoder_ids' used during the live portion. If none are specified, the 'audio_encoder_ids' field will be used.
                    items:
                      type: string
                    uniqueItems: true
                  hls:
                    type: object
                    description: HLS configures publication settings. Only one of HLS or DASH can be set.
                    properties:
                      audio_only_variants:
                        type: string
                        description: 'Defines how audio only variant streams are included in the master playlist, where the variant streams are defined by #EXT-X-STREAM-INF tag, the tag attributes provide information about the Stream. The INCLUDE_DEFAULT option - only the default ''audio only variant stream'' is included in master playlist. This is the most common use case. INCLUDE_NONE - no audio only variant streams are included in the master playlist. INCLUDE_ALL - include all audio only variant streams in the master playlist.'
                        enum:
                          - INCLUDE_DEFAULT
                          - INCLUDE_NONE
                          - INCLUDE_ALL
                      gap_tags:
                        type: string
                        description: 'Allows turning gap tags ON/OFF. When turned ON - the tag ''#EXT-X-GAP'' is inserted into media playlist for a missing segment. When turned OFF - Discontinuity is inserted into the playlist for missing segment(s). The default option UNDEFINED is mapped to OFF. Note: Gap tags are always inserted for the missing thumbnail segments independently of this setting'
                        enum:
                          - "ON"
                          - "OFF"
                      master_publish_frequency_secs:
                        type: integer
                        description: 'How often the multi-variant playlist(s) should be published (in seconds) once a channel is started. If 0 (not provided), defaults to 1 hour. The following can also result in re-publishing of multi-variant playlists: - Configuration changes related to transcoding configuration (i.e. adding, removing, changing encoders). - Service code changes related to manifest generation.'
                        format: int32
                      master_url_type:
                        type: string
                        description: Allows specifying url type for HLS master playlists. If not provided, playlist generation will use 'RELATIVE'.
                        enum:
                          - RELATIVE
                          - ABSOLUTE
                          - HOST_RELATIVE
                      media_url_type:
                        type: string
                        description: Allows specifying url type for HLS media playlists. If not provided, playlist generation will use 'RELATIVE'.
                        enum:
                          - RELATIVE
                          - ABSOLUTE
                          - HOST_RELATIVE
                      partial_presentations:
                        type: array
                        description: Specify which partial presentations should be used for this presentation. Partial presentations are additional master playlists that point to a subset of the parent presentation's media streams/variant playlists.
                        items:
                          type: object
                          properties:
                            audio_encoder_ids:
                              type: array
                              description: Specify which audio encoders should be used for this presentation. If none are specified, all audio encoders configured for the parent Publication will be used.
                              items:
                                type: string
                              uniqueItems: true
                            fer_audio_encoder_ids:
                              type: array
                              description: 'Optionally specify which audio encoders should be used when generating the FER of this Partial Presentation, this overrides the ''audio_encoder_ids'' used during the live portion. If none are specified, the ''audio_encoder_ids'' field will be used. NOTE: This MUST only be used with push based manifest. Ignore this field when using Aventus Origin with Dynamic Manifests. Instead use the AudioSource.License field.'
                              items:
                                type: string
                              uniqueItems: true
                            iframe_only_encoder_ids:
                              type: array
                              description: List of video encoder IDs that should have I-Frame only playlists generated for them. If no 'iframe_only_encoder_ids' are given then no I-Frame playlists will be in the Partial Presentation.
                              items:
                                type: string
                              uniqueItems: true
                            playlist_path:
                              type: string
                              description: Sub-path that will be appended onto the publish and playback base URLs of HTTP PublishPoints for published playlist files.
                              minLength: 1
                            thumbnail_encoder_ids:
                              type: array
                              description: Specify which thumbnail encoders should be used for this presentation. If no 'thumbnail_encoder_ids' are given then no thumbnail playlists will be in the Partial Presentation.
                              items:
                                type: string
                              uniqueItems: true
                            video_encoder_ids:
                              type: array
                              description: Specify which video encoders should be used for this presentation. If none are specified, all video encoders configured for the parent Publication will be used.
                              items:
                                type: string
                              uniqueItems: true
                          additionalProperties: false
                      pdt_on_every_segment:
                        type: boolean
                        description: 'When true a #EXT-X-PROGRAM-DATE-TIME tag will be placed on every media segment in media playlists. When false, the default behavior, the PDT tag is set according to the HLS specification.'
                      signaling_formats:
                        type: array
                        description: Signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering playlists.
                        items:
                          type: string
                          enum:
                            - APPLE_SCTE35
                            - AD_SIMPLE
                            - SCTE35
                        uniqueItems: true
                      utc_in_segment_title:
                        type: boolean
                        description: 'Include a UTC timestamp (that is equivalent in value to #EXT-X-PROGRAM-DATE-TIME) in the title of each media segment in media playlists. Ex. #EXTINF:6.006,LTC=2020-01-01T12:00:00.000Z'
                    additionalProperties: false
                  iframe_only_encoder_ids:
                    type: array
                    description: List of video encoder IDs that should have I-Frame only playlists generated for them.
                    items:
                      type: string
                    uniqueItems: true
                  master_playlist_name:
                    type: string
                    description: Optional master manifest name. When not supplied a default of 'master' will be used.
                  origin:
                    type: object
                    description: Configures defaults used when generating manifests or playlist using the dynamic origin. Cannot be set if this is a playlist-only publication (i.e. contains publish points that specify 'playlist_only_for').
                    properties:
                      fallback_defaults:
                        type: object
                        description: FallbackDefaults specifies the alternative behavior of the dynamic manifest generator. This behavior is intended to be a simplified configuration comparead to the default behavior so that it can be used as a fallback for when players are encountering issues with the default behavior. Specific behaviors can be overwritten using appropriate query string parameters when making the request for the manifest.
                        properties:
                          dash_signaling_formats:
                            type: array
                            description: DASH Signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering DASH manifests.
                            items:
                              type: string
                              enum:
                                - SCTE35_SPLICE_INFO_SECTION
                                - SCTE35_BIN
                            uniqueItems: true
                          duration_seconds:
                            type: integer
                            description: Duration is the length of content that will be included in the manifest, in seconds. The max supported DVR window is 12 hours. If not specified, the default duration will be 30 seconds.
                            format: int32
                            minimum: 0
                            maximum: 43200
                          enable_hls_delta_updates:
                            type: boolean
                            description: When true enables HLS Delta updates for this particular origin.
                          hls_signaling_formats:
                            type: array
                            description: HLS signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering playlists.
                            items:
                              type: string
                              enum:
                                - APPLE_SCTE35
                                - AD_SIMPLE
                                - SCTE35
                            uniqueItems: true
                          media_url_type:
                            type: string
                            description: Allows specifying url type for HLS media playlists and DASH manifests. If not provided, playlist generation will use 'RELATIVE'.
                            enum:
                              - RELATIVE
                              - ABSOLUTE
                              - HOST_RELATIVE
                          minimum_update_period_seconds:
                            type: integer
                            description: Sets the minimumUpdatePeriod field in MPD to be this value. If set to 0 (default), segment duration is used. The value shall not exceed the 'suggested_presentation_delay_secs'.
                            format: int32
                            minimum: 0
                          multi_variant_url_type:
                            type: string
                            description: Allows specifying url type for HLS multi-variant playlists. If not provided, playlist generation will use 'RELATIVE'.
                            enum:
                              - RELATIVE
                              - ABSOLUTE
                              - HOST_RELATIVE
                          pdt_on_every_segment:
                            type: boolean
                            description: 'When true a #EXT-X-PROGRAM-DATE-TIME tag will be placed on every media segment in HLS media playlists. When false, the default behavior, the PDT tag is set according to the HLS specification.'
                          pre_start_duration_seconds:
                            type: integer
                            description: Pre Start Duration is the length of content that will be included in the manifest when the start time of a manifest is in the future. When a manifest is near the start time but does not contain 'pre_start_duration_seconds' content Manifest Origin will keep content before the start time to make the manifest length at least 'pre_start_duration_seconds'. If not specified requesting a manifest in the future will result in a 404.
                            format: int32
                            minimum: 0
                            maximum: 43200
                          suggested_presentation_delay_seconds:
                            type: integer
                            description: Sets the suggestedPresentationDelay field in MPD to be this value. This value must be greater or equal to 'minimum_update_period_secs'. If unset, the default value will be calculated as 3 * segment target duration.
                            format: int32
                            minimum: 0
                        additionalProperties: false
                      manifest_defaults:
                        type: object
                        description: ManifestDefaults specifies the default behavior of the dynamic manifest generator. Specific behaviors can be overwritten using appropriate query string parameters when making the request for the manifest.
                        properties:
                          dash_signaling_formats:
                            type: array
                            description: DASH Signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering DASH manifests.
                            items:
                              type: string
                              enum:
                                - SCTE35_SPLICE_INFO_SECTION
                                - SCTE35_BIN
                            uniqueItems: true
                          duration_seconds:
                            type: integer
                            description: Duration is the length of content that will be included in the manifest, in seconds. The max supported DVR window is 12 hours. If not specified, the default duration will be 30 seconds.
                            format: int32
                            minimum: 0
                            maximum: 43200
                          enable_hls_delta_updates:
                            type: boolean
                            description: When true enables HLS Delta updates for this particular origin.
                          hls_signaling_formats:
                            type: array
                            description: HLS signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering playlists.
                            items:
                              type: string
                              enum:
                                - APPLE_SCTE35
                                - AD_SIMPLE
                                - SCTE35
                            uniqueItems: true
                          media_url_type:
                            type: string
                            description: Allows specifying url type for HLS media playlists and DASH manifests. If not provided, playlist generation will use 'RELATIVE'.
                            enum:
                              - RELATIVE
                              - ABSOLUTE
                              - HOST_RELATIVE
                          minimum_update_period_seconds:
                            type: integer
                            description: Sets the minimumUpdatePeriod field in MPD to be this value. If set to 0 (default), segment duration is used. The value shall not exceed the 'suggested_presentation_delay_secs'.
                            format: int32
                            minimum: 0
                          multi_variant_url_type:
                            type: string
                            description: Allows specifying url type for HLS multi-variant playlists. If not provided, playlist generation will use 'RELATIVE'.
                            enum:
                              - RELATIVE
                              - ABSOLUTE
                              - HOST_RELATIVE
                          pdt_on_every_segment:
                            type: boolean
                            description: 'When true a #EXT-X-PROGRAM-DATE-TIME tag will be placed on every media segment in HLS media playlists. When false, the default behavior, the PDT tag is set according to the HLS specification.'
                          pre_start_duration_seconds:
                            type: integer
                            description: Pre Start Duration is the length of content that will be included in the manifest when the start time of a manifest is in the future. When a manifest is near the start time but does not contain 'pre_start_duration_seconds' content Manifest Origin will keep content before the start time to make the manifest length at least 'pre_start_duration_seconds'. If not specified requesting a manifest in the future will result in a 404.
                            format: int32
                            minimum: 0
                            maximum: 43200
                          suggested_presentation_delay_seconds:
                            type: integer
                            description: Sets the suggestedPresentationDelay field in MPD to be this value. This value must be greater or equal to 'minimum_update_period_secs'. If unset, the default value will be calculated as 3 * segment target duration.
                            format: int32
                            minimum: 0
                        additionalProperties: false
                      retention_minutes:
                        type: integer
                        description: RetentionMinutes specifies how long data is retained, in minutes. Live linear (24/7) channels should set this to the longest expected DVR window (a few hours). Live event channels should set this to how Live2VOD playlists are expected to be available. If unspecified, the default will be 60 minutes. The maximum value is 15 days (21600 minutes).
                        format: int32
                        minimum: 0
                        maximum: 21600
                      segments:
                        type: object
                        description: 'Segments is a message that will include different options to change the processes for segments. Ex: Allows changing the default behavior of the # of regions segments publishes to with the redunancy field.'
                        properties:
                          redundancy:
                            type: string
                            enum:
                              - SingleRegion
                              - DualRegion
                        additionalProperties: false
                    additionalProperties: false
                  packager_id:
                    type: string
                    description: Determines how segments in this publication are packaged. Must reference a packager in 'packaging.packagers'. However, if this is a playlist-only publication (i.e. contains publish points that specify 'playlist_only_for'), this must remain unset as the packager will be inferred from the publication this one is providing playlists for.
                  publish_points:
                    type: array
                    description: Publish points specify where to output.
                    items:
                      type: object
                      properties:
                        http:
                          type: object
                          description: HTTP destination where media segments and playlists will be published.
                          properties:
                            basic_auth:
                              type: object
                              description: Only one of ['basic_auth'] may be set.
                              properties:
                                password:
                                  type: string
                                  description: Plain text password for basic auth.
                                username:
                                  type: string
                                  description: Username for basic auth.
                              additionalProperties: false
                            compression:
                              type: string
                              description: Configures whether or not (and how) to compress manifests being published to the origin. If not specified, manifests will not be compressed.
                              enum:
                                - NONE
                                - GZIP
                            do_not_monitor:
                              type: boolean
                              description: (Optional) Specifies if this pubpoint should not be monitored by PLM.
                            headers:
                              type: object
                              description: Allows custom HTTP headers to be set via configuration for all HTTP requests.
                              additionalProperties:
                                type: string
                            method:
                              type: string
                              description: Method overrides what HTTP method to specify in requests to the Publish Point. If not specified the service will default to POST.
                            playback_base_url:
                              type: string
                              description: The base URL where published playlists will be able to be obtained. This is often different than the publish_base_url for CDN publishing workflows.
                              format: uri-reference
                            playback_query_params:
                              type: string
                              description: 'Specifies any query parameters that will be added to playback urls. Should not include the initial ''?'' Example: ''foo=bar&q=golang'''
                            publish_base_url:
                              type: string
                              description: The base URL where generated playlists will be sent/published. Each publish point requires a unique 'publish_base_url'.
                              format: uri-reference
                          additionalProperties: false
                        id:
                          type: string
                          description: uniquely identifies this publish_point within a channel configuration. Can be referenced by other publish_points in the 'playlist_only_for' field.
                        playlist_only_for:
                          type: string
                          description: playlist_only_for identifies the id of the publish_point that has the segments for this publish_point, which is only publishing a playlist for those segments. All publish_points within a publication must either have 'playlist_only_for' all set or all not set.
                      additionalProperties: false
                  redundant_publishing:
                    type: boolean
                    description: When redundant publishing is enabled succeeding to publish a given media segment to at least one HTTPPublishPoint in publish_points will result in that segment showing up in manifests as playable content. Will require at least two publish_points defined within the same publication.
                  startover:
                    type: object
                    description: Configures startover processing for this Publication.
                    properties:
                      first_program_start:
                        type: object
                        description: Trigger Startover on the first Program Start. Only one of ['first_program_start', 'on_airing_id'] may be set.
                        additionalProperties: false
                      on_airing_id:
                        type: object
                        description: Use the Airing Id of a Program Start to trigger a Startover on the first match. Only one of ['first_program_start', 'on_airing_id'] may be set.
                        properties:
                          airing_id:
                            type: string
                            description: Airing Id is a SCTE-35 Segmentation Unique Program ID (UPID) of type 0x08 used to specify the unique airing of a program. Is a 8 byte hex encoded string that is prepended with '0x'.
                            pattern: ^0x[0-9a-fA-F]{16}$
                        additionalProperties: false
                    additionalProperties: false
                  thumbnail_encoder_ids:
                    type: array
                    description: 'Optional: Specify what thumbnail_encoders should be in this Publication'
                    items:
                      type: string
                    uniqueItems: true
                  use_strict_bitrate:
                    type: boolean
                    description: Optional, indicates whether we should pad the bitrate (false) or use what is explicitly provided (true)
                  video_encoder_ids:
                    type: array
                    description: Optionally specify which video encoders should be used for this publication. If none are specified, all video encoders configured for the transcoder will be used.
                    items:
                      type: string
                    uniqueItems: true
                additionalProperties: false
            rtmp_publications:
              type: array
              description: A set of configurations for delivering RTMP streams
              items:
                type: object
                properties:
                  audio_encoder_id:
                    type: string
                    description: Only AAC encoders are supported
                    minLength: 1
                  id:
                    type: string
                    description: RTMP publication ID. Must be unique.
                    minLength: 1
                    pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
                  url:
                    type: string
                    format: uri
                    minLength: 1
                    pattern: ^rtmps?://
                  video_encoder_id:
                    type: string
                    description: Only h264 encoders are supported
                    minLength: 1
                additionalProperties: false
            srt_publications:
              type: array
              description: A set of configurations for delivering SRT streams
              items:
                type: object
                properties:
                  audio_encoders:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          minLength: 1
                        pid:
                          type: integer
                          description: Output MPEG-TS PID. PIDs should be set on the PMT, SCTE-35 and all encoders or none. Valid PIDs must 13-bit values greater than 31. If no PIDs are provided (pid == 0) then they will be generated automatically.
                          format: int32
                          maximum: 8191
                          exclusiveMaximum: true
                      additionalProperties: false
                    minItems: 1
                  id:
                    type: string
                    description: SRT publication ID. Must be unique.
                    minLength: 1
                    pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
                  pmt_pid:
                    type: integer
                    description: MPEG-TS PMT PID. PIDs should be set on the PMT, SCTE-35 and all encoders or none. Valid PIDs must 13-bit values greater than 31. If no PIDs are provided (pid == 0) then they will be generated automatically.
                    format: int32
                    maximum: 8191
                    exclusiveMaximum: true
                  scte35_pid:
                    type: integer
                    description: MPEG-TS SCTE-35 PID. PIDs should be set on the PMT, SCTE-35, and all encoders or none. Valid PIDs must 13-bit values greater than 31. If no PIDs are provided (pid == 0) then they will be generated automatically.
                    format: int32
                    maximum: 8191
                    exclusiveMaximum: true
                  url:
                    type: string
                    format: uri
                    minLength: 1
                    pattern: ^srt://
                  video_encoders:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          minLength: 1
                        pid:
                          type: integer
                          description: Output MPEG-TS PID. PIDs should be set on the PMT, SCTE-35 and all encoders or none. Valid PIDs must 13-bit values greater than 31. If no PIDs are provided (pid == 0) then they will be generated automatically.
                          format: int32
                          maximum: 8191
                          exclusiveMaximum: true
                      additionalProperties: false
                    minItems: 1
                additionalProperties: false
          additionalProperties: false
        region:
          type: string
          description: Region represents the general geolocation for transcoding and stream egress from iStreamPlanet. If no region is provided at channel creation time, then 'US_WEST' is used.
          enum:
            - US_WEST
            - US_EAST
        resource_class:
          type: string
          description: If the ResourceClass is unspecified the channel will default to run in the 'DYNAMIC' ResourceClass. Note that changing the ResourceClass for a running channel is supported and will be performed with no downtime.
          enum:
            - DYNAMIC
            - STATIC
        self:
          type: string
          description: Self link for the channel.
          format: uri-reference
          readOnly: true
        signaling:
          type: object
          description: Signaling configures in-band signaling (i.e. SCTE-35).
          properties:
            blackout_settings:
              type: object
              description: 'Configure blackout: replacing content with custom slates based on program signaling.'
              properties:
                default_blackout_slate_url:
                  type: string
                  description: Default slate URL to use for blackouts. Can be overridden by the 'slates' field.
                  format: uri-reference
                  example: https://example.com/blackout.ts
                force_blackout_segments:
                  type: array
                  description: List of signaling segment types to force blackout, e.g. add 'SPLICE_INSERT' to blackout all ads signaled via SCTE-35 splice_insert.
                  items:
                    type: string
                    enum:
                      - SPLICE_INSERT
                      - CONTENT_ID
                      - PROGRAM
                      - PROGRAM_BLACKOUT_OVERRIDE
                      - PROGRAM_BREAKAWAY
                      - CHAPTER
                      - BREAK
                      - OPENING_CREDIT
                      - CLOSING_CREDIT
                      - PROVIDER_PLACEMENT_OP
                      - DISTRIBUTOR_PLACEMENT_OP
                      - PROVIDER_OVERLAY_OP
                      - DISTRIBUTOR_OVERLAY_OP
                      - PROVIDER_AD
                      - DISTRIBUTOR_AD
                      - UNSCHEDULED_EVENT
                      - NETWORK
                      - SLATE
                      - NOT_INDICATED
                      - TIMED_METADATA
                honor_web_delivery_restriction:
                  type: boolean
                  description: Determines whether to honor the web_delivery_allowed attribute in SCTE-35 segmentation descriptors. When this is enabled, a segmentation descriptor with web_delivery_allowed=false will trigger a blackout.
                slates:
                  type: array
                  description: Per-segment type slate overrides.
                  items:
                    type: object
                    properties:
                      blackout_slate_url:
                        type: string
                        description: Blackout slate URL to use for the specified segments. It must have one audio and one video stream. Either MPEG2 or H.264 can be used.
                        format: uri-reference
                        example: https://example.com/blackout.ts
                      segments:
                        type: array
                        description: Segment types that shall utilize the blackout slate URL. Any segment type defined here _must_ also be present in the parent signaling configuration.
                        items:
                          type: string
                          enum:
                            - SPLICE_INSERT
                            - CONTENT_ID
                            - PROGRAM
                            - PROGRAM_BLACKOUT_OVERRIDE
                            - PROGRAM_BREAKAWAY
                            - CHAPTER
                            - BREAK
                            - OPENING_CREDIT
                            - CLOSING_CREDIT
                            - PROVIDER_PLACEMENT_OP
                            - DISTRIBUTOR_PLACEMENT_OP
                            - PROVIDER_OVERLAY_OP
                            - DISTRIBUTOR_OVERLAY_OP
                            - PROVIDER_AD
                            - DISTRIBUTOR_AD
                            - UNSCHEDULED_EVENT
                            - NETWORK
                            - SLATE
                            - NOT_INDICATED
                            - TIMED_METADATA
                      upids:
                        type: array
                        description: Exclusive list of hex string encoded colon separated UPID Type:ID pairs (e.g. '0A:1A2B3C4D') to enable this blackout slate on.
                        items:
                          type: string
                    additionalProperties: false
              additionalProperties: false
            disable_inband_parsing:
              type: boolean
              description: Disable parsing SCTE-35 in-band signaling. Out-of-band signaling is still allowed.
            scte_pid:
              type: integer
              description: Defines the specific PID containing the SCTE that the transcoder should process. Using '0' (default value) will pick the first PID containing SCTE-35 in the PMT.
              format: int32
              minimum: 0
            segment_settings:
              type: array
              description: Settings that apply to specific segments.
              items:
                type: object
                properties:
                  default_duration_secs:
                    type: integer
                    description: Specifies the duration of a segment when the in-band SCTE-35 that initiates it (e.g. Distributor Placement Opportunity Start) is missing an explicit duration. N.B. for program and ad types, this also affects 'Simple Program' and 'Simple Ad' markers, respectively.
                    format: int32
                    minimum: 0
                    maximum: 172800
                  emit_default_duration:
                    type: boolean
                    description: Determines whether to include the default duration in the output SCTE-35 messages when the input SCTE-35 message did not specify a duration.
                  offset_millis:
                    type: integer
                    description: Specifies a 'correction' to the splice_time of in-band SCTE-35 in milliseconds.
                    format: int32
                    minimum: -4000
                    maximum: 4000
                  segment_end_mode:
                    type: string
                    description: Determines which Segment End signaling mode to use for the provided segments. If unspecified, defaults to MATCH_END_EVENT_ID.
                    enum:
                      - MATCH_END_EVENT_ID
                      - IGNORE_END_EVENT_ID
                      - IGNORE_END_SIGNAL
                  segments:
                    type: array
                    description: Specifies the list of which segment types this setting applies to. Any segment type defined here _must_ also be present in the parent signaling configuration.
                    items:
                      type: string
                      enum:
                        - SPLICE_INSERT
                        - CONTENT_ID
                        - PROGRAM
                        - PROGRAM_BLACKOUT_OVERRIDE
                        - PROGRAM_BREAKAWAY
                        - CHAPTER
                        - BREAK
                        - OPENING_CREDIT
                        - CLOSING_CREDIT
                        - PROVIDER_PLACEMENT_OP
                        - DISTRIBUTOR_PLACEMENT_OP
                        - PROVIDER_OVERLAY_OP
                        - DISTRIBUTOR_OVERLAY_OP
                        - PROVIDER_AD
                        - DISTRIBUTOR_AD
                        - UNSCHEDULED_EVENT
                        - NETWORK
                        - SLATE
                        - NOT_INDICATED
                        - TIMED_METADATA
                    uniqueItems: true
                  tier_filter:
                    type: object
                    description: Specifies how to filter the provided segments, when received through in-band SCTE-35, based on the SCTE-35 SpliceInfoSection Tier.
                    properties:
                      explicit_tier:
                        type: object
                        description: Only one of ['explicit_tier'] may be set.
                        properties:
                          values:
                            type: array
                            items:
                              type: integer
                              format: int32
                        additionalProperties: false
                    additionalProperties: false
                additionalProperties: false
            segments:
              type: array
              description: Segment types to process for in-band signaling.
              items:
                type: string
                enum:
                  - SPLICE_INSERT
                  - CONTENT_ID
                  - PROGRAM
                  - PROGRAM_BLACKOUT_OVERRIDE
                  - PROGRAM_BREAKAWAY
                  - CHAPTER
                  - BREAK
                  - OPENING_CREDIT
                  - CLOSING_CREDIT
                  - PROVIDER_PLACEMENT_OP
                  - DISTRIBUTOR_PLACEMENT_OP
                  - PROVIDER_OVERLAY_OP
                  - DISTRIBUTOR_OVERLAY_OP
                  - PROVIDER_AD
                  - DISTRIBUTOR_AD
                  - UNSCHEDULED_EVENT
                  - NETWORK
                  - SLATE
                  - NOT_INDICATED
                  - TIMED_METADATA
              uniqueItems: true
          additionalProperties: false
        tags:
          type: object
          description: Use ChannelMetadata when possible instead of tags.
          properties:
            custom:
              type: object
              description: Custom tags to be added to metrics and logs for this channel. In Datadog, the tags will be prefixed with 'dy_' to avoid collisions with system tags.
              additionalProperties:
                type: string
            monitored:
              type: boolean
              description: Indicates whether this channel is monitored by automation.
          additionalProperties: false
        transcode:
          type: object
          description: Transcode configures audio/video conversion settings.
          properties:
            audio_encoders:
              type: array
              description: Audio encoders specify audio conversion settings, e.g. channels, samples, codec, bitrate, etc.
              items:
                type: object
                properties:
                  audio_source_id:
                    type: string
                    description: Audio source ID specifies which stream within the audio source to use.
                    minLength: 1
                  bit_rate:
                    type: integer
                    description: Bit rate specifies the constant number of bits used per second. Higher values result in better audio quality but bigger file sizes.
                    format: int32
                    example: 128000
                    minimum: 1000
                    exclusiveMinimum: true
                  channels:
                    type: integer
                    description: 'Channels specifies the number of real audio channels to encode. The available options depend on the audio codec. The encoder supports different channel configurations based on the codec; AAC 1-2 channels, AC3 supports 2 or 6, and EAC3 supports 2 or 6. For example, for AC3 5.1 one would set 6 channels. Channel configurations are as follows: 1 - Mono (C) 2 - Stereo / Dolby 2.0 (L, R) 6 - Dolby 5.1 (L, C, R, l, r, LFE) Dolby Atmos layouts such as 5.1.4 are achieved by setting this field to 6 and configuring ddp_joc_logical_channels in EAC3Settings as desired.'
                    format: int32
                    example: 2
                    minimum: 0
                    exclusiveMinimum: true
                    maximum: 6
                  codec:
                    type: string
                    description: Codec specifies the audio data encoding format.
                    enum:
                      - AAC_LC
                      - AC3
                      - EAC3
                      - HE_AAC
                  eac3:
                    type: object
                    description: Only one of ['eac3'] may be set.
                    properties:
                      ddp_joc_logical_channels:
                        type: integer
                        description: 'If non-zero, configures the encoder to compute JOC metadata (i.e. Dolby Atmos) for the given logical speaker layout. The transcoder does not guarantee any particular bed layout in the JOC metadata, and this setting currently has no effect on that. It merely determines the channel layout to which all inputs are converted before encoding. Legal values are: 8 - 5.1.2 10 - 5.1.4 For sources with raw PCM input and more than 6 channels, configure this according to the expected input channel layout. For channels which expect to take a 7.1 EAC-3 input, configure to 8. For all other cases, including upmixing from 5.1 or fewer channels or any kind of Atmos input, configure to 10. This setting is mutually exclusive with ddp_joc_passthrough.'
                        format: int32
                        example: 10
                      ddp_joc_passthrough:
                        type: boolean
                        description: Indicates that the source will contain Joint Object Coding metadata (Dolby Atmos) and that the encoder should operate in passthrough mode. https://learning.dolby.com/hc/en-us/articles/4406039180564-Appendix-C-Dolby-Atmos-Delivery-Codecs- When the audio encoder is configured with this setting, the source audio will be repackaged without being decoded and re-encoded. If the source is not DD+JOC, it will be replaced with silence.
                      drc_line_mode:
                        type: string
                        description: If specified, overrides the dynamic range control line mode. If unspecified and the source audio is AC-3 or EAC-3, the DRC line mode matches the input. If unspecified and the source audio is any other codec, the encoder uses an unspecified default which may change without notice.
                        enum:
                          - DRC_FILM_STANDARD
                          - DRC_FILM_LIGHT
                          - DRC_MUSIC_STANDARD
                          - DRC_MUSIC_LIGHT
                          - DRC_SPEECH
                        example: DRC_FILM_STANDARD
                      drc_rf_mode:
                        type: string
                        description: If specified, overrides the dynamic range control RF mode. If unspecified and the source audio is AC-3 or EAC-3, the DRC RF mode matches the input. If unspecified and the source audio is any other codec, the encoder uses an unspecified default which may change without notice.
                        enum:
                          - DRC_FILM_STANDARD
                          - DRC_FILM_LIGHT
                          - DRC_MUSIC_STANDARD
                          - DRC_MUSIC_LIGHT
                          - DRC_SPEECH
                        example: DRC_FILM_STANDARD
                      surround_phase_shift:
                        type: string
                        description: If specified, overrides whether surround phase shift is enabled. If unspecified and the source audio is AC-3 or EAC-3, the surround phase shift mode matches the input. If unspecified and the source audio is any other codec, the encoder uses an unspecified default which may change without notice.
                        enum:
                          - SURROUND_PHASE_SHIFT_ENABLED
                          - SURROUND_PHASE_SHIFT_DISABLED
                        example: SURROUND_PHASE_SHIFT_ENABLED
                    additionalProperties: false
                  id:
                    type: string
                    description: Encoder ID. IDs must be unique for all encoders. This ID is referenced when setting up playlist publishing.
                    example: aac128
                    minLength: 1
                  loudness:
                    type: object
                    description: Loudness normalization settings. Loudness configuration is required for non-passthrough AC-3 and EAC-3.
                    properties:
                      dialog_intel:
                        type: boolean
                        description: Enable Dialog Intelligence. Only supported for (E)AC-3 encoders. This may only be set if lkfs is explicitly configured to -24.
                      lkfs:
                        type: integer
                        description: Loudness normalization LKFS setting. Default value is -24.
                        format: int32
                      peak_limit:
                        type: number
                        description: Peak Limit. The only allowable value is -2.0. This field is soft-deprecated and will be unsupported in a future transcoder version. In the current transcoder version, the values 0.0 and -2.0 both produce the same configuration.
                        format: float
                    additionalProperties: false
                  sample_rate:
                    type: integer
                    description: 'Sample rate specifies the number of audio samples in hertz. The available options depend on the audio codec: AAC-LC supports 8000, 11025, 12000, 16000, 22050, 24000, 32000, 44100, 48000, 64000, 88200, and 96000. HE-AAC supports 16000, 22050, 24000, 32000, 44100, and 48000. AC3/EAC3 support only 48000.'
                    format: int32
                    example: 48000
                    minimum: 0
                    exclusiveMinimum: true
                  tag:
                    type: string
                    description: Used by the player to map audio tracks to a quadrant, which represents a single view in a multiview layout. This value is opaque and not used by Aventus.
                additionalProperties: false
              minItems: 1
            debug_overlay:
              type: boolean
              description: 'Deprecated: Do not use. Debug_overlay overlays debugging information from the transcoder into the top right of the video output. The overlay is burned into the video and will be visible to end-users if enabled. Do not enable on customer facing channels. Requires a transcoder restart if the state is changed. The default value is false, which disables the overlay. This setting is deprecated in favour of debug_overlays.'
              deprecated: true
            debug_overlays:
              type: object
              description: The debug_overlays specifies the position of the debugging overlay information from the transcoder into each video output. The overlay is burned into the video and will be visible to end-users if enabled. The default position value is OFF, which results in no debug overlay. Do not enable on customer facing channels. Requires a transcoder restart if the state is changed.
              properties:
                position:
                  type: string
                  description: Position of the debug overlay within the output frame.
                  enum:
                    - "OFF"
                    - TOP_LEFT
                    - TOP_RIGHT
                    - BOTTOM_LEFT
                    - BOTTOM_RIGHT
              additionalProperties: false
            dynamic_resources:
              type: object
              description: Configures external dynamic resources which will be downloaded by the transcoder and made available for use in the dynamic state API. Each key in the map is used to identify the resource from any location wishing to reference it (e.g. the dynamic state API).
              additionalProperties:
                type: object
                properties:
                  type:
                    type: string
                    description: Identifies the intended use of this resource.
                    enum:
                      - GRAPHIC
                      - FONT
                    example: GRAPHIC
                  url:
                    type: string
                    description: The URL from which the resource will be downloaded.
                    format: uri-reference
                    example: https://static-wbd-cdn.wbd.com/default_images/wbd-logo-card-1200x675_0.jpg
                additionalProperties: false
            feature_flags:
              type: array
              description: Feature flag strings enable experimental transcode features or functionality that are not yet or never will be promoted to the channeldoc model proper. Do not enable on customer facing channels.
              items:
                type: string
            id3_mode:
              type: string
              description: Specify how to process ID3 tags from the input source. If not specified, ID3 tags in the source will be ignored.
              enum:
                - PASSTHROUGH
            overlays:
              type: array
              description: List of overlays. An overlay is an image that will be rendered on top of the source video. Only one overlay is supported at the moment. If specified, the overlay will be always rendered unless a video slate is on.
              items:
                type: object
                properties:
                  image_url:
                    type: string
                    description: The URL of the image overlay. Only PNG is supported at the moment. The image's dimensions should match those of source for perfect pixel placement.
                    minLength: 1
                additionalProperties: false
              maxItems: 1
            resize_mode:
              type: string
              description: 'Deprecated: Do not use. Deprecated: This field was never implemented. See resize_mode on VideoEncoder instead.'
              enum:
                - STRETCH
                - LETTERBOX
                - CENTER_CROP
              deprecated: true
            segmenter:
              type: object
              description: Segmenter configures how video GOPs and segments get generated.
              properties:
                gop_duration_secs:
                  type: number
                  description: GOP (group of pictures) duration specifies the amount of time between I-frames. Shorter durations can lower quality slightly as each I-frame uses more bits than P- & B-frames but can provide a better seeking experience when enabling thumbnail encoders and/or I-Frame Only playlists.
                  format: double
                  example: 2
                  minimum: 0
                  exclusiveMinimum: true
                segment_duration_secs:
                  type: number
                  description: Segment duration specifies the target duration of a single segment. Segments shorter than this duration can occur at signaling boundaries. This value _must_ be a multiple of the GOP duration value.
                  format: double
                  example: 6
                  minimum: 0
                  exclusiveMinimum: true
                temi:
                  type: boolean
                  description: Include TEMI (Timeline and External Media Information ISO/IEC 13818-1:2019 Annex U) to mpeg-ts segments.
              additionalProperties: false
            subtitle_encoders:
              type: array
              description: Subtitle encoders specify how text-based subtitles are extracted into separate segments. They are not used to describe CEA 608 captions, which remain part of the video codec.
              items:
                type: object
                properties:
                  atsc_captions:
                    type: object
                    description: Extract subtitles from the ATSC caption encodings. The captions themselves are first sourced according to the Source.captions_source field. Only one of ['teletext', 'atsc_captions'] may be set.
                    properties:
                      cea608:
                        type: integer
                        description: 'If non-zero, decode captions from the CEA-608 logical channel number identified by this number. If zero, only CTA-708 captions will be decoded. The ''logical channel number'' refers to the CCx name commonly used in literature: - CC1 is the NTSC odd field subchannel 1, considered the primary caption stream. - CC2 is the NTSC odd field subchannel 2, considered the tertiary caption stream. - CC3 is the NTSC even field subchannel 1, considered the secondary caption stream. - CC4 is the NTSC even field subchannel 2, considered the quaternary caption stream.'
                        format: int32
                        example: 1
                        minimum: 0
                        maximum: 4
                      cta708:
                        type: integer
                        description: 'If non-zero, decode captions from the CTA-708 service identified by this number. If zero, only CEA-608 captions will be decoded. It is allowed to set both ''cta708'' and ''cea608''. In this case, the transcoder will decode both streams, and will use the CTA-708 data if the stream is active and fall back to CEA-608 otherwise. Fallback from CTA-708 to CEA-608 requires a timeout to elapse, but switching from CEA-608 to CTA-708 occurs the instant the CTA-708 stream becomes active. CTA-708 recommends the following correspondence between the two encodings: - CTA-708 service 1 == CEA-608 CC1 (primary captions) - CTA-708 service 2 == CEA-608 CC3 (secondary captions) - CTA-708 service 3 == CEA-608 CC2 (tertiary captions) - CTA-708 service 4 == CEA-608 CC4 (quaternary captions) However, some sources use an alternate convention where CTA-708 service 3 is the secondary caption service (corresponding to CC3) and CTA-708 service 2 is the tertiary caption service.'
                        format: int32
                        example: 1
                        minimum: 0
                        maximum: 63
                    additionalProperties: false
                  id:
                    type: string
                    description: Encoder ID. IDs must be unique for all encoders. This ID is referenced when setting up playlist publishing.
                    minLength: 1
                  language:
                    type: string
                    description: Language is the code for the language in which the subtitles are written.
                    example: en
                    minLength: 2
                  tag:
                    type: string
                    description: Used by the player to map text tracks to a quadrant, which represents a single view in a multiview layout. This value is opaque and not used by Aventus.
                  teletext:
                    type: object
                    description: Extract subtitles from an embedded Teletext stream. The teletext PID is determined automatically. Only one of ['teletext', 'atsc_captions'] may be set.
                    properties:
                      charset_set:
                        type: string
                        description: 'If set, forces interpretation of the National Option field to choose from character sets in this specific set of character sets. Determining the correct value for this configuration is non-trivial, but there are some guidelines. Usually, all languages in one Teletext stream will use the same charset set. If only one set can handle all the languages, it''s probably that one. Some of the sets roughly correspond to geopolitical divisions from the Cold War era: SET3 is roughly Yugoslavia plus Romania; SET4 is the rest of the former USSR/Warsaw Pact, including East Germany but excluding Poland; SET8 is Africa; SET10 is the Middle East. There does not seem to be any standard name for this configuration. The standard calls it ''the upper four bits of Triplet 1'', which is highly ambiguous and nonsensical outside of the context of that usage. The decoder ffmpeg uses calls it ''region'', but most of the sets cannot cleanly be described as any particular geographic region.'
                        enum:
                          - SET0
                          - SET1
                          - SET2
                          - SET3
                          - SET4
                          - SET6
                          - SET8
                          - SET10
                      language:
                        type: string
                        description: The three-letter language code declared in the Teletext descriptor in the source PMT. If the language is not found, the subtitles will be empty. language + type configuration is mutually exclusive with magazine + page configuration.
                        example: swe
                      magazine:
                        type: integer
                        description: The teletext magazine number where the subtitles are found. magazine + page configuration is mutually exclusive with language + type configuration.
                        format: int32
                        example: 1
                        minimum: 0
                      page:
                        type: integer
                        description: The teletext page number where the subtitles are found. magazine + page configuration is mutually exclusive with language + type configuration.
                        format: int32
                        example: 170
                        minimum: 0
                      page_type:
                        type: string
                        description: 'The Teletext page type declared in the Teletext descriptor in the source PMT. If this field is unset, it will be inferred from the ''usage'' field on the SubtitleEncoder using this table: SubtitleEncoder.CLOSED_CAPTIONS => TeletextSource.PAGE_TYPE_SUBTITLE_HEARING_IMPAIRED SubtitleEncoder.SUBTITLES => TeletextSource.PAGE_TYPE_SUBTITLE'
                        enum:
                          - PAGE_TYPE_INITIAL
                          - PAGE_TYPE_SUBTITLE
                          - PAGE_TYPE_ADDITIONAL_INFORMATION
                          - PAGE_TYPE_PROGRAMME_SCHEDULE
                          - PAGE_TYPE_SUBTITLE_HEARING_IMPAIRED
                    additionalProperties: false
                  usage:
                    type: string
                    description: Usage indicates how this encoder should be flagged in generated manifests.
                    enum:
                      - CLOSED_CAPTIONS
                      - SUBTITLES
                additionalProperties: false
            thumbnail_encoders:
              type: array
              description: Thumbnail encoders specify how to create image snapshots of the video stream.
              items:
                type: object
                properties:
                  height:
                    type: integer
                    description: Height specifies the thumbnail image height in pixels.
                    format: int32
                    example: 180
                    minimum: 0
                    exclusiveMinimum: true
                  id:
                    type: string
                    description: Encoder ID. IDs must be unique for all encoders. This ID is referenced when setting up playlist publishing.
                    minLength: 1
                  width:
                    type: integer
                    description: Width specifies the thumbnail image width in pixels.
                    format: int32
                    example: 320
                    minimum: 0
                    exclusiveMinimum: true
                additionalProperties: false
            video_encoders:
              type: array
              description: Video encoders specify video conversion settings, e.g. dimensions, codec, bitrate, etc.
              items:
                type: object
                properties:
                  bit_rate:
                    type: integer
                    description: Bit rate specifies the number in bits used per second. Higher values result in better video quality but bigger file sizes. For H.264 this value is the target of the constrained variable bit rate.
                    format: int32
                    example: 6000000
                    minimum: 1000
                    exclusiveMinimum: true
                  frame_rate:
                    type: string
                    description: Frame rate specifies the number of images that are shown per second when playing back the video. For the best quality playback, this should match or be a multiple of the input source video stream.
                    enum:
                      - FR_23_98
                      - FR_24
                      - FR_25
                      - FR_29_97
                      - FR_30
                      - FR_50
                      - FR_59_94
                      - FR_60
                    example: FR_60
                  h264:
                    type: object
                    description: Configure the encoder to use the H.264 codec. Only one of ['H264Settings', 'H265Settings'] may be set.
                    properties:
                      profile:
                        type: string
                        description: H.264 video profile, which defines various encoder features and settings. See https://en.wikipedia.org/wiki/Advanced_Video_Coding#Profiles for details.
                        enum:
                          - BASELINE
                          - MAIN
                          - HIGH
                          - HIGH_10
                          - HIGH_422
                    additionalProperties: false
                  h265:
                    type: object
                    description: Configure the encoder to use the H.265 codec. Only one of ['H264Settings', 'H265Settings'] may be set.
                    properties:
                      hdr:
                        type: object
                        description: Configure the HDR settings.
                        properties:
                          dolby_vision:
                            type: object
                            description: Only one of ['hdr10', 'dolby_vision'] may be set.
                            properties:
                              profile5:
                                type: object
                                description: Only one of ['profile5', 'profile81', 'profile84'] may be set.
                                additionalProperties: false
                              profile81:
                                type: object
                                description: Only one of ['profile5', 'profile81', 'profile84'] may be set.
                                properties:
                                  clli:
                                    type: object
                                    properties:
                                      max_cll:
                                        type: number
                                        description: Maximum Content Light Level (nits).
                                        format: double
                                        minimum: 0
                                        maximum: 10000
                                      max_fall:
                                        type: number
                                        description: Maximum Frame-Average Light Level (nits).
                                        format: double
                                        minimum: 0
                                        maximum: 10000
                                    additionalProperties: false
                                  level8:
                                    type: array
                                    description: Configures custom Level 8 metadata. Each target may be configured at most once. Unconfigured targets use the Dolby LDP SIDK defaults.
                                    items:
                                      type: object
                                      properties:
                                        clip_trim:
                                          type: number
                                          description: Control the clipping of whites. A positive value will clip highlights and bright whites less, while a negative value will clip more.
                                          format: double
                                          minimum: -1
                                          maximum: 1
                                        ms_weight_plus_one:
                                          type: number
                                          description: Amount of multiscale detail to apply. This is offset from the values used in Dolby documentation so that the Protobuf default of 0.0 corresponds to the Dolby default of -1.0. Values > 1.0 will retain more details when Dolby Vision is mapping down to a lower luminance. Values < 1.0 will lower detail contrast when Dolby Vision is mapping down to a lower luminance. The special value of 0.0 will disable multiscale detail.
                                          format: double
                                          minimum: 0
                                          maximum: 2
                                        target:
                                          type: string
                                          description: Identifies which Level 8 trim target is being configured.
                                          enum:
                                            - REC709_100NITS
                                            - BT2020_600NITS
                                            - BT2020_1000NITS
                                            - CUSTOM
                                        target_mid_contrast:
                                          type: number
                                          description: Controls the contrast of midtones. A positive value will increase the midtone contrast, while a negative value will decrease the midtone contrast.
                                          format: double
                                          minimum: -1
                                          maximum: 1
                                        trim_chroma_weight:
                                          type: number
                                          description: ChromaWeight to apply. Additional mapping for saturated colors. Higher value implies stronger effect.
                                          format: double
                                          minimum: -1
                                          maximum: 1
                                        trim_gain:
                                          type: number
                                          description: Gain to apply. This is a scaling factor for code values in a color component.
                                          format: double
                                          minimum: -1
                                          maximum: 1
                                        trim_gamma:
                                          type: number
                                          description: Gamma to apply. This is a power function in normalized code value in a color component.
                                          format: double
                                          minimum: -1
                                          maximum: 1
                                        trim_lift:
                                          type: number
                                          description: Lift to apply. This is an offset of code values in a color component.
                                          format: double
                                          minimum: -1
                                          maximum: 1
                                        trim_saturation_gain:
                                          type: number
                                          description: Saturation gain to apply. Gain on P and T components. Higher value implies stronger effect.
                                          format: double
                                          minimum: -1
                                          maximum: 1
                                      additionalProperties: false
                                  mdcv:
                                    type: object
                                    properties:
                                      color_profile:
                                        type: string
                                        description: Identifies color primaries and white point.
                                        enum:
                                          - BT2020
                                          - P3_D65
                                          - BT709
                                      max_dml:
                                        type: number
                                        description: Maximum display mastering luminance (nits). Must be greater than min_dml.
                                        format: double
                                        minimum: 0
                                        maximum: 10000
                                      min_dml:
                                        type: number
                                        description: Minimum display mastering luminance (nits).
                                        format: double
                                        minimum: 0
                                        maximum: 10000
                                    additionalProperties: false
                                additionalProperties: false
                              profile84:
                                type: object
                                description: Only one of ['profile5', 'profile81', 'profile84'] may be set.
                                additionalProperties: false
                            additionalProperties: false
                          hdr10:
                            type: object
                            description: Only one of ['hdr10', 'dolby_vision'] may be set.
                            properties:
                              clli:
                                type: object
                                properties:
                                  max_cll:
                                    type: number
                                    description: Maximum Content Light Level (nits).
                                    format: double
                                    minimum: 0
                                    maximum: 10000
                                  max_fall:
                                    type: number
                                    description: Maximum Frame-Average Light Level (nits).
                                    format: double
                                    minimum: 0
                                    maximum: 10000
                                additionalProperties: false
                              mdcv:
                                type: object
                                properties:
                                  color_profile:
                                    type: string
                                    description: Identifies color primaries and white point.
                                    enum:
                                      - BT2020
                                      - P3_D65
                                      - BT709
                                  max_dml:
                                    type: number
                                    description: Maximum display mastering luminance (nits). Must be greater than min_dml.
                                    format: double
                                    minimum: 0
                                    maximum: 10000
                                  min_dml:
                                    type: number
                                    description: Minimum display mastering luminance (nits).
                                    format: double
                                    minimum: 0
                                    maximum: 10000
                                additionalProperties: false
                            additionalProperties: false
                        additionalProperties: false
                      profile:
                        type: string
                        description: H.265 video profile, which defines various encoder features and settings. See https://en.wikipedia.org/wiki/High_Efficiency_Video_Coding#Profiles for details.
                        enum:
                          - MAIN
                          - MAIN_10
                    additionalProperties: false
                  height:
                    type: integer
                    description: 'Height specifies the video height in pixels. Must be a multiple of two. Valid resolution ranges, width x height are: H.264: 2x2 to 1920x1080 or 1080x1920 H.265: 130x34 to 3840x2160 or 2160x3840 The upper limit is dictated by the number of pixels.'
                    format: int32
                    example: 1080
                    minimum: 1
                    exclusiveMinimum: true
                  id:
                    type: string
                    description: Encoder ID. IDs must be unique for all encoders. This ID is referenced when setting up playlist publishing.
                    example: 1080p60
                    minLength: 1
                  resize_mode:
                    type: string
                    description: Indicates how to handle the case where the input aspect ratio does not match the aspect ratio of this VideoEncoder.
                    enum:
                      - STRETCH
                      - LETTERBOX
                      - CENTER_CROP
                  width:
                    type: integer
                    description: 'Width specifies the video width in pixels. Must be a multiple of two. Valid resolution ranges, width x height are: H.264: 2x2 to 1920x1080 or 1080x1920 H.265: 130x34 to 3840x2160 or 2160x3840 The upper limit is dictated by the number of pixels.'
                    format: int32
                    example: 1920
                    minimum: 1
                    exclusiveMinimum: true
                additionalProperties: false
              minItems: 1
          additionalProperties: false
      additionalProperties: false
      required:
        - ingest
        - transcode
    ChannelPlayback:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        cmaf:
          type: array
          description: CMAF playback configurations
          items:
            type: object
            properties:
              content_protection:
                type: object
                description: Content Protection settings
                properties:
                  atlas:
                    type: object
                    description: Only one of ['simple', 'atlas', 'cpix'] may be set.
                    properties:
                      asset_id:
                        type: string
                        description: The Asset Identifier which was taken from the token entitlement service request.
                      company_id:
                        type: string
                        description: The Identifier of the Company that this token belongs.
                      drms:
                        type: array
                        description: DRM system keys to request
                        items:
                          type: string
                          enum:
                            - WIDEVINE
                            - FAIRPLAY
                            - PRIMETIME
                            - PLAYREADY
                            - W3C_COMMON_CLEAR_KEY
                            - BULK_FILE
                        uniqueItems: true
                      widevine_v0_pssh_box:
                        type: boolean
                        description: When TRUE the KeyID is not embedded in the pssh box which sets the version to 0. Defaults to generating v1 pssh_boxes that includes the key_id
                    additionalProperties: false
                  bulk_file:
                    type: object
                    description: Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
                    properties:
                      iv_rotation:
                        type: string
                        description: How often the IV should be rotated and how it should be created
                        enum:
                          - RANDOM_PER_KEY
                          - PER_SEGMENT_NUMBER
                          - UNIQUE_PER_SEGMENT
                    additionalProperties: false
                  common:
                    type: object
                    description: Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
                    properties:
                      scheme_type:
                        type: string
                        description: Defines the scheme that can be used with Common Encryption
                        enum:
                          - CENC
                          - CBCS
                    additionalProperties: false
                  cpix:
                    type: object
                    description: Only one of ['simple', 'atlas', 'cpix'] may be set.
                    properties:
                      certificates_id:
                        type: string
                        description: Unique ID used for certificate settings, unique per distributor.
                      content_id:
                        type: string
                        description: (Optional) Content ID that identifies this channel in the CPIX service. Value is defined by the DRM system owner, and if defined will be included as part of a POST request.
                      credentials_id:
                        type: string
                        description: Unique ID used for credentials settings, unique per distributor.
                      decryption_key_id:
                        type: string
                        description: Unique ID of the decryption key to use in case the server response contains content keys encrypted. The key is unique per distirutor, and configured ahead of time by the publishing team and the CPIX service owner.
                      drms:
                        type: array
                        description: (Optional) DRM system keys to request. If not defined a GET request will be done, and any key returned will be handled. If defined, random kid(s) (key ids) will be generated on rotation for each DRM system, and a POST request will be done to create them.
                        items:
                          type: string
                          enum:
                            - WIDEVINE
                            - FAIRPLAY
                            - PRIMETIME
                            - PLAYREADY
                            - W3C_COMMON_CLEAR_KEY
                            - BULK_FILE
                        uniqueItems: true
                      headers_id:
                        type: string
                        description: (Optional) An identifier to a list of HTTP headers to be added to the request sent to the CPIX service.
                      uri:
                        type: string
                        description: CPIX service URI
                        format: uri-reference
                        minLength: 1
                    additionalProperties: false
                  key_rotation:
                    type: object
                    description: Configures how keys should be rotated
                    properties:
                      interval_secs:
                        type: number
                        description: Rotate keys based on the specified time interval. If Program is also provided then this time interval will only apply to media segments that are outside of program boundaries. If Program is NOT provided then only this time interval will be used to decided when to rotate keys.
                        format: float
                        minimum: 300
                      program:
                        type: boolean
                        description: Rotate keys on (SCTE35) program boundaries such that no two programs will be protected with the same key.
                      program_overlap_skip_encrypt:
                        type: boolean
                        description: Do not encrypt segments that are part of more than one SCTE-35 program.
                    additionalProperties: false
                  sample_aes:
                    type: object
                    description: Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
                    additionalProperties: false
                  simple:
                    type: object
                    description: Only one of ['simple', 'atlas', 'cpix'] may be set.
                    properties:
                      publish_points:
                        type: array
                        description: Pub points where keys should be published. If multiple are specified, only one needs to succeed to consider the key successfully published.
                        items:
                          type: object
                          properties:
                            basic_auth:
                              type: object
                              description: Only one of ['basic_auth'] may be set.
                              properties:
                                password:
                                  type: string
                                  description: Plain text password for basic auth.
                                username:
                                  type: string
                                  description: Username for basic auth.
                              additionalProperties: false
                            compression:
                              type: string
                              description: Configures whether or not (and how) to compress manifests being published to the origin. If not specified, manifests will not be compressed.
                              enum:
                                - NONE
                                - GZIP
                            do_not_monitor:
                              type: boolean
                              description: (Optional) Specifies if this pubpoint should not be monitored by PLM.
                            headers:
                              type: object
                              description: Allows custom HTTP headers to be set via configuration for all HTTP requests.
                              additionalProperties:
                                type: string
                            method:
                              type: string
                              description: Method overrides what HTTP method to specify in requests to the Publish Point. If not specified the service will default to POST.
                            playback_base_url:
                              type: string
                              description: The base URL where published playlists will be able to be obtained. This is often different than the publish_base_url for CDN publishing workflows.
                              format: uri-reference
                            playback_query_params:
                              type: string
                              description: 'Specifies any query parameters that will be added to playback urls. Should not include the initial ''?'' Example: ''foo=bar&q=golang'''
                            publish_base_url:
                              type: string
                              description: The base URL where generated playlists will be sent/published. Each publish point requires a unique 'publish_base_url'.
                              format: uri-reference
                          additionalProperties: false
                      require_publish:
                        type: string
                        description: Indicates which publish points must succeed for segment publishing to use the keys.
                        enum:
                          - ANY
                          - ALL
                    additionalProperties: false
                additionalProperties: false
              partial_presentations:
                type: array
                description: Partial Presentation Playback URLs
                items:
                  type: string
              url:
                type: string
                description: Playback URL
            additionalProperties: false
            required:
              - url
        dash:
          type: array
          description: Dash playback configurations
          items:
            type: object
            properties:
              content_protection:
                type: object
                description: Content Protection settings
                properties:
                  atlas:
                    type: object
                    description: Only one of ['simple', 'atlas', 'cpix'] may be set.
                    properties:
                      asset_id:
                        type: string
                        description: The Asset Identifier which was taken from the token entitlement service request.
                      company_id:
                        type: string
                        description: The Identifier of the Company that this token belongs.
                      drms:
                        type: array
                        description: DRM system keys to request
                        items:
                          type: string
                          enum:
                            - WIDEVINE
                            - FAIRPLAY
                            - PRIMETIME
                            - PLAYREADY
                            - W3C_COMMON_CLEAR_KEY
                            - BULK_FILE
                        uniqueItems: true
                      widevine_v0_pssh_box:
                        type: boolean
                        description: When TRUE the KeyID is not embedded in the pssh box which sets the version to 0. Defaults to generating v1 pssh_boxes that includes the key_id
                    additionalProperties: false
                  bulk_file:
                    type: object
                    description: Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
                    properties:
                      iv_rotation:
                        type: string
                        description: How often the IV should be rotated and how it should be created
                        enum:
                          - RANDOM_PER_KEY
                          - PER_SEGMENT_NUMBER
                          - UNIQUE_PER_SEGMENT
                    additionalProperties: false
                  common:
                    type: object
                    description: Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
                    properties:
                      scheme_type:
                        type: string
                        description: Defines the scheme that can be used with Common Encryption
                        enum:
                          - CENC
                          - CBCS
                    additionalProperties: false
                  cpix:
                    type: object
                    description: Only one of ['simple', 'atlas', 'cpix'] may be set.
                    properties:
                      certificates_id:
                        type: string
                        description: Unique ID used for certificate settings, unique per distributor.
                      content_id:
                        type: string
                        description: (Optional) Content ID that identifies this channel in the CPIX service. Value is defined by the DRM system owner, and if defined will be included as part of a POST request.
                      credentials_id:
                        type: string
                        description: Unique ID used for credentials settings, unique per distributor.
                      decryption_key_id:
                        type: string
                        description: Unique ID of the decryption key to use in case the server response contains content keys encrypted. The key is unique per distirutor, and configured ahead of time by the publishing team and the CPIX service owner.
                      drms:
                        type: array
                        description: (Optional) DRM system keys to request. If not defined a GET request will be done, and any key returned will be handled. If defined, random kid(s) (key ids) will be generated on rotation for each DRM system, and a POST request will be done to create them.
                        items:
                          type: string
                          enum:
                            - WIDEVINE
                            - FAIRPLAY
                            - PRIMETIME
                            - PLAYREADY
                            - W3C_COMMON_CLEAR_KEY
                            - BULK_FILE
                        uniqueItems: true
                      headers_id:
                        type: string
                        description: (Optional) An identifier to a list of HTTP headers to be added to the request sent to the CPIX service.
                      uri:
                        type: string
                        description: CPIX service URI
                        format: uri-reference
                        minLength: 1
                    additionalProperties: false
                  key_rotation:
                    type: object
                    description: Configures how keys should be rotated
                    properties:
                      interval_secs:
                        type: number
                        description: Rotate keys based on the specified time interval. If Program is also provided then this time interval will only apply to media segments that are outside of program boundaries. If Program is NOT provided then only this time interval will be used to decided when to rotate keys.
                        format: float
                        minimum: 300
                      program:
                        type: boolean
                        description: Rotate keys on (SCTE35) program boundaries such that no two programs will be protected with the same key.
                      program_overlap_skip_encrypt:
                        type: boolean
                        description: Do not encrypt segments that are part of more than one SCTE-35 program.
                    additionalProperties: false
                  sample_aes:
                    type: object
                    description: Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
                    additionalProperties: false
                  simple:
                    type: object
                    description: Only one of ['simple', 'atlas', 'cpix'] may be set.
                    properties:
                      publish_points:
                        type: array
                        description: Pub points where keys should be published. If multiple are specified, only one needs to succeed to consider the key successfully published.
                        items:
                          type: object
                          properties:
                            basic_auth:
                              type: object
                              description: Only one of ['basic_auth'] may be set.
                              properties:
                                password:
                                  type: string
                                  description: Plain text password for basic auth.
                                username:
                                  type: string
                                  description: Username for basic auth.
                              additionalProperties: false
                            compression:
                              type: string
                              description: Configures whether or not (and how) to compress manifests being published to the origin. If not specified, manifests will not be compressed.
                              enum:
                                - NONE
                                - GZIP
                            do_not_monitor:
                              type: boolean
                              description: (Optional) Specifies if this pubpoint should not be monitored by PLM.
                            headers:
                              type: object
                              description: Allows custom HTTP headers to be set via configuration for all HTTP requests.
                              additionalProperties:
                                type: string
                            method:
                              type: string
                              description: Method overrides what HTTP method to specify in requests to the Publish Point. If not specified the service will default to POST.
                            playback_base_url:
                              type: string
                              description: The base URL where published playlists will be able to be obtained. This is often different than the publish_base_url for CDN publishing workflows.
                              format: uri-reference
                            playback_query_params:
                              type: string
                              description: 'Specifies any query parameters that will be added to playback urls. Should not include the initial ''?'' Example: ''foo=bar&q=golang'''
                            publish_base_url:
                              type: string
                              description: The base URL where generated playlists will be sent/published. Each publish point requires a unique 'publish_base_url'.
                              format: uri-reference
                          additionalProperties: false
                      require_publish:
                        type: string
                        description: Indicates which publish points must succeed for segment publishing to use the keys.
                        enum:
                          - ANY
                          - ALL
                    additionalProperties: false
                additionalProperties: false
              partial_presentations:
                type: array
                description: Partial Presentation Playback URLs
                items:
                  type: string
              url:
                type: string
                description: Playback URL
            additionalProperties: false
            required:
              - url
        hls:
          type: array
          description: HLS playback configurations
          items:
            type: object
            properties:
              content_protection:
                type: object
                description: Content Protection settings
                properties:
                  atlas:
                    type: object
                    description: Only one of ['simple', 'atlas', 'cpix'] may be set.
                    properties:
                      asset_id:
                        type: string
                        description: The Asset Identifier which was taken from the token entitlement service request.
                      company_id:
                        type: string
                        description: The Identifier of the Company that this token belongs.
                      drms:
                        type: array
                        description: DRM system keys to request
                        items:
                          type: string
                          enum:
                            - WIDEVINE
                            - FAIRPLAY
                            - PRIMETIME
                            - PLAYREADY
                            - W3C_COMMON_CLEAR_KEY
                            - BULK_FILE
                        uniqueItems: true
                      widevine_v0_pssh_box:
                        type: boolean
                        description: When TRUE the KeyID is not embedded in the pssh box which sets the version to 0. Defaults to generating v1 pssh_boxes that includes the key_id
                    additionalProperties: false
                  bulk_file:
                    type: object
                    description: Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
                    properties:
                      iv_rotation:
                        type: string
                        description: How often the IV should be rotated and how it should be created
                        enum:
                          - RANDOM_PER_KEY
                          - PER_SEGMENT_NUMBER
                          - UNIQUE_PER_SEGMENT
                    additionalProperties: false
                  common:
                    type: object
                    description: Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
                    properties:
                      scheme_type:
                        type: string
                        description: Defines the scheme that can be used with Common Encryption
                        enum:
                          - CENC
                          - CBCS
                    additionalProperties: false
                  cpix:
                    type: object
                    description: Only one of ['simple', 'atlas', 'cpix'] may be set.
                    properties:
                      certificates_id:
                        type: string
                        description: Unique ID used for certificate settings, unique per distributor.
                      content_id:
                        type: string
                        description: (Optional) Content ID that identifies this channel in the CPIX service. Value is defined by the DRM system owner, and if defined will be included as part of a POST request.
                      credentials_id:
                        type: string
                        description: Unique ID used for credentials settings, unique per distributor.
                      decryption_key_id:
                        type: string
                        description: Unique ID of the decryption key to use in case the server response contains content keys encrypted. The key is unique per distirutor, and configured ahead of time by the publishing team and the CPIX service owner.
                      drms:
                        type: array
                        description: (Optional) DRM system keys to request. If not defined a GET request will be done, and any key returned will be handled. If defined, random kid(s) (key ids) will be generated on rotation for each DRM system, and a POST request will be done to create them.
                        items:
                          type: string
                          enum:
                            - WIDEVINE
                            - FAIRPLAY
                            - PRIMETIME
                            - PLAYREADY
                            - W3C_COMMON_CLEAR_KEY
                            - BULK_FILE
                        uniqueItems: true
                      headers_id:
                        type: string
                        description: (Optional) An identifier to a list of HTTP headers to be added to the request sent to the CPIX service.
                      uri:
                        type: string
                        description: CPIX service URI
                        format: uri-reference
                        minLength: 1
                    additionalProperties: false
                  key_rotation:
                    type: object
                    description: Configures how keys should be rotated
                    properties:
                      interval_secs:
                        type: number
                        description: Rotate keys based on the specified time interval. If Program is also provided then this time interval will only apply to media segments that are outside of program boundaries. If Program is NOT provided then only this time interval will be used to decided when to rotate keys.
                        format: float
                        minimum: 300
                      program:
                        type: boolean
                        description: Rotate keys on (SCTE35) program boundaries such that no two programs will be protected with the same key.
                      program_overlap_skip_encrypt:
                        type: boolean
                        description: Do not encrypt segments that are part of more than one SCTE-35 program.
                    additionalProperties: false
                  sample_aes:
                    type: object
                    description: Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
                    additionalProperties: false
                  simple:
                    type: object
                    description: Only one of ['simple', 'atlas', 'cpix'] may be set.
                    properties:
                      publish_points:
                        type: array
                        description: Pub points where keys should be published. If multiple are specified, only one needs to succeed to consider the key successfully published.
                        items:
                          type: object
                          properties:
                            basic_auth:
                              type: object
                              description: Only one of ['basic_auth'] may be set.
                              properties:
                                password:
                                  type: string
                                  description: Plain text password for basic auth.
                                username:
                                  type: string
                                  description: Username for basic auth.
                              additionalProperties: false
                            compression:
                              type: string
                              description: Configures whether or not (and how) to compress manifests being published to the origin. If not specified, manifests will not be compressed.
                              enum:
                                - NONE
                                - GZIP
                            do_not_monitor:
                              type: boolean
                              description: (Optional) Specifies if this pubpoint should not be monitored by PLM.
                            headers:
                              type: object
                              description: Allows custom HTTP headers to be set via configuration for all HTTP requests.
                              additionalProperties:
                                type: string
                            method:
                              type: string
                              description: Method overrides what HTTP method to specify in requests to the Publish Point. If not specified the service will default to POST.
                            playback_base_url:
                              type: string
                              description: The base URL where published playlists will be able to be obtained. This is often different than the publish_base_url for CDN publishing workflows.
                              format: uri-reference
                            playback_query_params:
                              type: string
                              description: 'Specifies any query parameters that will be added to playback urls. Should not include the initial ''?'' Example: ''foo=bar&q=golang'''
                            publish_base_url:
                              type: string
                              description: The base URL where generated playlists will be sent/published. Each publish point requires a unique 'publish_base_url'.
                              format: uri-reference
                          additionalProperties: false
                      require_publish:
                        type: string
                        description: Indicates which publish points must succeed for segment publishing to use the keys.
                        enum:
                          - ANY
                          - ALL
                    additionalProperties: false
                additionalProperties: false
              partial_presentations:
                type: array
                description: Partial Presentation Playback URLs
                items:
                  type: string
              url:
                type: string
                description: Playback URL
            additionalProperties: false
            required:
              - url
        origin:
          type: array
          description: Origin playback configurations
          items:
            type: object
            properties:
              dash:
                type: object
                description: Dash can be an empty value if Aventus Origin does not have a valid Dash url for the packaged segments.
                properties:
                  fallback_manifest:
                    type: string
                    description: fallback_manifest is the name of the fallback playback manifest. ex. 'fallback.m3u8' or 'fallback.mpd'
                  fallback_url:
                    type: string
                    description: fallback_url is the full playback url for the fallback. It is a composition of hostname, path and fallback_manifest fields. ex. 'https://foo.example.com/live/usw2/path/to/manifest/dir/fallback.m3u8'
                  hostname:
                    type: string
                    description: hostname for the playback url. ex. 'foo.example.com'
                  path:
                    type: string
                    description: path identifies where manifests live at the host. ex. /live/usw2/path/to/manifest/dir
                  primary_manifest:
                    type: string
                    description: primary_manifest is the name of the primary playback manifest. ex. 'main.m3u8' or 'main.mpd'
                  primary_url:
                    type: string
                    description: primary_url is the full playback url for the primary. It is a composition of hostname, path and primary_manifest fields. ex. 'https://foo.example.com/live/usw2/path/to/manifest/dir/main.m3u8'
                additionalProperties: false
              fallback_manifest_defaults:
                type: object
                properties:
                  dash_signaling_formats:
                    type: array
                    description: DASH Signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering DASH manifests.
                    items:
                      type: string
                      enum:
                        - SCTE35_SPLICE_INFO_SECTION
                        - SCTE35_BIN
                    uniqueItems: true
                  duration_seconds:
                    type: integer
                    description: Duration is the length of content that will be included in the manifest, in seconds. The max supported DVR window is 12 hours. If not specified, the default duration will be 30 seconds.
                    format: int32
                    minimum: 0
                    maximum: 43200
                  enable_hls_delta_updates:
                    type: boolean
                    description: When true enables HLS Delta updates for this particular origin.
                  hls_signaling_formats:
                    type: array
                    description: HLS signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering playlists.
                    items:
                      type: string
                      enum:
                        - APPLE_SCTE35
                        - AD_SIMPLE
                        - SCTE35
                    uniqueItems: true
                  media_url_type:
                    type: string
                    description: Allows specifying url type for HLS media playlists and DASH manifests. If not provided, playlist generation will use 'RELATIVE'.
                    enum:
                      - RELATIVE
                      - ABSOLUTE
                      - HOST_RELATIVE
                  minimum_update_period_seconds:
                    type: integer
                    description: Sets the minimumUpdatePeriod field in MPD to be this value. If set to 0 (default), segment duration is used. The value shall not exceed the 'suggested_presentation_delay_secs'.
                    format: int32
                    minimum: 0
                  multi_variant_url_type:
                    type: string
                    description: Allows specifying url type for HLS multi-variant playlists. If not provided, playlist generation will use 'RELATIVE'.
                    enum:
                      - RELATIVE
                      - ABSOLUTE
                      - HOST_RELATIVE
                  pdt_on_every_segment:
                    type: boolean
                    description: 'When true a #EXT-X-PROGRAM-DATE-TIME tag will be placed on every media segment in HLS media playlists. When false, the default behavior, the PDT tag is set according to the HLS specification.'
                  pre_start_duration_seconds:
                    type: integer
                    description: Pre Start Duration is the length of content that will be included in the manifest when the start time of a manifest is in the future. When a manifest is near the start time but does not contain 'pre_start_duration_seconds' content Manifest Origin will keep content before the start time to make the manifest length at least 'pre_start_duration_seconds'. If not specified requesting a manifest in the future will result in a 404.
                    format: int32
                    minimum: 0
                    maximum: 43200
                  suggested_presentation_delay_seconds:
                    type: integer
                    description: Sets the suggestedPresentationDelay field in MPD to be this value. This value must be greater or equal to 'minimum_update_period_secs'. If unset, the default value will be calculated as 3 * segment target duration.
                    format: int32
                    minimum: 0
                additionalProperties: false
              hls:
                type: object
                description: HLS can be an empty value if Aventus Origin does not have a valid HLS url for the packaged segments.
                properties:
                  fallback_manifest:
                    type: string
                    description: fallback_manifest is the name of the fallback playback manifest. ex. 'fallback.m3u8' or 'fallback.mpd'
                  fallback_url:
                    type: string
                    description: fallback_url is the full playback url for the fallback. It is a composition of hostname, path and fallback_manifest fields. ex. 'https://foo.example.com/live/usw2/path/to/manifest/dir/fallback.m3u8'
                  hostname:
                    type: string
                    description: hostname for the playback url. ex. 'foo.example.com'
                  path:
                    type: string
                    description: path identifies where manifests live at the host. ex. /live/usw2/path/to/manifest/dir
                  primary_manifest:
                    type: string
                    description: primary_manifest is the name of the primary playback manifest. ex. 'main.m3u8' or 'main.mpd'
                  primary_url:
                    type: string
                    description: primary_url is the full playback url for the primary. It is a composition of hostname, path and primary_manifest fields. ex. 'https://foo.example.com/live/usw2/path/to/manifest/dir/main.m3u8'
                additionalProperties: false
              packager_config:
                type: object
                properties:
                  content_protection:
                    type: object
                    description: Configures how to protect packaged media segments.
                    properties:
                      atlas:
                        type: object
                        description: Only one of ['simple', 'atlas', 'cpix'] may be set.
                        properties:
                          asset_id:
                            type: string
                            description: The Asset Identifier which was taken from the token entitlement service request.
                          company_id:
                            type: string
                            description: The Identifier of the Company that this token belongs.
                          drms:
                            type: array
                            description: DRM system keys to request
                            items:
                              type: string
                              enum:
                                - WIDEVINE
                                - FAIRPLAY
                                - PRIMETIME
                                - PLAYREADY
                                - W3C_COMMON_CLEAR_KEY
                                - BULK_FILE
                            uniqueItems: true
                          widevine_v0_pssh_box:
                            type: boolean
                            description: When TRUE the KeyID is not embedded in the pssh box which sets the version to 0. Defaults to generating v1 pssh_boxes that includes the key_id
                        additionalProperties: false
                      bulk_file:
                        type: object
                        description: Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
                        properties:
                          iv_rotation:
                            type: string
                            description: How often the IV should be rotated and how it should be created
                            enum:
                              - RANDOM_PER_KEY
                              - PER_SEGMENT_NUMBER
                              - UNIQUE_PER_SEGMENT
                        additionalProperties: false
                      common:
                        type: object
                        description: Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
                        properties:
                          scheme_type:
                            type: string
                            description: Defines the scheme that can be used with Common Encryption
                            enum:
                              - CENC
                              - CBCS
                        additionalProperties: false
                      cpix:
                        type: object
                        description: Only one of ['simple', 'atlas', 'cpix'] may be set.
                        properties:
                          certificates_id:
                            type: string
                            description: Unique ID used for certificate settings, unique per distributor.
                          content_id:
                            type: string
                            description: (Optional) Content ID that identifies this channel in the CPIX service. Value is defined by the DRM system owner, and if defined will be included as part of a POST request.
                          credentials_id:
                            type: string
                            description: Unique ID used for credentials settings, unique per distributor.
                          decryption_key_id:
                            type: string
                            description: Unique ID of the decryption key to use in case the server response contains content keys encrypted. The key is unique per distirutor, and configured ahead of time by the publishing team and the CPIX service owner.
                          drms:
                            type: array
                            description: (Optional) DRM system keys to request. If not defined a GET request will be done, and any key returned will be handled. If defined, random kid(s) (key ids) will be generated on rotation for each DRM system, and a POST request will be done to create them.
                            items:
                              type: string
                              enum:
                                - WIDEVINE
                                - FAIRPLAY
                                - PRIMETIME
                                - PLAYREADY
                                - W3C_COMMON_CLEAR_KEY
                                - BULK_FILE
                            uniqueItems: true
                          headers_id:
                            type: string
                            description: (Optional) An identifier to a list of HTTP headers to be added to the request sent to the CPIX service.
                          uri:
                            type: string
                            description: CPIX service URI
                            format: uri-reference
                            minLength: 1
                        additionalProperties: false
                      key_rotation:
                        type: object
                        description: Configures how keys should be rotated
                        properties:
                          interval_secs:
                            type: number
                            description: Rotate keys based on the specified time interval. If Program is also provided then this time interval will only apply to media segments that are outside of program boundaries. If Program is NOT provided then only this time interval will be used to decided when to rotate keys.
                            format: float
                            minimum: 300
                          program:
                            type: boolean
                            description: Rotate keys on (SCTE35) program boundaries such that no two programs will be protected with the same key.
                          program_overlap_skip_encrypt:
                            type: boolean
                            description: Do not encrypt segments that are part of more than one SCTE-35 program.
                        additionalProperties: false
                      sample_aes:
                        type: object
                        description: Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
                        additionalProperties: false
                      simple:
                        type: object
                        description: Only one of ['simple', 'atlas', 'cpix'] may be set.
                        properties:
                          publish_points:
                            type: array
                            description: Pub points where keys should be published. If multiple are specified, only one needs to succeed to consider the key successfully published.
                            items:
                              type: object
                              properties:
                                basic_auth:
                                  type: object
                                  description: Only one of ['basic_auth'] may be set.
                                  properties:
                                    password:
                                      type: string
                                      description: Plain text password for basic auth.
                                    username:
                                      type: string
                                      description: Username for basic auth.
                                  additionalProperties: false
                                compression:
                                  type: string
                                  description: Configures whether or not (and how) to compress manifests being published to the origin. If not specified, manifests will not be compressed.
                                  enum:
                                    - NONE
                                    - GZIP
                                do_not_monitor:
                                  type: boolean
                                  description: (Optional) Specifies if this pubpoint should not be monitored by PLM.
                                headers:
                                  type: object
                                  description: Allows custom HTTP headers to be set via configuration for all HTTP requests.
                                  additionalProperties:
                                    type: string
                                method:
                                  type: string
                                  description: Method overrides what HTTP method to specify in requests to the Publish Point. If not specified the service will default to POST.
                                playback_base_url:
                                  type: string
                                  description: The base URL where published playlists will be able to be obtained. This is often different than the publish_base_url for CDN publishing workflows.
                                  format: uri-reference
                                playback_query_params:
                                  type: string
                                  description: 'Specifies any query parameters that will be added to playback urls. Should not include the initial ''?'' Example: ''foo=bar&q=golang'''
                                publish_base_url:
                                  type: string
                                  description: The base URL where generated playlists will be sent/published. Each publish point requires a unique 'publish_base_url'.
                                  format: uri-reference
                              additionalProperties: false
                          require_publish:
                            type: string
                            description: Indicates which publish points must succeed for segment publishing to use the keys.
                            enum:
                              - ANY
                              - ALL
                        additionalProperties: false
                    additionalProperties: false
                  mp2t:
                    type: object
                    description: Uses MP2T format for each segments. Only one of ['mp2t', 'mp4'] may be set.
                    properties:
                      force_unmuxed_audio:
                        type: boolean
                        description: Forces the Video and Audio Encodings to be unmuxed when there is one audio encodings. This setting will have to be uniformed across MP2T packagers within a config. When there are two or more audio encodings, unmuxed will be used automatically.
                      insert_id3_utc_time:
                        type: boolean
                        description: If true, insert ID3 tags that include a UTC timestamp. This is a Turner/WM-specific extension.
                    additionalProperties: false
                  mp4:
                    type: object
                    description: Uses MP4 format for each segments. Only one of ['mp2t', 'mp4'] may be set.
                    properties:
                      caption_placement:
                        type: string
                        description: CaptionPlacement defines where caption messages should be placed in the output MP4.
                        enum:
                          - SEI_PAYLOAD
                          - CLCP_TRACK
                      insert_pssh_box:
                        type: boolean
                        description: Insert pssh boxes generated by content protection into packaged segments. Defaults to not insert pssh boxes to the packaged segments.
                    additionalProperties: false
                  ttml:
                    type: object
                    description: Only one of ['web_vtt', 'ttml'] may be set.
                    additionalProperties: false
                  web_vtt:
                    type: object
                    description: Only one of ['web_vtt', 'ttml'] may be set.
                    properties:
                      file_format:
                        type: string
                        description: The file format used to encapsulate the WebVTT segments.
                        enum:
                          - TEXT
                          - MP4
                    additionalProperties: false
                additionalProperties: false
              packager_id:
                type: string
                description: packager_id is the ID used to identify the packager_config within the channel configuration.
              primary_manifest_defaults:
                type: object
                properties:
                  dash_signaling_formats:
                    type: array
                    description: DASH Signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering DASH manifests.
                    items:
                      type: string
                      enum:
                        - SCTE35_SPLICE_INFO_SECTION
                        - SCTE35_BIN
                    uniqueItems: true
                  duration_seconds:
                    type: integer
                    description: Duration is the length of content that will be included in the manifest, in seconds. The max supported DVR window is 12 hours. If not specified, the default duration will be 30 seconds.
                    format: int32
                    minimum: 0
                    maximum: 43200
                  enable_hls_delta_updates:
                    type: boolean
                    description: When true enables HLS Delta updates for this particular origin.
                  hls_signaling_formats:
                    type: array
                    description: HLS signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering playlists.
                    items:
                      type: string
                      enum:
                        - APPLE_SCTE35
                        - AD_SIMPLE
                        - SCTE35
                    uniqueItems: true
                  media_url_type:
                    type: string
                    description: Allows specifying url type for HLS media playlists and DASH manifests. If not provided, playlist generation will use 'RELATIVE'.
                    enum:
                      - RELATIVE
                      - ABSOLUTE
                      - HOST_RELATIVE
                  minimum_update_period_seconds:
                    type: integer
                    description: Sets the minimumUpdatePeriod field in MPD to be this value. If set to 0 (default), segment duration is used. The value shall not exceed the 'suggested_presentation_delay_secs'.
                    format: int32
                    minimum: 0
                  multi_variant_url_type:
                    type: string
                    description: Allows specifying url type for HLS multi-variant playlists. If not provided, playlist generation will use 'RELATIVE'.
                    enum:
                      - RELATIVE
                      - ABSOLUTE
                      - HOST_RELATIVE
                  pdt_on_every_segment:
                    type: boolean
                    description: 'When true a #EXT-X-PROGRAM-DATE-TIME tag will be placed on every media segment in HLS media playlists. When false, the default behavior, the PDT tag is set according to the HLS specification.'
                  pre_start_duration_seconds:
                    type: integer
                    description: Pre Start Duration is the length of content that will be included in the manifest when the start time of a manifest is in the future. When a manifest is near the start time but does not contain 'pre_start_duration_seconds' content Manifest Origin will keep content before the start time to make the manifest length at least 'pre_start_duration_seconds'. If not specified requesting a manifest in the future will result in a 404.
                    format: int32
                    minimum: 0
                    maximum: 43200
                  suggested_presentation_delay_seconds:
                    type: integer
                    description: Sets the suggestedPresentationDelay field in MPD to be this value. This value must be greater or equal to 'minimum_update_period_secs'. If unset, the default value will be calculated as 3 * segment target duration.
                    format: int32
                    minimum: 0
                additionalProperties: false
            additionalProperties: false
      additionalProperties: false
    ChannelTimelineEntry:
      type: object
      properties:
        action:
          type: string
          description: Shortcode indicating what action was taken
        agent:
          type: string
          description: Agent responsible for the action taken
        query:
          type: string
        request_body:
          type: string
          description: The request body, if any, of the original action
        status_code:
          type: integer
          description: HTTP Status code indicating outcome of the action.
          format: int32
        timestamp:
          type: string
          description: Timestamp of the action in UTC
          format: date-time
        trace_id:
          type: string
          description: Correlation identifier for tracing
      additionalProperties: false
      required:
        - trace_id
        - agent
        - action
        - status_code
        - timestamp
        - request_body
    ChannelTimelineEntryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelTimelineEntry'
    ClipManifestResponse:
      type: object
      properties:
        cdnURL:
          type: string
          description: CDN Url for manifest
        manifestID:
          type: integer
          description: Manifest ID for clip
          format: int64
        path:
          type: string
          description: Manifest path
        storepath:
          type: string
          description: VOD storepath for manifest
      additionalProperties: false
      required:
        - manifestID
        - path
        - storepath
        - cdnURL
    ClipManifestResponseList:
      type: array
      items:
        $ref: '#/components/schemas/ClipManifestResponse'
    CollapseVODRequest:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        clip_prefix:
          type: string
          description: Prefix for clip
        clip_suffix:
          type: string
          description: Suffix for clip
        disable_auto_prefix:
          type: boolean
          description: Disable any autoprefix
        end_time:
          type: string
          description: EndTime of VOD
          format: date-time
        filterconfig:
          type: object
          description: SCTE/TIME based filtering on collapses
          properties:
            scte_35:
              type: object
              description: SCTE-based filtering
              properties:
                break:
                  type: boolean
                  description: Filter out SCTE-35 break
                chapter:
                  type: boolean
                  description: Filter out chapters
                distributor_ads:
                  type: boolean
                  description: Filter out distributor ads
                options:
                  type: object
                  description: Additional SCTE filter options
                  properties:
                    signal_removed_provider_ad:
                      type: boolean
                      description: Signal removal of provider ads
                  additionalProperties: false
                  required:
                    - signal_removed_provider_ad
                provider_ads:
                  type: boolean
                  description: Filter out provider ads
                upid:
                  type: string
                  description: Filter out SCTE-35 message upid
              additionalProperties: false
              required:
                - break
                - distributor_ads
                - provider_ads
                - chapter
                - upid
            time:
              type: array
              description: Time-based filtering
              items:
                type: object
                properties:
                  end:
                    type: string
                    description: end time of the time window of segments
                    format: date-time
                  include:
                    type: boolean
                    description: should include boundary within the VOD
                  start:
                    type: string
                    description: start time of the time window of segments
                    format: date-time
                additionalProperties: false
                required:
                  - start
                  - end
                  - include
          additionalProperties: false
        new_clip_description:
          type: string
          description: Description for new collapsed clip
        new_clip_id:
          type: integer
          description: New Clip ID for collapsed clip
          format: int64
        publish_vod:
          type: boolean
          description: Publish newly created VOD
        start_time:
          type: string
          description: StartTime of VOD
          format: date-time
        upid:
          type: string
          description: UPID for VOD
      additionalProperties: false
      required:
        - new_clip_id
        - new_clip_description
    CollapseVODResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        clip_id:
          type: integer
          description: New Clip ID for collapsed vod
          format: int64
        task_id:
          type: string
          description: Identifies collapse task id
      additionalProperties: false
      required:
        - task_id
        - clip_id
    DeprecatedGetClipManifestsResponse:
      type: array
      items:
        $ref: '#/components/schemas/DeprecatedGetClipManifestsResponseItem'
    DeprecatedGetClipManifestsResponseItem:
      type: object
      properties:
        cdnURL:
          type: string
        manifestID:
          type: integer
          format: int64
        path:
          type: string
        storepath:
          type: string
      additionalProperties: false
      required:
        - manifestID
        - path
        - storepath
        - cdnURL
    DeprecatedGetClipResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        clipid:
          type: integer
          description: id for this clip
          format: int64
        created:
          type: string
          description: date and time when clip was created
          format: date-time
        description:
          type: string
          description: description of the clip
        duration:
          type: integer
          description: clip duration in seconds
          format: int64
        endTime:
          type: string
          description: clip end time
          format: date-time
        mp4path:
          type: string
          description: path to the mp4
        source:
          type: string
          description: source of the clip
        startTime:
          type: string
          description: clip start time
          format: date-time
      additionalProperties: false
      required:
        - clipid
        - description
        - mp4path
        - created
        - startTime
        - endTime
        - duration
        - source
    DeprecatedGetMp4UrlResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        presigned_url:
          type: string
      additionalProperties: false
      required:
        - presigned_url
    DeprecatedGetProgramResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        clear_segment_config:
          type: object
          properties:
            first_published:
              type: string
              description: date first published
              format: date-time
            store:
              type: string
              description: store location
            store_prefix:
              type: string
              description: prefix of the store
          additionalProperties: false
          required:
            - store
            - store_prefix
            - first_published
        description:
          type: string
          description: description of the program
        file_count:
          type: integer
          description: total number off files for the program
          format: int64
        last_published:
          type: string
          description: date last published
          format: date-time
        progid:
          type: string
          description: id for the program
        pub_clip_id:
          type: integer
          description: clip id
          format: int64
        pub_vod_id:
          type: integer
          description: vod id
          format: int64
        retention_days:
          type: integer
          description: number of days to retain
          format: int64
        total_bytes:
          type: integer
          description: total bytes in the program
          format: int64
      additionalProperties: false
      required:
        - progid
        - description
        - total_bytes
        - file_count
        - last_published
        - pub_vod_id
        - pub_clip_id
        - retention_days
        - clear_segment_config
    DeprecatedGetProgramTimeResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        duration:
          type: integer
          format: int64
        program_end:
          type: string
        program_start:
          type: string
      additionalProperties: false
      required:
        - program_start
        - program_end
        - duration
    DeprecatedListClipsResponse:
      type: object
      properties:
        clipid:
          type: integer
          description: id for this clip
          format: int64
        created:
          type: string
          description: date and time when clip was created
          format: date-time
        description:
          type: string
          description: description of the clip
        duration:
          type: integer
          description: clip duration in seconds
          format: int64
        endTime:
          type: string
          description: clip end time
          format: date-time
        mp4path:
          type: string
          description: path to the mp4
        source:
          type: string
          description: source of the clip
        startTime:
          type: string
          description: clip start time
          format: date-time
      additionalProperties: false
      required:
        - clipid
        - description
        - mp4path
        - created
        - startTime
        - endTime
        - duration
        - source
    DeprecatedListClipsResponseList:
      type: array
      items:
        $ref: '#/components/schemas/DeprecatedListClipsResponse'
    DeprecatedListVODsResponse:
      type: object
      properties:
        description:
          type: string
          description: description of the vod
        file_count:
          type: integer
          description: number of files for the vod
          format: int64
        last_published:
          type: string
          description: date last published
          format: date-time
        packaging_format:
          type: string
          description: format
        store:
          type: string
          description: store location of the vod
        storeprefix:
          type: string
          description: store prefix for the vod
        total_bytes:
          type: integer
          description: total bytes for the vod
          format: int64
        version:
          type: string
          description: version of the vod
        vodid:
          type: integer
          description: id of the vod
          format: int64
      additionalProperties: false
      required:
        - vodid
        - description
        - version
        - file_count
        - total_bytes
        - store
        - storeprefix
    DeprecatedListVODsResponseList:
      type: array
      items:
        $ref: '#/components/schemas/DeprecatedListVODsResponse'
    DeprecatedMakeMP4Request:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        force:
          type: boolean
          description: if true, forces recreation of the mp4 if already created.
      additionalProperties: false
    DeprecatedMakeMP4Response:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        taskid:
          type: string
          description: task id of the makemp4 task that has been created.
      additionalProperties: false
      required:
        - taskid
    DynamicSyndicationRequest:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        archive:
          type: object
          description: Archive settings
          properties:
            s3:
              type: object
              properties:
                bucket_name:
                  type: string
                key:
                  type: string
                region:
                  type: string
              additionalProperties: false
              required:
                - region
                - bucket_name
                - key
          additionalProperties: false
          required:
            - s3
        correlation_id:
          type: string
          description: Correlation ID for this FER archive request
        manifest_url:
          type: string
          description: URL of the main manifest to reference for the mp4
        notification:
          type: object
          description: Notification Settings
          properties:
            sns:
              type: object
              properties:
                region:
                  type: string
                topic_arn:
                  type: string
              additionalProperties: false
              required:
                - topic_arn
                - region
          additionalProperties: false
          required:
            - sns
        query_string:
          type: string
          description: Query string containing params for the manifest url
        syndication_files:
          type: array
          description: List of files to be created by Syndication
          items:
            type: object
            properties:
              audio_encoder_id:
                type: string
              file_path:
                type: string
              manifest_path:
                type: string
              video_encoder_id:
                type: string
            additionalProperties: false
            required:
              - file_path
              - audio_encoder_id
          minItems: 1
      additionalProperties: false
      required:
        - correlation_id
        - syndication_files
        - query_string
        - manifest_url
        - archive
        - notification
    DynamicSyndicationResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        correlation_id:
          type: string
          description: Identifier that is carried through the syndication request
        task_id:
          type: string
          description: Task ID for the syndication task started by the L2V service
      additionalProperties: false
      required:
        - task_id
    ErrorModel:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
          example: Property foo is required but is missing.
        errors:
          type: array
          description: Optional list of individual error details
          items:
            type: object
            properties:
              location:
                type: string
                description: Where the error occured, e.g. 'body.items[3].tags' or 'path.thing-id'
              message:
                type: string
                description: Error message text
              value:
                description: The value at the given location
            additionalProperties: false
        instance:
          type: string
          description: A URI reference that identifies the specific occurence of the problem.
          format: uri
          example: https://example.com/error-log/abc123
        status:
          type: integer
          description: HTTP status code
          format: int32
          example: 400
        title:
          type: string
          description: A short, human-readable summary of the problem type. This value should not change between occurances of the error.
          example: Bad Request
        type:
          type: string
          description: A URI reference to human-readable documentation for the error.
          format: uri
          default: about:blank
          example: https://example.com/errors/example
      additionalProperties: false
    GenericSignal:
      type: object
      properties:
        duration:
          type: integer
          description: Splice duration (ms). If no duration or a duration of 0 then the default duration for the segment type is used.
          format: int32
          default: 0
          example: 30000
          minimum: 1000
        event_id:
          type: integer
          description: Identifies the active signaling segment. Use the same event_id for both START and END to reference the same segment. When signaling two STARTs with the same event_id, the second one will result in an error (ALREADY_EXISTS). Signaling a second start with a different event_id will end a previous active segment of the same type. After a segment has ended, its event_id can be reused. IDs are namespaced by segment type. E.g. it is allowed to have an active Chapter and an active Program with the same event_id. This field corresponds to SCTE-35 segmentation_event_id and splice_event_id.
          format: int32
          example: 1234
          minimum: 0
        segment_type:
          type: string
          description: The signaling segment type which is going to start/end/etc. This is used to mark programs, chapters, ad insertion points, video slating, etc.
          enum:
            - splice_insert
            - content_id
            - program
            - program_breakaway
            - chapter
            - break
            - opening_credit
            - closing_credit
            - provider_placement
            - distributor_placement
            - provider_overlay
            - distributor_overlay
            - provider_ad
            - distributor_ad
            - unscheduled_event
            - network
            - slate
            - timed_metadata
          example: program
        signal_type:
          type: string
          description: Whether this signal will start/end/etc a signaling segment
          enum:
            - start
            - end
            - breakaway
            - resumption
          example: start
        slate_uri:
          type: string
          description: Slate url
          format: uri
          example: https://www.example.com/logo.ts
        timed_metadata_payload:
          type: string
          description: Timed metadata opaque payload data
          example: 1ba4ae34-512e-41a6-b2f1-bbf51635d453
        timed_metadata_type:
          type: string
          description: The timed metadata signal's type
          example: urn:wbd:timed-metadata:multiview:layout-update
        type:
          type: string
          description: Qualifier type
          enum:
            - none
            - overlap
            - in_progress
          example: none
        upids:
          type: array
          description: UPIDs
          items:
            type: string
          example:
            - 03:ABCD0001000H
            - 08:0A42235B81BC70FC
            - 06:0000-0001-2C52-0000-P-0000-0000-0
      additionalProperties: false
      required:
        - signal_type
        - segment_type
        - event_id
    GenericSignalList:
      type: array
      items:
        $ref: '#/components/schemas/GenericSignal'
    GenericSignalResult:
      type: object
      properties:
        error_message:
          type: string
          description: Error details from the signaling subsystem
        result_code:
          type: string
          description: Result of signal; 'accepted' means no error
          enum:
            - accepted
            - not_found
            - already_exists
            - invalid_argument
            - internal_error
          example: accepted
      additionalProperties: false
      required:
        - result_code
        - error_message
    GenericSignalResultList:
      type: array
      items:
        $ref: '#/components/schemas/GenericSignalResult'
    GetClipProgramTimeResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        duration:
          type: integer
          description: Duration of the clip in ms
          format: int64
          example: 356966566667000
        program_end:
          type: string
          description: Program End of Clip
          example: "2023-04-06T17:17:37.5Z"
        program_start:
          type: string
          description: Program Start of Clip
          example: "2023-04-06T16:17:37.5Z"
      additionalProperties: false
      required:
        - program_start
        - program_end
        - duration
    GetPreviewStreamsResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        audio_tracks:
          type: array
          description: 'Lists of all audio and video tracks that are available. Note: the default audio and video track info will also appear here.'
          items:
            type: object
            properties:
              bitrate:
                type: integer
                format: int32
              codec_string:
                type: string
                description: codec_string will be set to the RFC 6381 compliant string that represents the specific codec in this AudioTrackInfo. ex. 'mp4a.40.2' for AAC Low-Complexity.
              id:
                type: integer
                format: int32
                minimum: 0
              name:
                type: string
                description: Friendly name of the AudioTrack.
              num_channels:
                type: integer
                format: int32
              sample_rate:
                type: integer
                format: int32
            additionalProperties: false
        default_audio_track:
          type: object
          description: Audio and Video Track info provided so that callers have easy access to track information of default tracks in the above default_url.
          properties:
            bitrate:
              type: integer
              format: int32
            codec_string:
              type: string
              description: codec_string will be set to the RFC 6381 compliant string that represents the specific codec in this AudioTrackInfo. ex. 'mp4a.40.2' for AAC Low-Complexity.
            id:
              type: integer
              format: int32
              minimum: 0
            name:
              type: string
              description: Friendly name of the AudioTrack.
            num_channels:
              type: integer
              format: int32
            sample_rate:
              type: integer
              format: int32
          additionalProperties: false
        default_url:
          type: string
          description: 'default_url contains the default URL that can be used to start playback. Ex: https://example.com/cluster/org/isp/ext_id/foo/play?vid_id=2&aud_id=6 The vid_id and aud_id can be changed utilizing the ones provided by the ''audio_tracks'' and ''video_tracks'' fields to see different combinations.'
        default_video_track:
          type: object
          properties:
            bitrate:
              type: integer
              format: int32
            codec_string:
              type: string
              description: codec_string will be set to the RFC 6381 compliant string that represents the specific codec in this VideoTrackInfo. ex. 'avc1.4d401e' for H.264 and 'hvc1.2.4.L150.90' for H.265. This can be used to verify track+browser compatibility.
            frame_rate:
              type: number
              format: float
            height:
              type: integer
              format: int32
            id:
              type: integer
              format: int32
              minimum: 0
            name:
              type: string
              description: Friendly name of the VideoTrack.
            width:
              type: integer
              format: int32
          additionalProperties: false
        token:
          type: string
          description: JWT Bearer token that shall be supplied with a 'pre-flight' to myriapod.js to send the auth token to the server.
        video_tracks:
          type: array
          items:
            type: object
            properties:
              bitrate:
                type: integer
                format: int32
              codec_string:
                type: string
                description: codec_string will be set to the RFC 6381 compliant string that represents the specific codec in this VideoTrackInfo. ex. 'avc1.4d401e' for H.264 and 'hvc1.2.4.L150.90' for H.265. This can be used to verify track+browser compatibility.
              frame_rate:
                type: number
                format: float
              height:
                type: integer
                format: int32
              id:
                type: integer
                format: int32
                minimum: 0
              name:
                type: string
                description: Friendly name of the VideoTrack.
              width:
                type: integer
                format: int32
            additionalProperties: false
      additionalProperties: false
    GetProductConfigResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        errors:
          type: array
          description: Errors when fetching product config
          items:
            type: object
            properties:
              location:
                type: string
                description: Where the error occured, e.g. 'body.items[3].tags' or 'path.thing-id'
              message:
                type: string
                description: Error message text
              value:
                description: The value at the given location
            additionalProperties: false
        product_config:
          type: array
          description: Product Config for a given org and product id
          items:
            type: object
            properties:
              archive_settings:
                type: object
                description: Archive settings for collapses
                properties:
                  global_archive_settings:
                    type: object
                    properties:
                      aes_key_conversion:
                        type: string
                      enforce_custom_mp4_path:
                        type: boolean
                      master_url_type:
                        type: string
                      media_url_type:
                        type: string
                      origins:
                        type: object
                        additionalProperties:
                          type: object
                          properties:
                            headers:
                              type: object
                              additionalProperties:
                                type: string
                            hostname:
                              type: string
                          additionalProperties: false
                          required:
                            - hostname
                            - headers
                      preserve_published_directory_structure:
                        type: boolean
                      url_type:
                        type: string
                    additionalProperties: false
                  netstorage_connection_settings:
                    type: array
                    items:
                      type: object
                      properties:
                        archive_target_types:
                          type: array
                          items:
                            type: string
                        auto_archive_on_collapse_types:
                          type: array
                          items:
                            type: string
                        auto_copy_to_netstorage:
                          type: boolean
                        basedir:
                          type: string
                        copy_collapsed_archive:
                          type: boolean
                        copy_raw_archive:
                          type: boolean
                        cpcode:
                          type: string
                        hostname:
                          type: string
                        key:
                          type: string
                        keyname:
                          type: string
                        manifest_updates:
                          type: object
                          properties:
                            playback_absolute_base_url:
                              type: string
                            remove_cross_playback_urls:
                              type: boolean
                          additionalProperties: false
                          required:
                            - remove_cross_playback_urls
                      additionalProperties: false
                      required:
                        - hostname
                        - key
                        - keyname
                        - cpcode
                        - auto_copy_to_netstorage
                        - copy_raw_archive
                        - copy_collapsed_archive
                  s3_archive_settings:
                    type: array
                    items:
                      type: object
                      properties:
                        access_key_id:
                          type: string
                        archive_target_types:
                          type: array
                          items:
                            type: string
                        auto_archive:
                          type: boolean
                        auto_archive_on_collapse_types:
                          type: array
                          items:
                            type: string
                        bucket:
                          type: string
                        endpoint:
                          type: string
                        prefix:
                          type: string
                        region:
                          type: string
                        secret_access_key:
                          type: string
                        session_token:
                          type: string
                      additionalProperties: false
                      required:
                        - auto_archive
                        - region
                        - bucket
                        - prefix
                additionalProperties: false
              collapse_config:
                type: object
                description: Collapse filter options
                properties:
                  auto_copy_mp4:
                    type: boolean
                  auto_create_mp4:
                    type: boolean
                  m3u8_filters_config:
                    type: object
                    properties:
                      links:
                        type: array
                        items:
                          type: object
                          properties:
                            filtertypes:
                              type: array
                              items:
                                type: string
                            include:
                              type: boolean
                            maintain_markers:
                              type: boolean
                            timespan:
                              type: array
                              items:
                                type: object
                                properties:
                                  endtime:
                                    type: string
                                    format: date-time
                                  starttime:
                                    type: string
                                    format: date-time
                                additionalProperties: false
                                required:
                                  - starttime
                          additionalProperties: false
                          required:
                            - include
                            - filtertypes
                    additionalProperties: false
                    required:
                      - links
                  use_per_url_collapse_notification:
                    type: boolean
                  v2_filters_config:
                    type: object
                    properties:
                      scte_35:
                        type: object
                        description: SCTE-based filtering
                        properties:
                          break:
                            type: boolean
                            description: Filter out SCTE-35 break
                          chapter:
                            type: boolean
                            description: Filter out chapters
                          distributor_ads:
                            type: boolean
                            description: Filter out distributor ads
                          options:
                            type: object
                            description: Additional SCTE filter options
                            properties:
                              signal_removed_provider_ad:
                                type: boolean
                                description: Signal removal of provider ads
                            additionalProperties: false
                            required:
                              - signal_removed_provider_ad
                          provider_ads:
                            type: boolean
                            description: Filter out provider ads
                          upid:
                            type: string
                            description: Filter out SCTE-35 message upid
                        additionalProperties: false
                        required:
                          - break
                          - distributor_ads
                          - provider_ads
                          - chapter
                          - upid
                      time:
                        type: array
                        description: Time-based filtering
                        items:
                          type: object
                          properties:
                            end:
                              type: string
                              description: end time of the time window of segments
                              format: date-time
                            include:
                              type: boolean
                              description: should include boundary within the VOD
                            start:
                              type: string
                              description: start time of the time window of segments
                              format: date-time
                          additionalProperties: false
                          required:
                            - start
                            - end
                            - include
                    additionalProperties: false
                additionalProperties: false
              collapse_trigger_config:
                type: object
                description: Options for when to trigger collapses
                properties:
                  allow_multiple:
                    type: boolean
                  collapse_program:
                    type: boolean
                  collapse_stream:
                    type: boolean
                  scte35_upid:
                    type: string
                  triggers:
                    type: array
                    items:
                      type: object
                      properties:
                        scte35_upid:
                          type: string
                        segmentation_event_id:
                          type: integer
                          format: int32
                          minimum: 0
                        segmentation_type_id:
                          type: integer
                          format: int32
                      additionalProperties: false
                      required:
                        - segmentation_type_id
                additionalProperties: false
                required:
                  - collapse_program
                  - allow_multiple
                  - collapse_stream
              edc_partial_presentations:
                type: object
                description: Partial presentation definitions
                properties:
                  presentations:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        renditions:
                          type: array
                          items:
                            type: integer
                            format: int32
                      additionalProperties: false
                      required:
                        - name
                        - renditions
                additionalProperties: false
                required:
                  - presentations
              edc_transcode_template:
                type: object
                description: Template to transcode mp4 to hls
                additionalProperties: {}
              notifications:
                type: array
                description: Notifiaction settings for collapses
                items:
                  type: object
                  properties:
                    event_types:
                      type: array
                      items:
                        type: string
                    name:
                      type: string
                    notification:
                      type: object
                      properties:
                        notification_hostname:
                          type: string
                        notification_settings:
                          type: string
                        notification_type:
                          type: string
                        use_channel_api:
                          type: boolean
                      additionalProperties: false
                      required:
                        - notification_type
                        - notification_settings
                  additionalProperties: false
                  required:
                    - name
                    - event_types
                    - notification
              region:
                type: string
                description: Region represents the general geolocation the product is in.
                enum:
                  - US_WEST
                  - US_EAST
              store:
                type: string
                description: store for product
              workflow_config:
                type: object
                description: Config variables for workflows
                properties:
                  cutprogram_padding_in_seconds:
                    type: integer
                    format: int32
                  make_mp4:
                    type: boolean
                  mp4-feature-flag:
                    type: string
                additionalProperties: false
            additionalProperties: false
      additionalProperties: false
      required:
        - product_config
        - errors
    GetProductResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        errors:
          type: array
          description: Errors when fetching product
          items:
            type: object
            properties:
              location:
                type: string
                description: Where the error occured, e.g. 'body.items[3].tags' or 'path.thing-id'
              message:
                type: string
                description: Error message text
              value:
                description: The value at the given location
            additionalProperties: false
        products:
          type: array
          description: Product Array
          items:
            type: object
            properties:
              description:
                type: string
                description: Description for the product
              file_count:
                type: integer
                description: Number of files in the product
                format: int64
              id:
                type: integer
                description: ID for the product
                format: int64
              name:
                type: string
                description: Name of the product
              region:
                type: string
                description: Region represents the general geolocation the product is in.
                enum:
                  - US_WEST
                  - US_EAST
              total_bytes:
                type: integer
                description: Total Bytes of the product
                format: int64
            additionalProperties: false
            required:
              - id
              - description
              - total_bytes
              - file_count
              - name
      additionalProperties: false
      required:
        - products
        - errors
    GetScte35MarkerByClipIDResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        scte35_markers:
          type: array
          description: List of scte markers for clip
          items:
            type: object
            properties:
              created_time:
                type: string
                format: date-time
              cue_id:
                type: integer
                format: int32
                minimum: 0
              marker_id:
                type: integer
                format: int64
              progress:
                type: string
              timeline_event:
                type: string
              timestamp:
                type: string
                format: date-time
              type:
                type: string
            additionalProperties: false
            required:
              - created_time
              - timestamp
              - type
              - cue_id
              - progress
              - timeline_event
              - marker_id
      additionalProperties: false
      required:
        - scte35_markers
    GetTaskResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        created:
          type: string
          description: when the task was created in RFC3339Nano format
          format: date-time
          example: "2006-01-02T15:04:05.9999Z"
        done:
          type: boolean
          description: indicates if the task is done or not
        ended:
          type: string
          description: when the task ended in RFC3339Nano format
          format: date-time
          example: "2006-01-02T15:04:05.9999Z"
        error:
          type: string
          description: error message if any for this task
        failure_count:
          type: integer
          description: number of times the task failed
          format: int32
        id:
          type: string
          description: ID for the task
        params:
          type: string
          description: params sent to task
        progress:
          type: number
          description: the progress of the task
          format: double
        region:
          type: string
          description: Region represents the general geolocation the task is in.
          enum:
            - US_WEST
            - US_EAST
        status:
          type: string
          description: status for the task
        succeeded:
          type: boolean
          description: indicates if the task succeeded or not
        type:
          type: integer
          description: type of task
          format: int32
        weight:
          type: integer
          description: priority
          format: int32
        workerVersion:
          type: string
          description: the version of the worker for this task
        worker_id:
          type: integer
          description: the id of the worker for the task
          format: int64
      additionalProperties: false
      required:
        - id
        - type
        - params
        - weight
        - created
        - ended
        - done
        - succeeded
        - error
        - worker_id
        - failure_count
        - status
        - progress
        - workerVersion
    GetVODResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        description:
          type: string
          description: Description of a vod
        file_count:
          type: integer
          description: File count for the vod
          format: int64
        id:
          type: string
          description: ID of a vod
        last_published:
          type: string
          description: Last published time for VOD
          format: date-time
        packaging_format:
          type: string
          description: Packaging Format for VOD
          enum:
            - HLS
            - DASH
            - CMAF
        store:
          type: string
          description: Store address for vod
          example: '{"s3region":"us-west-2","s3bucket":"test","localpath":""}'
        store_prefix:
          type: string
        total_bytes:
          type: integer
          description: Total bytes of a vod
          format: int64
        version:
          type: string
          description: Vod version (either v1 or v2)
      additionalProperties: false
      required:
        - id
        - description
        - version
        - file_count
        - total_bytes
        - store
        - store_prefix
    InsertMetadataRequest:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        payload:
          type: string
          description: ID3 payload as UTF-8 text
      additionalProperties: false
      required:
        - payload
    InsertMetadataResult:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        presentation_time:
          type: string
          description: The media stream timestamp for where the transcoder inserted the metadata
          format: date-time
      additionalProperties: false
      required:
        - presentation_time
    ListClipsForVodResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        channel_clips:
          type: array
          description: List of clips for the channel
          items:
            type: object
            properties:
              clips:
                type: array
                description: List of clips associated with the VOD
                items:
                  type: object
                  properties:
                    clip_id:
                      type: string
                      description: Primary ID for the clip
                    created:
                      type: string
                      description: Created timestamp in RFC3339Nano format
                      format: date-time
                      example: "2006-01-02T15:04:05.9999Z"
                    description:
                      type: string
                      description: Description for the clip
                    duration:
                      type: integer
                      description: Duration of the clip in seconds
                      format: int64
                    end:
                      type: string
                      description: End timestamp in RFC3339Nano format
                      format: date-time
                      example: "2006-01-02T15:04:05.9999Z"
                    mp4path:
                      type: string
                      description: Path for the MP4 for the clip
                    start:
                      type: string
                      description: Start timestamp in RFC3339Nano format
                      format: date-time
                      example: "2006-01-02T15:04:05.9999Z"
                  additionalProperties: false
                  required:
                    - clip_id
                    - description
                    - mp4path
                    - created
                    - start
                    - end
                    - duration
              vod_id:
                type: string
                description: ID of the VOD from which the clips were created
            additionalProperties: false
            required:
              - vod_id
              - clips
        errors:
          type: array
          description: Reports failures to fetch the clips of a single VOD. Empty if clips from all VODs are successfully fetched.
          items:
            type: object
            properties:
              location:
                type: string
                description: Where the error occured, e.g. 'body.items[3].tags' or 'path.thing-id'
              message:
                type: string
                description: Error message text
              value:
                description: The value at the given location
            additionalProperties: false
      additionalProperties: false
      required:
        - channel_clips
        - errors
    ListClipsResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        channel_clips:
          type: array
          description: List of clips for the channel
          items:
            type: object
            properties:
              clips:
                type: array
                description: List of clips associated with the VOD
                items:
                  type: object
                  properties:
                    clip_id:
                      type: string
                      description: Primary ID for the clip
                    created:
                      type: string
                      description: Created timestamp in RFC3339Nano format
                      format: date-time
                      example: "2006-01-02T15:04:05.9999Z"
                    description:
                      type: string
                      description: Description for the clip
                    duration:
                      type: integer
                      description: Duration of the clip in seconds
                      format: int64
                    end:
                      type: string
                      description: End timestamp in RFC3339Nano format
                      format: date-time
                      example: "2006-01-02T15:04:05.9999Z"
                    mp4path:
                      type: string
                      description: Path for the MP4 for the clip
                    start:
                      type: string
                      description: Start timestamp in RFC3339Nano format
                      format: date-time
                      example: "2006-01-02T15:04:05.9999Z"
                  additionalProperties: false
                  required:
                    - clip_id
                    - description
                    - mp4path
                    - created
                    - start
                    - end
                    - duration
              vod_id:
                type: string
                description: ID of the VOD from which the clips were created
            additionalProperties: false
            required:
              - vod_id
              - clips
        errors:
          type: array
          description: Reports failures to fetch the clips of a single VOD. Empty if clips from all VODs are successfully fetched.
          items:
            type: string
      additionalProperties: false
      required:
        - channel_clips
        - errors
    ListProductsResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        errors:
          type: array
          description: Errors when fetching products
          items:
            type: object
            properties:
              location:
                type: string
                description: Where the error occured, e.g. 'body.items[3].tags' or 'path.thing-id'
              message:
                type: string
                description: Error message text
              value:
                description: The value at the given location
            additionalProperties: false
        products:
          type: array
          description: Product Array
          items:
            type: object
            properties:
              description:
                type: string
                description: Description for the product
              file_count:
                type: integer
                description: Number of files in the product
                format: int64
              id:
                type: integer
                description: ID for the product
                format: int64
              name:
                type: string
                description: Name of the product
              region:
                type: string
                description: Region represents the general geolocation the product is in.
                enum:
                  - US_WEST
                  - US_EAST
              total_bytes:
                type: integer
                description: Total Bytes of the product
                format: int64
            additionalProperties: false
            required:
              - id
              - description
              - total_bytes
              - file_count
              - name
      additionalProperties: false
      required:
        - products
        - errors
    ListProgramsResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        errors:
          type: array
          description: Errors when fetching programs
          items:
            type: object
            properties:
              location:
                type: string
                description: Where the error occured, e.g. 'body.items[3].tags' or 'path.thing-id'
              message:
                type: string
                description: Error message text
              value:
                description: The value at the given location
            additionalProperties: false
        programs:
          type: array
          description: Program Array
          items:
            type: object
            properties:
              description:
                type: string
                description: Description for the Program
              file_count:
                type: integer
                description: Number of files in the program
                format: int64
              id:
                type: string
                description: ID for the program
              last_published:
                type: string
                description: Last published time for the program
                format: date-time
                example: "2023-04-06T16:17:45Z"
              published_clip_id:
                type: integer
                description: Clip ID published for program
                format: int64
              published_vod_id:
                type: integer
                description: VOD ID published for program
                format: int64
              region:
                type: string
                description: Region represents the general geolocation the program is in.
                enum:
                  - US_WEST
                  - US_EAST
              retention_days:
                type: integer
                description: How many days the program is retained for
                format: int64
              total_bytes:
                type: integer
                description: Total Bytes of the Program
                format: int64
            additionalProperties: false
            required:
              - id
              - description
              - total_bytes
              - file_count
              - last_published
              - published_vod_id
              - published_clip_id
              - retention_days
      additionalProperties: false
      required:
        - programs
        - errors
    ListTasksResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        errors:
          type: array
          description: Errors when fetching tasks
          items:
            type: object
            properties:
              location:
                type: string
                description: Where the error occured, e.g. 'body.items[3].tags' or 'path.thing-id'
              message:
                type: string
                description: Error message text
              value:
                description: The value at the given location
            additionalProperties: false
        tasks:
          type: array
          description: Task Array
          items:
            type: object
            properties:
              created:
                type: string
                description: when the task was created in RFC3339Nano format
                format: date-time
                example: "2006-01-02T15:04:05.9999Z"
              done:
                type: boolean
                description: indicates if the task is done or not
              ended:
                type: string
                description: when the task ended in RFC3339Nano format
                format: date-time
                example: "2006-01-02T15:04:05.9999Z"
              error:
                type: string
                description: error message if any for this task
              failure_count:
                type: integer
                description: number of times the task failed
                format: int32
              id:
                type: string
                description: ID for the task
              params:
                type: string
                description: params sent to task
              progress:
                type: number
                description: the progress of the task
                format: double
              region:
                type: string
                description: Region represents the general geolocation the task is in.
                enum:
                  - US_WEST
                  - US_EAST
              status:
                type: string
                description: status for the task
              succeeded:
                type: boolean
                description: indicates if the task succeeded or not
              type:
                type: integer
                description: type of task
                format: int32
              weight:
                type: integer
                description: priority
                format: int32
              workerVersion:
                type: string
                description: the version of the worker for this task
              worker_id:
                type: integer
                description: the id of the worker for the task
                format: int64
            additionalProperties: false
            required:
              - id
              - type
              - params
              - weight
              - created
              - ended
              - done
              - succeeded
              - error
              - worker_id
              - failure_count
              - status
              - progress
              - workerVersion
      additionalProperties: false
      required:
        - tasks
        - errors
    ListVODsResponse:
      type: object
      properties:
        description:
          type: string
        file_count:
          type: integer
          format: int64
        id:
          type: string
        last_published:
          type: string
          format: date-time
        packaging_format:
          type: string
          enum:
            - HLS
            - DASH
            - CMAF
        store:
          type: string
        store_prefix:
          type: string
        total_bytes:
          type: integer
          format: int64
        version:
          type: string
      additionalProperties: false
      required:
        - id
        - description
        - version
        - file_count
        - total_bytes
        - store
        - store_prefix
    ListVODsResponseList:
      type: array
      items:
        $ref: '#/components/schemas/ListVODsResponse'
    MP4URLResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        mp4url:
          type: string
          description: URL for mp4 of a clip
      additionalProperties: false
      required:
        - mp4url
    MakeClipRequest:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        correlation_id:
          type: string
          description: Identifer that is carried through archive and collapse notifications for the clip creation
        description:
          type: string
          description: Description of the clip being created
          maxLength: 80
        end:
          type: string
          description: End timestamp in RFC3339Nano format
          example: "2006-01-02T15:04:05.9999Z"
        overwrite:
          type: boolean
          description: 'Overwrite existing clip. Default: false'
        start:
          type: string
          description: Start timestamp in RFC3339Nano format
          example: "2006-01-02T15:04:05.9999Z"
      additionalProperties: false
      required:
        - start
        - end
    MakeClipResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        clip_id:
          type: string
          description: Identifier for the clip created from the VOD
        task_id:
          type: string
          description: Identifier for the task from which the clip was created
      additionalProperties: false
      required:
        - task_id
        - clip_id
    MakeMP4Response:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        taskid:
          type: string
          description: Task ID for makemp4 task
      additionalProperties: false
      required:
        - taskid
    OrgSummary:
      type: object
      properties:
        id:
          type: string
          description: ID of the organization
        self:
          type: string
          description: Link to this resource
          format: uri
          readOnly: true
      additionalProperties: false
      required:
        - id
    OrgSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/OrgSummary'
    PinSourceRequest:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        ingest_origin:
          type: string
          description: Which ingest origin to pin the transcoder to.
          enum:
            - PRIMARY
            - SECONDARY
      additionalProperties: false
    PlayURLResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        url:
          type: string
          description: URL for playback of a clip
      additionalProperties: false
      required:
        - url
    PostClipArchiveRequest:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        correlation_id:
          type: string
          description: Identifer that is carried through the archive request
      additionalProperties: false
    PostClipArchiveResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        correlation_id:
          type: string
          description: Identifer that is carried through the archive request
        task_errors:
          type: array
          description: Set if Live2VOD failed to start an archive task for any configured archive destination. Empty if all are successful
          items:
            type: object
            properties:
              location:
                type: string
                description: Where the error occured, e.g. 'body.items[3].tags' or 'path.thing-id'
              message:
                type: string
                description: Error message text
              value:
                description: The value at the given location
            additionalProperties: false
        task_ids:
          type: array
          description: Array of task ids for each archive destination task started by Live2VOD
          items:
            type: string
      additionalProperties: false
      required:
        - task_ids
        - task_errors
    PostClipRequest:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        correlation_id:
          type: string
          description: Identifer that is carried through archive and collapse notifications for the clip creation
        create_mp4:
          type: boolean
          description: 'If true, creates the mp4. Default: false'
        description:
          type: string
          description: Description of the clip being created
          maxLength: 80
        end:
          type: string
          description: End timestamp in RFC3339Nano format
          example: "2006-01-02T15:04:05.9999Z"
        mp4_file_path:
          type: string
          description: If set, overrides the mp4 file path for archiving.
          maxLength: 1024
        overwrite:
          type: boolean
          description: 'Overwrite existing clip. Default: false'
        start:
          type: string
          description: Start timestamp in RFC3339Nano format
          example: "2006-01-02T15:04:05.9999Z"
      additionalProperties: false
      required:
        - start
        - end
    PostClipResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        clips:
          type: array
          description: List of clip identifiers paired with each VodID that was clipped
          items:
            type: object
            properties:
              clip_id:
                type: string
                description: Identifier for the clip created from the VOD
              vod_id:
                type: string
                description: Identifier for the VOD from which the clip was created
            additionalProperties: false
            required:
              - vod_id
              - clip_id
        correlation_id:
          type: string
          description: Identifer that is carried through archive and collapse notifications for the clip creation
        task_errors:
          type: array
          description: Reports failures of individual clip tasks. Empty if all are successful
          items:
            type: object
            properties:
              location:
                type: string
                description: Where the error occured, e.g. 'body.items[3].tags' or 'path.thing-id'
              message:
                type: string
                description: Error message text
              value:
                description: The value at the given location
            additionalProperties: false
        task_ids:
          type: array
          description: Identifies clipping tasks, each task producing N VodItems
          items:
            type: string
      additionalProperties: false
      required:
        - task_ids
        - clips
        - task_errors
    PostCopyMP4Request:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        override_mp4_path:
          type: string
          description: override path for writing an mp4 to destination.
          maxLength: 1024
      additionalProperties: false
    PostCopyMP4Response:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        task_ids:
          type: array
          description: Array of task ids for each copymp4 destination task successfully started by Live2VOD
          items:
            type: string
      additionalProperties: false
      required:
        - task_ids
    PostMakeMP4Request:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        override_mp4_path:
          type: string
          description: override path for writing an mp4 to destination.
          maxLength: 1024
      additionalProperties: false
    RetryTaskResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        error:
          type: object
          description: Error when canceling task
          properties:
            location:
              type: string
              description: Where the error occured, e.g. 'body.items[3].tags' or 'path.thing-id'
            message:
              type: string
              description: Error message text
            value:
              description: The value at the given location
          additionalProperties: false
      additionalProperties: false
      required:
        - error
    Scte35:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        payload:
          type: string
          description: The SCTE-35 payload, encoded as base-64 in JSON or binary data in CBOR
          example: /DAvAAAAAAAAAP/wBQb/d2+7OgAZAhdDVUVJAAAD6ACACAic1fd1d2+7OjABAeo2v/g=
      additionalProperties: false
      required:
        - payload
    Segment:
      type: object
      properties:
        end:
          type: string
          description: The program time when the segment ends (or ended).
          format: date-time
        event_id:
          type: integer
          description: The event_id used in the Signal START that resulted in this signaling segment.
          format: int32
          minimum: 0
        segment_id:
          type: integer
          description: Uniquely identifies the signaling segment for a channel. This is assigned by the transcoder when the segment is created.
          format: int64
          minimum: 0
        slate_url:
          type: string
          description: When set, contains the URL to the slate media asset that will play for the duration of the segment.
        start:
          type: string
          description: The program time when the segment starts (or started).
          format: date-time
        timed_metadata_payload:
          type: string
          description: Timed metadata opaque payload data.
        timed_metadata_type:
          type: string
          description: The timed metadata signal's type.
        type:
          type: string
          enum:
            - SPLICE_INSERT
            - CONTENT_ID
            - PROGRAM
            - PROGRAM_BLACKOUT_OVERRIDE
            - PROGRAM_BREAKAWAY
            - CHAPTER
            - BREAK
            - OPENING_CREDIT
            - CLOSING_CREDIT
            - PROVIDER_PLACEMENT_OP
            - DISTRIBUTOR_PLACEMENT_OP
            - PROVIDER_OVERLAY_OP
            - DISTRIBUTOR_OVERLAY_OP
            - PROVIDER_AD
            - DISTRIBUTOR_AD
            - UNSCHEDULED_EVENT
            - NETWORK
            - SLATE
            - NOT_INDICATED
            - TIMED_METADATA
      additionalProperties: false
    SegmentList:
      type: array
      items:
        $ref: '#/components/schemas/Segment'
    SignalingLog:
      type: object
      properties:
        log:
          type: object
          properties:
            base64:
              type: string
            message:
              type: string
            pretty:
              type: string
          additionalProperties: false
          required:
            - message
            - base64
            - pretty
        status:
          type: string
        timestamp:
          type: string
          format: date-time
      additionalProperties: false
      required:
        - log
        - status
        - timestamp
    SignalingLogList:
      type: array
      items:
        $ref: '#/components/schemas/SignalingLog'
    Source:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        id:
          type: string
          description: Unique source ID
          example: s-knc54ts9kazynm97
          readOnly: true
        name:
          type: string
          description: Source name
          example: HBO
        self:
          type: string
          description: Link to this resource
          format: uri
          readOnly: true
      additionalProperties: false
      required:
        - id
        - name
    Status:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        ingest_status:
          type: object
          description: Ingest components's status.
          properties:
            primary_status:
              type: object
              description: Primary source status.
              properties:
                active:
                  type: boolean
                  description: Reports whether this is the active source - i.e. the source being transcoded.
                cc_errors:
                  type: integer
                  description: Continuity counter error total since the transcoder pod started.
                  format: int64
                last_data_received:
                  type: string
                  description: The last time data was received for this source.
                  format: date-time
                pinned:
                  type: boolean
                  description: Reports whether this source was pinned to be always preferred (if available).
                pmt:
                  type: object
                  description: The PMT for this source.
                  properties:
                    last_update:
                      type: string
                      description: The time that the PMT was updated.
                      format: date-time
                    pcr_pid:
                      type: integer
                      format: int32
                      minimum: 0
                    pid:
                      type: integer
                      format: int32
                      minimum: 0
                    program_number:
                      type: integer
                      description: The following fields correspond to fields in github.com/iStreamPlanet/go-media/mp2t.PMT
                      format: int32
                      minimum: 0
                    streams:
                      type: array
                      items:
                        type: object
                        properties:
                          mapped:
                            type: boolean
                            description: Indicates whether the stream is being used by the transcoder. The remaining fields are only valid if 'mapped' is true.
                          pid:
                            type: integer
                            format: int32
                            minimum: 0
                          raw_type:
                            type: string
                            description: The type of the stream as reported in the PMT.
                            enum:
                              - MP2T_STREAM_TYPE_MPEG1_VIDEO
                              - MP2T_STREAM_TYPE_MPEG2_VIDEO
                              - MP2T_STREAM_TYPE_MPEG1_AUDIO
                              - MP2T_STREAM_TYPE_MPEG2_AUDIO
                              - MP2T_STREAM_TYPE_PES_PRIVATE_DATA
                              - MP2T_STREAM_TYPE_ADTS_AAC
                              - MP2T_STREAM_TYPE_METADATA
                              - MP2T_STREAM_TYPE_AVC
                              - MP2T_STREAM_TYPE_HEVC
                              - MP2T_STREAM_TYPE_TEMI
                              - MP2T_STREAM_TYPE_AC3
                              - MP2T_STREAM_TYPE_SCTE35
                              - MP2T_STREAM_TYPE_EAC3
                              - MP2T_STREAM_TYPE_ENCRYPTED_AC3
                              - MP2T_STREAM_TYPE_ENCRYPTED_EAC3
                              - MP2T_STREAM_TYPE_ENCRYPTED_ADTS_AAC
                              - MP2T_STREAM_TYPE_ENCRYPTED_AVC
                              - MP2T_STREAM_TYPE_ID3
                              - MP2T_STREAM_TYPE_ANC
                              - MP2T_STREAM_TYPE_UNKNOWN
                          type:
                            type: string
                            description: The type of the stream inferred by the demuxer. Includes MP2TStreamType's pseudo-types values. It is not guaranteed to be the same value reported in the PMT. E.g. MP2T_STREAM_TYPE_PES_PRIVATE_DATA plus the right descriptor might result in MP2T_STREAM_TYPE_ID3.
                            enum:
                              - MP2T_STREAM_TYPE_MPEG1_VIDEO
                              - MP2T_STREAM_TYPE_MPEG2_VIDEO
                              - MP2T_STREAM_TYPE_MPEG1_AUDIO
                              - MP2T_STREAM_TYPE_MPEG2_AUDIO
                              - MP2T_STREAM_TYPE_PES_PRIVATE_DATA
                              - MP2T_STREAM_TYPE_ADTS_AAC
                              - MP2T_STREAM_TYPE_METADATA
                              - MP2T_STREAM_TYPE_AVC
                              - MP2T_STREAM_TYPE_HEVC
                              - MP2T_STREAM_TYPE_TEMI
                              - MP2T_STREAM_TYPE_AC3
                              - MP2T_STREAM_TYPE_SCTE35
                              - MP2T_STREAM_TYPE_EAC3
                              - MP2T_STREAM_TYPE_ENCRYPTED_AC3
                              - MP2T_STREAM_TYPE_ENCRYPTED_EAC3
                              - MP2T_STREAM_TYPE_ENCRYPTED_ADTS_AAC
                              - MP2T_STREAM_TYPE_ENCRYPTED_AVC
                              - MP2T_STREAM_TYPE_ID3
                              - MP2T_STREAM_TYPE_ANC
                              - MP2T_STREAM_TYPE_UNKNOWN
                          video:
                            type: object
                            description: Only one of ['video'] may be set.
                            properties:
                              bit_depth:
                                type: integer
                                format: int32
                              clli:
                                type: object
                                properties:
                                  max_cll:
                                    type: number
                                    description: Max content light level in nits.
                                    format: double
                                  max_fall:
                                    type: number
                                    description: Max frame (pic) average light level in nits.
                                    format: double
                                additionalProperties: false
                              color_description:
                                type: object
                                properties:
                                  color_primaries:
                                    type: string
                                    enum:
                                      - CP_RESERVED
                                      - CP_BT_709
                                      - CP_BT_470_M
                                      - CP_BT_470_BG
                                      - CP_SMPTE_170_M
                                      - CP_SMPTE_240_M
                                      - CP_FILM
                                      - CP_BT_2020
                                      - CP_SMPTE_428
                                      - CP_SMPTE_431
                                      - CP_SMPTE_432
                                  matrix_coeffs:
                                    type: string
                                    enum:
                                      - MC_GBR
                                      - MC_BT_709
                                      - MC_FCC
                                      - MC_BT_470_BG
                                      - MC_SMPTE_170_M
                                      - MC_SMPTE_240_M
                                      - MC_Y_CG_CO
                                      - MC_BT_2020_NC
                                      - MC_BT_2020_C
                                      - MC_SMPTE_2085
                                      - MC_CHROMA_DERIVED_NC
                                      - MC_CHROMA_DERIVED_C
                                      - MC_I_CT_CP
                                  transfer_characteristics:
                                    type: string
                                    enum:
                                      - TC_RESERVED
                                      - TC_BT_709
                                      - TC_BT_470_M
                                      - TC_BT_470_BG
                                      - TC_SMPTE_170_M
                                      - TC_SMPTE_240_M
                                      - TC_LINEAR
                                      - TC_LOG_100
                                      - TC_LOG_316
                                      - TC_IEC_61966_2_4
                                      - TC_BT_1361_E
                                      - TC_IEC_61966_2_1
                                      - TC_BT_2020_10
                                      - TC_BT_2020_12
                                      - TC_SMPTE_2084_PQ
                                      - TC_SMPTE_428
                                      - TC_ARIB_STD_B67_HLG
                                additionalProperties: false
                              frame_height:
                                type: integer
                                format: int32
                              frame_width:
                                type: integer
                                format: int32
                              mdcv:
                                type: object
                                properties:
                                  blue:
                                    type: object
                                    properties:
                                      x:
                                        type: number
                                        format: double
                                      "y":
                                        type: number
                                        format: double
                                    additionalProperties: false
                                  green:
                                    type: object
                                    properties:
                                      x:
                                        type: number
                                        format: double
                                      "y":
                                        type: number
                                        format: double
                                    additionalProperties: false
                                  max_display_mastering_luminance:
                                    type: number
                                    format: double
                                  min_display_mastering_luminance:
                                    type: number
                                    format: double
                                  red:
                                    type: object
                                    properties:
                                      x:
                                        type: number
                                        format: double
                                      "y":
                                        type: number
                                        format: double
                                    additionalProperties: false
                                  white_point:
                                    type: object
                                    properties:
                                      x:
                                        type: number
                                        format: double
                                      "y":
                                        type: number
                                        format: double
                                    additionalProperties: false
                                additionalProperties: false
                            additionalProperties: false
                        additionalProperties: false
                  additionalProperties: false
                quality_score:
                  type: number
                  description: A measure of the source's quality if available. Zero is the perfect score. The higher the score, the worst the quality.
                  format: double
                unavailable_reason:
                  type: string
                  description: If unset (empty string), the source is available, and could be made active if necessary. Otherwise, it contains a message indicating why the source is unavailable. E.g. 'No source AUs received'.
              additionalProperties: false
            secondary_status:
              type: object
              description: Secondary source status.
              properties:
                active:
                  type: boolean
                  description: Reports whether this is the active source - i.e. the source being transcoded.
                cc_errors:
                  type: integer
                  description: Continuity counter error total since the transcoder pod started.
                  format: int64
                last_data_received:
                  type: string
                  description: The last time data was received for this source.
                  format: date-time
                pinned:
                  type: boolean
                  description: Reports whether this source was pinned to be always preferred (if available).
                pmt:
                  type: object
                  description: The PMT for this source.
                  properties:
                    last_update:
                      type: string
                      description: The time that the PMT was updated.
                      format: date-time
                    pcr_pid:
                      type: integer
                      format: int32
                      minimum: 0
                    pid:
                      type: integer
                      format: int32
                      minimum: 0
                    program_number:
                      type: integer
                      description: The following fields correspond to fields in github.com/iStreamPlanet/go-media/mp2t.PMT
                      format: int32
                      minimum: 0
                    streams:
                      type: array
                      items:
                        type: object
                        properties:
                          mapped:
                            type: boolean
                            description: Indicates whether the stream is being used by the transcoder. The remaining fields are only valid if 'mapped' is true.
                          pid:
                            type: integer
                            format: int32
                            minimum: 0
                          raw_type:
                            type: string
                            description: The type of the stream as reported in the PMT.
                            enum:
                              - MP2T_STREAM_TYPE_MPEG1_VIDEO
                              - MP2T_STREAM_TYPE_MPEG2_VIDEO
                              - MP2T_STREAM_TYPE_MPEG1_AUDIO
                              - MP2T_STREAM_TYPE_MPEG2_AUDIO
                              - MP2T_STREAM_TYPE_PES_PRIVATE_DATA
                              - MP2T_STREAM_TYPE_ADTS_AAC
                              - MP2T_STREAM_TYPE_METADATA
                              - MP2T_STREAM_TYPE_AVC
                              - MP2T_STREAM_TYPE_HEVC
                              - MP2T_STREAM_TYPE_TEMI
                              - MP2T_STREAM_TYPE_AC3
                              - MP2T_STREAM_TYPE_SCTE35
                              - MP2T_STREAM_TYPE_EAC3
                              - MP2T_STREAM_TYPE_ENCRYPTED_AC3
                              - MP2T_STREAM_TYPE_ENCRYPTED_EAC3
                              - MP2T_STREAM_TYPE_ENCRYPTED_ADTS_AAC
                              - MP2T_STREAM_TYPE_ENCRYPTED_AVC
                              - MP2T_STREAM_TYPE_ID3
                              - MP2T_STREAM_TYPE_ANC
                              - MP2T_STREAM_TYPE_UNKNOWN
                          type:
                            type: string
                            description: The type of the stream inferred by the demuxer. Includes MP2TStreamType's pseudo-types values. It is not guaranteed to be the same value reported in the PMT. E.g. MP2T_STREAM_TYPE_PES_PRIVATE_DATA plus the right descriptor might result in MP2T_STREAM_TYPE_ID3.
                            enum:
                              - MP2T_STREAM_TYPE_MPEG1_VIDEO
                              - MP2T_STREAM_TYPE_MPEG2_VIDEO
                              - MP2T_STREAM_TYPE_MPEG1_AUDIO
                              - MP2T_STREAM_TYPE_MPEG2_AUDIO
                              - MP2T_STREAM_TYPE_PES_PRIVATE_DATA
                              - MP2T_STREAM_TYPE_ADTS_AAC
                              - MP2T_STREAM_TYPE_METADATA
                              - MP2T_STREAM_TYPE_AVC
                              - MP2T_STREAM_TYPE_HEVC
                              - MP2T_STREAM_TYPE_TEMI
                              - MP2T_STREAM_TYPE_AC3
                              - MP2T_STREAM_TYPE_SCTE35
                              - MP2T_STREAM_TYPE_EAC3
                              - MP2T_STREAM_TYPE_ENCRYPTED_AC3
                              - MP2T_STREAM_TYPE_ENCRYPTED_EAC3
                              - MP2T_STREAM_TYPE_ENCRYPTED_ADTS_AAC
                              - MP2T_STREAM_TYPE_ENCRYPTED_AVC
                              - MP2T_STREAM_TYPE_ID3
                              - MP2T_STREAM_TYPE_ANC
                              - MP2T_STREAM_TYPE_UNKNOWN
                          video:
                            type: object
                            description: Only one of ['video'] may be set.
                            properties:
                              bit_depth:
                                type: integer
                                format: int32
                              clli:
                                type: object
                                properties:
                                  max_cll:
                                    type: number
                                    description: Max content light level in nits.
                                    format: double
                                  max_fall:
                                    type: number
                                    description: Max frame (pic) average light level in nits.
                                    format: double
                                additionalProperties: false
                              color_description:
                                type: object
                                properties:
                                  color_primaries:
                                    type: string
                                    enum:
                                      - CP_RESERVED
                                      - CP_BT_709
                                      - CP_BT_470_M
                                      - CP_BT_470_BG
                                      - CP_SMPTE_170_M
                                      - CP_SMPTE_240_M
                                      - CP_FILM
                                      - CP_BT_2020
                                      - CP_SMPTE_428
                                      - CP_SMPTE_431
                                      - CP_SMPTE_432
                                  matrix_coeffs:
                                    type: string
                                    enum:
                                      - MC_GBR
                                      - MC_BT_709
                                      - MC_FCC
                                      - MC_BT_470_BG
                                      - MC_SMPTE_170_M
                                      - MC_SMPTE_240_M
                                      - MC_Y_CG_CO
                                      - MC_BT_2020_NC
                                      - MC_BT_2020_C
                                      - MC_SMPTE_2085
                                      - MC_CHROMA_DERIVED_NC
                                      - MC_CHROMA_DERIVED_C
                                      - MC_I_CT_CP
                                  transfer_characteristics:
                                    type: string
                                    enum:
                                      - TC_RESERVED
                                      - TC_BT_709
                                      - TC_BT_470_M
                                      - TC_BT_470_BG
                                      - TC_SMPTE_170_M
                                      - TC_SMPTE_240_M
                                      - TC_LINEAR
                                      - TC_LOG_100
                                      - TC_LOG_316
                                      - TC_IEC_61966_2_4
                                      - TC_BT_1361_E
                                      - TC_IEC_61966_2_1
                                      - TC_BT_2020_10
                                      - TC_BT_2020_12
                                      - TC_SMPTE_2084_PQ
                                      - TC_SMPTE_428
                                      - TC_ARIB_STD_B67_HLG
                                additionalProperties: false
                              frame_height:
                                type: integer
                                format: int32
                              frame_width:
                                type: integer
                                format: int32
                              mdcv:
                                type: object
                                properties:
                                  blue:
                                    type: object
                                    properties:
                                      x:
                                        type: number
                                        format: double
                                      "y":
                                        type: number
                                        format: double
                                    additionalProperties: false
                                  green:
                                    type: object
                                    properties:
                                      x:
                                        type: number
                                        format: double
                                      "y":
                                        type: number
                                        format: double
                                    additionalProperties: false
                                  max_display_mastering_luminance:
                                    type: number
                                    format: double
                                  min_display_mastering_luminance:
                                    type: number
                                    format: double
                                  red:
                                    type: object
                                    properties:
                                      x:
                                        type: number
                                        format: double
                                      "y":
                                        type: number
                                        format: double
                                    additionalProperties: false
                                  white_point:
                                    type: object
                                    properties:
                                      x:
                                        type: number
                                        format: double
                                      "y":
                                        type: number
                                        format: double
                                    additionalProperties: false
                                additionalProperties: false
                            additionalProperties: false
                        additionalProperties: false
                  additionalProperties: false
                quality_score:
                  type: number
                  description: A measure of the source's quality if available. Zero is the perfect score. The higher the score, the worst the quality.
                  format: double
                unavailable_reason:
                  type: string
                  description: If unset (empty string), the source is available, and could be made active if necessary. Otherwise, it contains a message indicating why the source is unavailable. E.g. 'No source AUs received'.
              additionalProperties: false
            source_loss_slate_status:
              type: object
              description: Source-loss slate status.
              properties:
                active:
                  type: boolean
                  description: Reports whether this is the active source - i.e. the source being transcoded.
                cc_errors:
                  type: integer
                  description: Continuity counter error total since the transcoder pod started.
                  format: int64
                last_data_received:
                  type: string
                  description: The last time data was received for this source.
                  format: date-time
                pinned:
                  type: boolean
                  description: Reports whether this source was pinned to be always preferred (if available).
                pmt:
                  type: object
                  description: The PMT for this source.
                  properties:
                    last_update:
                      type: string
                      description: The time that the PMT was updated.
                      format: date-time
                    pcr_pid:
                      type: integer
                      format: int32
                      minimum: 0
                    pid:
                      type: integer
                      format: int32
                      minimum: 0
                    program_number:
                      type: integer
                      description: The following fields correspond to fields in github.com/iStreamPlanet/go-media/mp2t.PMT
                      format: int32
                      minimum: 0
                    streams:
                      type: array
                      items:
                        type: object
                        properties:
                          mapped:
                            type: boolean
                            description: Indicates whether the stream is being used by the transcoder. The remaining fields are only valid if 'mapped' is true.
                          pid:
                            type: integer
                            format: int32
                            minimum: 0
                          raw_type:
                            type: string
                            description: The type of the stream as reported in the PMT.
                            enum:
                              - MP2T_STREAM_TYPE_MPEG1_VIDEO
                              - MP2T_STREAM_TYPE_MPEG2_VIDEO
                              - MP2T_STREAM_TYPE_MPEG1_AUDIO
                              - MP2T_STREAM_TYPE_MPEG2_AUDIO
                              - MP2T_STREAM_TYPE_PES_PRIVATE_DATA
                              - MP2T_STREAM_TYPE_ADTS_AAC
                              - MP2T_STREAM_TYPE_METADATA
                              - MP2T_STREAM_TYPE_AVC
                              - MP2T_STREAM_TYPE_HEVC
                              - MP2T_STREAM_TYPE_TEMI
                              - MP2T_STREAM_TYPE_AC3
                              - MP2T_STREAM_TYPE_SCTE35
                              - MP2T_STREAM_TYPE_EAC3
                              - MP2T_STREAM_TYPE_ENCRYPTED_AC3
                              - MP2T_STREAM_TYPE_ENCRYPTED_EAC3
                              - MP2T_STREAM_TYPE_ENCRYPTED_ADTS_AAC
                              - MP2T_STREAM_TYPE_ENCRYPTED_AVC
                              - MP2T_STREAM_TYPE_ID3
                              - MP2T_STREAM_TYPE_ANC
                              - MP2T_STREAM_TYPE_UNKNOWN
                          type:
                            type: string
                            description: The type of the stream inferred by the demuxer. Includes MP2TStreamType's pseudo-types values. It is not guaranteed to be the same value reported in the PMT. E.g. MP2T_STREAM_TYPE_PES_PRIVATE_DATA plus the right descriptor might result in MP2T_STREAM_TYPE_ID3.
                            enum:
                              - MP2T_STREAM_TYPE_MPEG1_VIDEO
                              - MP2T_STREAM_TYPE_MPEG2_VIDEO
                              - MP2T_STREAM_TYPE_MPEG1_AUDIO
                              - MP2T_STREAM_TYPE_MPEG2_AUDIO
                              - MP2T_STREAM_TYPE_PES_PRIVATE_DATA
                              - MP2T_STREAM_TYPE_ADTS_AAC
                              - MP2T_STREAM_TYPE_METADATA
                              - MP2T_STREAM_TYPE_AVC
                              - MP2T_STREAM_TYPE_HEVC
                              - MP2T_STREAM_TYPE_TEMI
                              - MP2T_STREAM_TYPE_AC3
                              - MP2T_STREAM_TYPE_SCTE35
                              - MP2T_STREAM_TYPE_EAC3
                              - MP2T_STREAM_TYPE_ENCRYPTED_AC3
                              - MP2T_STREAM_TYPE_ENCRYPTED_EAC3
                              - MP2T_STREAM_TYPE_ENCRYPTED_ADTS_AAC
                              - MP2T_STREAM_TYPE_ENCRYPTED_AVC
                              - MP2T_STREAM_TYPE_ID3
                              - MP2T_STREAM_TYPE_ANC
                              - MP2T_STREAM_TYPE_UNKNOWN
                          video:
                            type: object
                            description: Only one of ['video'] may be set.
                            properties:
                              bit_depth:
                                type: integer
                                format: int32
                              clli:
                                type: object
                                properties:
                                  max_cll:
                                    type: number
                                    description: Max content light level in nits.
                                    format: double
                                  max_fall:
                                    type: number
                                    description: Max frame (pic) average light level in nits.
                                    format: double
                                additionalProperties: false
                              color_description:
                                type: object
                                properties:
                                  color_primaries:
                                    type: string
                                    enum:
                                      - CP_RESERVED
                                      - CP_BT_709
                                      - CP_BT_470_M
                                      - CP_BT_470_BG
                                      - CP_SMPTE_170_M
                                      - CP_SMPTE_240_M
                                      - CP_FILM
                                      - CP_BT_2020
                                      - CP_SMPTE_428
                                      - CP_SMPTE_431
                                      - CP_SMPTE_432
                                  matrix_coeffs:
                                    type: string
                                    enum:
                                      - MC_GBR
                                      - MC_BT_709
                                      - MC_FCC
                                      - MC_BT_470_BG
                                      - MC_SMPTE_170_M
                                      - MC_SMPTE_240_M
                                      - MC_Y_CG_CO
                                      - MC_BT_2020_NC
                                      - MC_BT_2020_C
                                      - MC_SMPTE_2085
                                      - MC_CHROMA_DERIVED_NC
                                      - MC_CHROMA_DERIVED_C
                                      - MC_I_CT_CP
                                  transfer_characteristics:
                                    type: string
                                    enum:
                                      - TC_RESERVED
                                      - TC_BT_709
                                      - TC_BT_470_M
                                      - TC_BT_470_BG
                                      - TC_SMPTE_170_M
                                      - TC_SMPTE_240_M
                                      - TC_LINEAR
                                      - TC_LOG_100
                                      - TC_LOG_316
                                      - TC_IEC_61966_2_4
                                      - TC_BT_1361_E
                                      - TC_IEC_61966_2_1
                                      - TC_BT_2020_10
                                      - TC_BT_2020_12
                                      - TC_SMPTE_2084_PQ
                                      - TC_SMPTE_428
                                      - TC_ARIB_STD_B67_HLG
                                additionalProperties: false
                              frame_height:
                                type: integer
                                format: int32
                              frame_width:
                                type: integer
                                format: int32
                              mdcv:
                                type: object
                                properties:
                                  blue:
                                    type: object
                                    properties:
                                      x:
                                        type: number
                                        format: double
                                      "y":
                                        type: number
                                        format: double
                                    additionalProperties: false
                                  green:
                                    type: object
                                    properties:
                                      x:
                                        type: number
                                        format: double
                                      "y":
                                        type: number
                                        format: double
                                    additionalProperties: false
                                  max_display_mastering_luminance:
                                    type: number
                                    format: double
                                  min_display_mastering_luminance:
                                    type: number
                                    format: double
                                  red:
                                    type: object
                                    properties:
                                      x:
                                        type: number
                                        format: double
                                      "y":
                                        type: number
                                        format: double
                                    additionalProperties: false
                                  white_point:
                                    type: object
                                    properties:
                                      x:
                                        type: number
                                        format: double
                                      "y":
                                        type: number
                                        format: double
                                    additionalProperties: false
                                additionalProperties: false
                            additionalProperties: false
                        additionalProperties: false
                  additionalProperties: false
                quality_score:
                  type: number
                  description: A measure of the source's quality if available. Zero is the perfect score. The higher the score, the worst the quality.
                  format: double
                unavailable_reason:
                  type: string
                  description: If unset (empty string), the source is available, and could be made active if necessary. Otherwise, it contains a message indicating why the source is unavailable. E.g. 'No source AUs received'.
              additionalProperties: false
            source_merging_active:
              type: boolean
              description: Reports whether source merging is currently active i.e. that the transcoder is merging samples from primary and secondary sources to conceal errors.
            source_merging_disabled:
              type: boolean
              description: Reports whether source merging was disabled via API.
          additionalProperties: false
      additionalProperties: false
    Summary:
      type: object
      properties:
        id:
          type: string
          description: Station source ID
          example: stn-knc54ts9kazynm97
        name:
          type: string
          description: Source name
          example: HBO
        self:
          type: string
          description: Link to this resource
          format: uri
          readOnly: true
      additionalProperties: false
      required:
        - id
    Summary2:
      type: object
      properties:
        desired_state:
          type: string
          description: Desired state of channel
          enum:
            - "ON"
            - "OFF"
          example: "ON"
        etag:
          type: string
          description: Content hash
          example: 4bc54fd8
        id:
          type: string
          description: Unique channel ID
          example: hbo-west
        labels:
          type: array
          description: Channel Labels
          items:
            type: string
        name:
          type: string
          description: Friendly channel description
          example: HBO West
        org:
          type: string
          description: Organization
        self:
          type: string
          description: Link to this resource
          format: uri
          readOnly: true
        source:
          type: object
          description: Channel source
          properties:
            id:
              type: string
              description: Station source ID
              example: stn-knc54ts9kazynm97
            name:
              type: string
              description: Source name
              example: HBO
            self:
              type: string
              description: Link to this resource
              format: uri
              readOnly: true
          additionalProperties: false
          required:
            - id
      additionalProperties: false
      required:
        - org
        - id
        - etag
        - source
        - desired_state
    SummaryList:
      type: array
      items:
        $ref: '#/components/schemas/Summary'
    SummaryList2:
      type: array
      items:
        $ref: '#/components/schemas/Summary2'
    TaskResponse:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        tasks:
          type: array
          description: List of tasks for the program
          items:
            type: object
            properties:
              created:
                type: string
                description: when the task was created in RFC3339Nano format
                format: date-time
                example: "2006-01-02T15:04:05.9999Z"
              done:
                type: boolean
                description: indicates if the task is done or not
              ended:
                type: string
                description: when the task ended in RFC3339Nano format
                format: date-time
                example: "2006-01-02T15:04:05.9999Z"
              error:
                type: string
                description: error message if any for this task
              failure_count:
                type: integer
                description: number of times the task failed
                format: int32
              id:
                type: string
                description: ID for the task
              params:
                type: string
                description: params sent to task
              progress:
                type: number
                description: the progress of the task
                format: double
              region:
                type: string
                description: Region represents the general geolocation the task is in.
                enum:
                  - US_WEST
                  - US_EAST
              self:
                type: string
                description: Link to this resource
                format: uri
                readOnly: true
              status:
                type: string
                description: status for the task
              succeeded:
                type: boolean
                description: indicates if the task succeeded or not
              type:
                type: integer
                description: type of task
                format: int32
              weight:
                type: integer
                description: priority
                format: int32
              workerVersion:
                type: string
                description: the version of the worker for this task
              worker_id:
                type: integer
                description: the id of the worker for the task
                format: int64
            additionalProperties: false
            required:
              - id
              - type
              - params
              - weight
              - created
              - ended
              - done
              - succeeded
              - error
              - worker_id
              - failure_count
              - status
              - progress
              - workerVersion
      additionalProperties: false
      required:
        - tasks
    UpdateProductConfigRequest:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        archive_settings:
          type: object
          description: Archive settings for collapses
          properties:
            global_archive_settings:
              type: object
              properties:
                aes_key_conversion:
                  type: string
                enforce_custom_mp4_path:
                  type: boolean
                master_url_type:
                  type: string
                media_url_type:
                  type: string
                origins:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      headers:
                        type: object
                        additionalProperties:
                          type: string
                      hostname:
                        type: string
                    additionalProperties: false
                    required:
                      - hostname
                      - headers
                preserve_published_directory_structure:
                  type: boolean
                url_type:
                  type: string
              additionalProperties: false
            netstorage_connection_settings:
              type: array
              items:
                type: object
                properties:
                  archive_target_types:
                    type: array
                    items:
                      type: string
                  auto_archive_on_collapse_types:
                    type: array
                    items:
                      type: string
                  auto_copy_to_netstorage:
                    type: boolean
                  basedir:
                    type: string
                  copy_collapsed_archive:
                    type: boolean
                  copy_raw_archive:
                    type: boolean
                  cpcode:
                    type: string
                  hostname:
                    type: string
                  key:
                    type: string
                  keyname:
                    type: string
                  manifest_updates:
                    type: object
                    properties:
                      playback_absolute_base_url:
                        type: string
                      remove_cross_playback_urls:
                        type: boolean
                    additionalProperties: false
                    required:
                      - remove_cross_playback_urls
                additionalProperties: false
                required:
                  - hostname
                  - key
                  - keyname
                  - cpcode
                  - auto_copy_to_netstorage
                  - copy_raw_archive
                  - copy_collapsed_archive
            s3_archive_settings:
              type: array
              items:
                type: object
                properties:
                  access_key_id:
                    type: string
                  archive_target_types:
                    type: array
                    items:
                      type: string
                  auto_archive:
                    type: boolean
                  auto_archive_on_collapse_types:
                    type: array
                    items:
                      type: string
                  bucket:
                    type: string
                  endpoint:
                    type: string
                  prefix:
                    type: string
                  region:
                    type: string
                  secret_access_key:
                    type: string
                  session_token:
                    type: string
                additionalProperties: false
                required:
                  - auto_archive
                  - region
                  - bucket
                  - prefix
          additionalProperties: false
        collapse_config:
          type: object
          description: Collapse filter options
          properties:
            auto_copy_mp4:
              type: boolean
            auto_create_mp4:
              type: boolean
            m3u8_filters_config:
              type: object
              properties:
                links:
                  type: array
                  items:
                    type: object
                    properties:
                      filtertypes:
                        type: array
                        items:
                          type: string
                      include:
                        type: boolean
                      maintain_markers:
                        type: boolean
                      timespan:
                        type: array
                        items:
                          type: object
                          properties:
                            endtime:
                              type: string
                              format: date-time
                            starttime:
                              type: string
                              format: date-time
                          additionalProperties: false
                          required:
                            - starttime
                    additionalProperties: false
                    required:
                      - include
                      - filtertypes
              additionalProperties: false
              required:
                - links
            use_per_url_collapse_notification:
              type: boolean
            v2_filters_config:
              type: object
              properties:
                scte_35:
                  type: object
                  description: SCTE-based filtering
                  properties:
                    break:
                      type: boolean
                      description: Filter out SCTE-35 break
                    chapter:
                      type: boolean
                      description: Filter out chapters
                    distributor_ads:
                      type: boolean
                      description: Filter out distributor ads
                    options:
                      type: object
                      description: Additional SCTE filter options
                      properties:
                        signal_removed_provider_ad:
                          type: boolean
                          description: Signal removal of provider ads
                      additionalProperties: false
                      required:
                        - signal_removed_provider_ad
                    provider_ads:
                      type: boolean
                      description: Filter out provider ads
                    upid:
                      type: string
                      description: Filter out SCTE-35 message upid
                  additionalProperties: false
                  required:
                    - break
                    - distributor_ads
                    - provider_ads
                    - chapter
                    - upid
                time:
                  type: array
                  description: Time-based filtering
                  items:
                    type: object
                    properties:
                      end:
                        type: string
                        description: end time of the time window of segments
                        format: date-time
                      include:
                        type: boolean
                        description: should include boundary within the VOD
                      start:
                        type: string
                        description: start time of the time window of segments
                        format: date-time
                    additionalProperties: false
                    required:
                      - start
                      - end
                      - include
              additionalProperties: false
          additionalProperties: false
        collapse_trigger_config:
          type: object
          description: Options for when to trigger collapses
          properties:
            allow_multiple:
              type: boolean
            collapse_program:
              type: boolean
            collapse_stream:
              type: boolean
            scte35_upid:
              type: string
            triggers:
              type: array
              items:
                type: object
                properties:
                  scte35_upid:
                    type: string
                  segmentation_event_id:
                    type: integer
                    format: int32
                    minimum: 0
                  segmentation_type_id:
                    type: integer
                    format: int32
                additionalProperties: false
                required:
                  - segmentation_type_id
          additionalProperties: false
          required:
            - collapse_program
            - allow_multiple
            - collapse_stream
        edc_partial_presentations:
          type: object
          description: Partial presentation definitions
          properties:
            presentations:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  renditions:
                    type: array
                    items:
                      type: integer
                      format: int32
                additionalProperties: false
                required:
                  - name
                  - renditions
          additionalProperties: false
          required:
            - presentations
        edc_transcode_template:
          type: object
          description: Template to transcode mp4 to hls
          additionalProperties: {}
        notifications:
          type: array
          description: Notifiaction settings for collapses
          items:
            type: object
            properties:
              event_types:
                type: array
                items:
                  type: string
              name:
                type: string
              notification:
                type: object
                properties:
                  notification_hostname:
                    type: string
                  notification_settings:
                    type: string
                  notification_type:
                    type: string
                  use_channel_api:
                    type: boolean
                additionalProperties: false
                required:
                  - notification_type
                  - notification_settings
            additionalProperties: false
            required:
              - name
              - event_types
              - notification
        region:
          type: string
          description: Region represents the general geolocation the product is in.
          enum:
            - US_WEST
            - US_EAST
        store:
          type: string
          description: store for product
        workflow_config:
          type: object
          description: Config variables for workflows
          properties:
            cutprogram_padding_in_seconds:
              type: integer
              format: int32
            make_mp4:
              type: boolean
            mp4-feature-flag:
              type: string
          additionalProperties: false
      additionalProperties: false
    UpdateProductConfigResponse:
      type: object
      additionalProperties: false
    desiredStateBody:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        desired_state:
          type: string
          description: Desired state
          enum:
            - "ON"
            - "OFF"
          example: "ON"
      additionalProperties: false
      required:
        - desired_state
    patch-org-channel-request:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        created:
          type: string
          description: Date and time the channel was created.
          format: date-time
          readOnly: true
        description:
          type: string
          description: A human-readable description of the channel.
        desired_state:
          type: string
          description: Desired running state for a channel.
          enum:
            - "ON"
            - "OFF"
        enable_byoip:
          type: boolean
          description: Indicates whether the channel's transcoder needs to run in a designated IP range.
        id:
          type: string
          description: External Channel ID provided at channel creation time
          example: my-channel
          minLength: 1
          pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
          readOnly: true
        ingest:
          type: object
          description: Ingest configures inputs for the transcoder.
          properties:
            slate:
              type: object
              description: Slate configures default slating behavior.
              properties:
                source_loss_url:
                  type: string
                  description: Source loss URL defines the location of the TS file to play when no source is available. It must have one audio and one video stream. Either MPEG2 or H.264 can be used.
                  format: uri-reference
                  example: https://example.com/slate.ts
              additionalProperties: false
            source:
              type: object
              description: Source provides a reference to the input media stream for this channel.
              properties:
                audio_sources:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        minLength: 1
                      language:
                        type: string
                        description: RFC 5646, e.g. 'en' 'en-US'
                        minLength: 1
                      license:
                        type: string
                        description: License specifies how the audio in this source is licensed.
                        enum:
                          - LIVE
                          - REPLAY
                      name:
                        type: string
                        description: Language fiendly name, e.g. 'English', 'Spanish'
                        minLength: 1
                      selector:
                        type: string
                        description: Expression for choosing an audio track in the stream for this AudioSource https://wbdstreaming.atlassian.net/wiki/spaces/LIVE/pages/250351679/Proposal+Audio+Track+Selection
                    additionalProperties: false
                  minItems: 1
                captions_source:
                  type: string
                  description: Closed captions source embedding. If unspecified, defaults to ATSC_A53.
                  enum:
                    - ATSC_A53
                    - SMPTE_2038
                id:
                  type: string
                  description: Unique identifier for this source.
                  example: s-examplej95ah2qab
                self:
                  type: string
                  description: Self link for the source.
                  format: uri-reference
                  readOnly: true
                video_source:
                  type: object
                  description: Additional information about the source video stream. This is only used to configure the transcoder compute resources to account for scaling and colorspace conversion of the source input.
                  properties:
                    dynamic_range:
                      type: string
                      description: The highest dynamic range the source will ever send to the transcoder.
                      enum:
                        - SDR
                        - HDR
                    max_resolution:
                      type: string
                      description: The maximum resolution the source will ever send to the transcoder.
                      enum:
                        - SD
                        - HD
                        - FHD
                        - TwoK
                        - QHD
                        - UHD
                  additionalProperties: false
              additionalProperties: false
          additionalProperties: false
        labels:
          type: array
          description: Optional labels for a channel. Any included labels must be at least 1 character long, but no greater than 256 characters. The maximum number of labels is 10.
          items:
            type: string
          maxItems: 10
        modified:
          type: string
          description: Date and time the channel was last modified.
          format: date-time
          readOnly: true
        name:
          type: string
          description: A friendly human-readable name for the channel. This will get displayed in user interfaces.
          example: My Channel
        organization:
          type: string
          minLength: 1
        packaging:
          type: object
          description: Packaging configures media format and content protection settings.
          properties:
            packagers:
              type: object
              description: Defines the list of packagers available for Publications.
              additionalProperties:
                type: object
                properties:
                  content_protection:
                    type: object
                    description: Configures how to protect packaged media segments.
                    properties:
                      atlas:
                        type: object
                        description: Only one of ['simple', 'atlas', 'cpix'] may be set.
                        properties:
                          asset_id:
                            type: string
                            description: The Asset Identifier which was taken from the token entitlement service request.
                          company_id:
                            type: string
                            description: The Identifier of the Company that this token belongs.
                          drms:
                            type: array
                            description: DRM system keys to request
                            items:
                              type: string
                              enum:
                                - WIDEVINE
                                - FAIRPLAY
                                - PRIMETIME
                                - PLAYREADY
                                - W3C_COMMON_CLEAR_KEY
                                - BULK_FILE
                            uniqueItems: true
                          widevine_v0_pssh_box:
                            type: boolean
                            description: When TRUE the KeyID is not embedded in the pssh box which sets the version to 0. Defaults to generating v1 pssh_boxes that includes the key_id
                        additionalProperties: false
                      bulk_file:
                        type: object
                        description: Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
                        properties:
                          iv_rotation:
                            type: string
                            description: How often the IV should be rotated and how it should be created
                            enum:
                              - RANDOM_PER_KEY
                              - PER_SEGMENT_NUMBER
                              - UNIQUE_PER_SEGMENT
                        additionalProperties: false
                      common:
                        type: object
                        description: Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
                        properties:
                          scheme_type:
                            type: string
                            description: Defines the scheme that can be used with Common Encryption
                            enum:
                              - CENC
                              - CBCS
                        additionalProperties: false
                      cpix:
                        type: object
                        description: Only one of ['simple', 'atlas', 'cpix'] may be set.
                        properties:
                          certificates_id:
                            type: string
                            description: Unique ID used for certificate settings, unique per distributor.
                          content_id:
                            type: string
                            description: (Optional) Content ID that identifies this channel in the CPIX service. Value is defined by the DRM system owner, and if defined will be included as part of a POST request.
                          credentials_id:
                            type: string
                            description: Unique ID used for credentials settings, unique per distributor.
                          decryption_key_id:
                            type: string
                            description: Unique ID of the decryption key to use in case the server response contains content keys encrypted. The key is unique per distirutor, and configured ahead of time by the publishing team and the CPIX service owner.
                          drms:
                            type: array
                            description: (Optional) DRM system keys to request. If not defined a GET request will be done, and any key returned will be handled. If defined, random kid(s) (key ids) will be generated on rotation for each DRM system, and a POST request will be done to create them.
                            items:
                              type: string
                              enum:
                                - WIDEVINE
                                - FAIRPLAY
                                - PRIMETIME
                                - PLAYREADY
                                - W3C_COMMON_CLEAR_KEY
                                - BULK_FILE
                            uniqueItems: true
                          headers_id:
                            type: string
                            description: (Optional) An identifier to a list of HTTP headers to be added to the request sent to the CPIX service.
                          uri:
                            type: string
                            description: CPIX service URI
                            format: uri-reference
                            minLength: 1
                        additionalProperties: false
                      key_rotation:
                        type: object
                        description: Configures how keys should be rotated
                        properties:
                          interval_secs:
                            type: number
                            description: Rotate keys based on the specified time interval. If Program is also provided then this time interval will only apply to media segments that are outside of program boundaries. If Program is NOT provided then only this time interval will be used to decided when to rotate keys.
                            format: float
                            minimum: 300
                          program:
                            type: boolean
                            description: Rotate keys on (SCTE35) program boundaries such that no two programs will be protected with the same key.
                          program_overlap_skip_encrypt:
                            type: boolean
                            description: Do not encrypt segments that are part of more than one SCTE-35 program.
                        additionalProperties: false
                      sample_aes:
                        type: object
                        description: Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
                        additionalProperties: false
                      simple:
                        type: object
                        description: Only one of ['simple', 'atlas', 'cpix'] may be set.
                        properties:
                          publish_points:
                            type: array
                            description: Pub points where keys should be published. If multiple are specified, only one needs to succeed to consider the key successfully published.
                            items:
                              type: object
                              properties:
                                basic_auth:
                                  type: object
                                  description: Only one of ['basic_auth'] may be set.
                                  properties:
                                    password:
                                      type: string
                                      description: Plain text password for basic auth.
                                    username:
                                      type: string
                                      description: Username for basic auth.
                                  additionalProperties: false
                                compression:
                                  type: string
                                  description: Configures whether or not (and how) to compress manifests being published to the origin. If not specified, manifests will not be compressed.
                                  enum:
                                    - NONE
                                    - GZIP
                                do_not_monitor:
                                  type: boolean
                                  description: (Optional) Specifies if this pubpoint should not be monitored by PLM.
                                headers:
                                  type: object
                                  description: Allows custom HTTP headers to be set via configuration for all HTTP requests.
                                  additionalProperties:
                                    type: string
                                method:
                                  type: string
                                  description: Method overrides what HTTP method to specify in requests to the Publish Point. If not specified the service will default to POST.
                                playback_base_url:
                                  type: string
                                  description: The base URL where published playlists will be able to be obtained. This is often different than the publish_base_url for CDN publishing workflows.
                                  format: uri-reference
                                playback_query_params:
                                  type: string
                                  description: 'Specifies any query parameters that will be added to playback urls. Should not include the initial ''?'' Example: ''foo=bar&q=golang'''
                                publish_base_url:
                                  type: string
                                  description: The base URL where generated playlists will be sent/published. Each publish point requires a unique 'publish_base_url'.
                                  format: uri-reference
                              additionalProperties: false
                          require_publish:
                            type: string
                            description: Indicates which publish points must succeed for segment publishing to use the keys.
                            enum:
                              - ANY
                              - ALL
                        additionalProperties: false
                    additionalProperties: false
                  mp2t:
                    type: object
                    description: Uses MP2T format for each segments. Only one of ['mp2t', 'mp4'] may be set.
                    properties:
                      force_unmuxed_audio:
                        type: boolean
                        description: Forces the Video and Audio Encodings to be unmuxed when there is one audio encodings. This setting will have to be uniformed across MP2T packagers within a config. When there are two or more audio encodings, unmuxed will be used automatically.
                      insert_id3_utc_time:
                        type: boolean
                        description: If true, insert ID3 tags that include a UTC timestamp. This is a Turner/WM-specific extension.
                    additionalProperties: false
                  mp4:
                    type: object
                    description: Uses MP4 format for each segments. Only one of ['mp2t', 'mp4'] may be set.
                    properties:
                      caption_placement:
                        type: string
                        description: CaptionPlacement defines where caption messages should be placed in the output MP4.
                        enum:
                          - SEI_PAYLOAD
                          - CLCP_TRACK
                      insert_pssh_box:
                        type: boolean
                        description: Insert pssh boxes generated by content protection into packaged segments. Defaults to not insert pssh boxes to the packaged segments.
                    additionalProperties: false
                  ttml:
                    type: object
                    description: Only one of ['web_vtt', 'ttml'] may be set.
                    additionalProperties: false
                  web_vtt:
                    type: object
                    description: Only one of ['web_vtt', 'ttml'] may be set.
                    properties:
                      file_format:
                        type: string
                        description: The file format used to encapsulate the WebVTT segments.
                        enum:
                          - TEXT
                          - MP4
                    additionalProperties: false
                additionalProperties: false
          additionalProperties: false
        publishing:
          type: object
          description: Publishing configures playlist formats and where to send video and playlist data.
          properties:
            closed_caption_streams:
              type: array
              description: Configures how captioning information, which references CEA-608 captions embedded in video segments, is published.
              items:
                type: object
                properties:
                  auto_select:
                    type: string
                    description: Indicates that the client should play the captioning media selection group if the user has not indicated a user preference. If both auto_select and default are not set, the first captioning media selection group will be used.
                    enum:
                      - "NO"
                      - "YES"
                  default:
                    type: string
                    description: Configures the captioning media selection group that will be played if the user has not indicated a user preference. If both auto_select and default are not set, the first captioning media selection group will be used.
                    enum:
                      - "NO"
                      - "YES"
                  language:
                    type: string
                    description: Language code as RFC 5646, e.g. 'en' 'en-US'.
                  name:
                    type: string
                    description: Source stream name.
                additionalProperties: false
            feature_flags:
              type: array
              description: Set of string identifiers corresponding to features that this Channel is opting in.
              items:
                type: string
            live2vod:
              type: object
              description: Live2VOD configuration used to archive the channel data, this allows clip creation after the content is no longer live.
              properties:
                clear_capture:
                  type: boolean
                  description: BETA - (Optional) Indicates whether the system should send the unpackaged segments produced from the transcoder to the L2V system for purposes of creating mp4s and/or repackaging.
                product_id:
                  type: string
                  description: Product ID that VODs will be associated with in the Live2VOD system. The value of this ID is pre-configured in the Live2VOD portal.
                  minLength: 1
                retention_days:
                  type: integer
                  description: Specifies the retention time, in days, for archived content.
                  format: int32
                  minimum: 1
                  maximum: 30
              additionalProperties: false
            publications:
              type: array
              description: A set of individual configurations that each can configure a specific destination and mechanism of delivery for segments and/or playlists.
              items:
                type: object
                properties:
                  audio_encoder_ids:
                    type: array
                    description: Optionally specify which audio encoders should be used for this publication. If none are specified, all audio encoders configured for the transcoder will be used.
                    items:
                      type: string
                    uniqueItems: true
                  create_vods:
                    type: boolean
                    description: Create VODs for all publish points in this publication. Note that Live2VOD must also be configured for the parent |Channel|.
                  dash:
                    type: object
                    description: DASH configures publication settings. Only one of HLS or DASH can be set.
                    properties:
                      minimum_update_period_secs:
                        type: integer
                        description: Sets the minimumUpdatePeriod field in MPD to be this value. If set to 0 (default), segment duration is used. The value shall not exceed the 'suggested_presentation_delay_secs'.
                        format: int32
                      signaling_formats:
                        type: array
                        description: Signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering playlists.
                        items:
                          type: string
                          enum:
                            - SCTE35_SPLICE_INFO_SECTION
                            - SCTE35_BIN
                        uniqueItems: true
                      suggested_presentation_delay_secs:
                        type: integer
                        description: The suggested amount of time (in seconds) the player should be behind the live stream. This value must be greater or equal to 'minimum_update_period_secs'.
                        format: int32
                        minimum: 0
                      url_type:
                        type: string
                        description: If set to 'URL_TYPE_UNDEFINED' playlist generation will use 'RELATIVE'.
                        enum:
                          - RELATIVE
                          - ABSOLUTE
                          - HOST_RELATIVE
                    additionalProperties: false
                  drms:
                    type: array
                    description: Optionally specify which DRMs to advertise in the playlist. If specified, this must be a subset of the DRMs specified by the packager associated with this publication. If omitted or empty, all DRMs specified by the packager will be advertised. This setting can only be used for HLS playlists.
                    items:
                      type: string
                      enum:
                        - WIDEVINE
                        - FAIRPLAY
                        - PRIMETIME
                        - PLAYREADY
                        - W3C_COMMON_CLEAR_KEY
                        - BULK_FILE
                    uniqueItems: true
                  dvr_window_secs:
                    type: integer
                    description: DVR window is the max sum(duration of media segments) that will be kept in a manifest at a given time in seconds. The max supported DVR window is 10 hours.
                    format: int32
                    minimum: 0
                    maximum: 36000
                  fer_audio_encoder_ids:
                    type: array
                    description: Optionally specify which audio encoders should be used when generating the FER of this Presentation, this overrides the 'audio_encoder_ids' used during the live portion. If none are specified, the 'audio_encoder_ids' field will be used.
                    items:
                      type: string
                    uniqueItems: true
                  hls:
                    type: object
                    description: HLS configures publication settings. Only one of HLS or DASH can be set.
                    properties:
                      audio_only_variants:
                        type: string
                        description: 'Defines how audio only variant streams are included in the master playlist, where the variant streams are defined by #EXT-X-STREAM-INF tag, the tag attributes provide information about the Stream. The INCLUDE_DEFAULT option - only the default ''audio only variant stream'' is included in master playlist. This is the most common use case. INCLUDE_NONE - no audio only variant streams are included in the master playlist. INCLUDE_ALL - include all audio only variant streams in the master playlist.'
                        enum:
                          - INCLUDE_DEFAULT
                          - INCLUDE_NONE
                          - INCLUDE_ALL
                      gap_tags:
                        type: string
                        description: 'Allows turning gap tags ON/OFF. When turned ON - the tag ''#EXT-X-GAP'' is inserted into media playlist for a missing segment. When turned OFF - Discontinuity is inserted into the playlist for missing segment(s). The default option UNDEFINED is mapped to OFF. Note: Gap tags are always inserted for the missing thumbnail segments independently of this setting'
                        enum:
                          - "ON"
                          - "OFF"
                      master_publish_frequency_secs:
                        type: integer
                        description: 'How often the multi-variant playlist(s) should be published (in seconds) once a channel is started. If 0 (not provided), defaults to 1 hour. The following can also result in re-publishing of multi-variant playlists: - Configuration changes related to transcoding configuration (i.e. adding, removing, changing encoders). - Service code changes related to manifest generation.'
                        format: int32
                      master_url_type:
                        type: string
                        description: Allows specifying url type for HLS master playlists. If not provided, playlist generation will use 'RELATIVE'.
                        enum:
                          - RELATIVE
                          - ABSOLUTE
                          - HOST_RELATIVE
                      media_url_type:
                        type: string
                        description: Allows specifying url type for HLS media playlists. If not provided, playlist generation will use 'RELATIVE'.
                        enum:
                          - RELATIVE
                          - ABSOLUTE
                          - HOST_RELATIVE
                      partial_presentations:
                        type: array
                        description: Specify which partial presentations should be used for this presentation. Partial presentations are additional master playlists that point to a subset of the parent presentation's media streams/variant playlists.
                        items:
                          type: object
                          properties:
                            audio_encoder_ids:
                              type: array
                              description: Specify which audio encoders should be used for this presentation. If none are specified, all audio encoders configured for the parent Publication will be used.
                              items:
                                type: string
                              uniqueItems: true
                            fer_audio_encoder_ids:
                              type: array
                              description: 'Optionally specify which audio encoders should be used when generating the FER of this Partial Presentation, this overrides the ''audio_encoder_ids'' used during the live portion. If none are specified, the ''audio_encoder_ids'' field will be used. NOTE: This MUST only be used with push based manifest. Ignore this field when using Aventus Origin with Dynamic Manifests. Instead use the AudioSource.License field.'
                              items:
                                type: string
                              uniqueItems: true
                            iframe_only_encoder_ids:
                              type: array
                              description: List of video encoder IDs that should have I-Frame only playlists generated for them. If no 'iframe_only_encoder_ids' are given then no I-Frame playlists will be in the Partial Presentation.
                              items:
                                type: string
                              uniqueItems: true
                            playlist_path:
                              type: string
                              description: Sub-path that will be appended onto the publish and playback base URLs of HTTP PublishPoints for published playlist files.
                              minLength: 1
                            thumbnail_encoder_ids:
                              type: array
                              description: Specify which thumbnail encoders should be used for this presentation. If no 'thumbnail_encoder_ids' are given then no thumbnail playlists will be in the Partial Presentation.
                              items:
                                type: string
                              uniqueItems: true
                            video_encoder_ids:
                              type: array
                              description: Specify which video encoders should be used for this presentation. If none are specified, all video encoders configured for the parent Publication will be used.
                              items:
                                type: string
                              uniqueItems: true
                          additionalProperties: false
                      pdt_on_every_segment:
                        type: boolean
                        description: 'When true a #EXT-X-PROGRAM-DATE-TIME tag will be placed on every media segment in media playlists. When false, the default behavior, the PDT tag is set according to the HLS specification.'
                      signaling_formats:
                        type: array
                        description: Signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering playlists.
                        items:
                          type: string
                          enum:
                            - APPLE_SCTE35
                            - AD_SIMPLE
                            - SCTE35
                        uniqueItems: true
                      utc_in_segment_title:
                        type: boolean
                        description: 'Include a UTC timestamp (that is equivalent in value to #EXT-X-PROGRAM-DATE-TIME) in the title of each media segment in media playlists. Ex. #EXTINF:6.006,LTC=2020-01-01T12:00:00.000Z'
                    additionalProperties: false
                  iframe_only_encoder_ids:
                    type: array
                    description: List of video encoder IDs that should have I-Frame only playlists generated for them.
                    items:
                      type: string
                    uniqueItems: true
                  master_playlist_name:
                    type: string
                    description: Optional master manifest name. When not supplied a default of 'master' will be used.
                  origin:
                    type: object
                    description: Configures defaults used when generating manifests or playlist using the dynamic origin. Cannot be set if this is a playlist-only publication (i.e. contains publish points that specify 'playlist_only_for').
                    properties:
                      fallback_defaults:
                        type: object
                        description: FallbackDefaults specifies the alternative behavior of the dynamic manifest generator. This behavior is intended to be a simplified configuration comparead to the default behavior so that it can be used as a fallback for when players are encountering issues with the default behavior. Specific behaviors can be overwritten using appropriate query string parameters when making the request for the manifest.
                        properties:
                          dash_signaling_formats:
                            type: array
                            description: DASH Signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering DASH manifests.
                            items:
                              type: string
                              enum:
                                - SCTE35_SPLICE_INFO_SECTION
                                - SCTE35_BIN
                            uniqueItems: true
                          duration_seconds:
                            type: integer
                            description: Duration is the length of content that will be included in the manifest, in seconds. The max supported DVR window is 12 hours. If not specified, the default duration will be 30 seconds.
                            format: int32
                            minimum: 0
                            maximum: 43200
                          enable_hls_delta_updates:
                            type: boolean
                            description: When true enables HLS Delta updates for this particular origin.
                          hls_signaling_formats:
                            type: array
                            description: HLS signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering playlists.
                            items:
                              type: string
                              enum:
                                - APPLE_SCTE35
                                - AD_SIMPLE
                                - SCTE35
                            uniqueItems: true
                          media_url_type:
                            type: string
                            description: Allows specifying url type for HLS media playlists and DASH manifests. If not provided, playlist generation will use 'RELATIVE'.
                            enum:
                              - RELATIVE
                              - ABSOLUTE
                              - HOST_RELATIVE
                          minimum_update_period_seconds:
                            type: integer
                            description: Sets the minimumUpdatePeriod field in MPD to be this value. If set to 0 (default), segment duration is used. The value shall not exceed the 'suggested_presentation_delay_secs'.
                            format: int32
                            minimum: 0
                          multi_variant_url_type:
                            type: string
                            description: Allows specifying url type for HLS multi-variant playlists. If not provided, playlist generation will use 'RELATIVE'.
                            enum:
                              - RELATIVE
                              - ABSOLUTE
                              - HOST_RELATIVE
                          pdt_on_every_segment:
                            type: boolean
                            description: 'When true a #EXT-X-PROGRAM-DATE-TIME tag will be placed on every media segment in HLS media playlists. When false, the default behavior, the PDT tag is set according to the HLS specification.'
                          pre_start_duration_seconds:
                            type: integer
                            description: Pre Start Duration is the length of content that will be included in the manifest when the start time of a manifest is in the future. When a manifest is near the start time but does not contain 'pre_start_duration_seconds' content Manifest Origin will keep content before the start time to make the manifest length at least 'pre_start_duration_seconds'. If not specified requesting a manifest in the future will result in a 404.
                            format: int32
                            minimum: 0
                            maximum: 43200
                          suggested_presentation_delay_seconds:
                            type: integer
                            description: Sets the suggestedPresentationDelay field in MPD to be this value. This value must be greater or equal to 'minimum_update_period_secs'. If unset, the default value will be calculated as 3 * segment target duration.
                            format: int32
                            minimum: 0
                        additionalProperties: false
                      manifest_defaults:
                        type: object
                        description: ManifestDefaults specifies the default behavior of the dynamic manifest generator. Specific behaviors can be overwritten using appropriate query string parameters when making the request for the manifest.
                        properties:
                          dash_signaling_formats:
                            type: array
                            description: DASH Signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering DASH manifests.
                            items:
                              type: string
                              enum:
                                - SCTE35_SPLICE_INFO_SECTION
                                - SCTE35_BIN
                            uniqueItems: true
                          duration_seconds:
                            type: integer
                            description: Duration is the length of content that will be included in the manifest, in seconds. The max supported DVR window is 12 hours. If not specified, the default duration will be 30 seconds.
                            format: int32
                            minimum: 0
                            maximum: 43200
                          enable_hls_delta_updates:
                            type: boolean
                            description: When true enables HLS Delta updates for this particular origin.
                          hls_signaling_formats:
                            type: array
                            description: HLS signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering playlists.
                            items:
                              type: string
                              enum:
                                - APPLE_SCTE35
                                - AD_SIMPLE
                                - SCTE35
                            uniqueItems: true
                          media_url_type:
                            type: string
                            description: Allows specifying url type for HLS media playlists and DASH manifests. If not provided, playlist generation will use 'RELATIVE'.
                            enum:
                              - RELATIVE
                              - ABSOLUTE
                              - HOST_RELATIVE
                          minimum_update_period_seconds:
                            type: integer
                            description: Sets the minimumUpdatePeriod field in MPD to be this value. If set to 0 (default), segment duration is used. The value shall not exceed the 'suggested_presentation_delay_secs'.
                            format: int32
                            minimum: 0
                          multi_variant_url_type:
                            type: string
                            description: Allows specifying url type for HLS multi-variant playlists. If not provided, playlist generation will use 'RELATIVE'.
                            enum:
                              - RELATIVE
                              - ABSOLUTE
                              - HOST_RELATIVE
                          pdt_on_every_segment:
                            type: boolean
                            description: 'When true a #EXT-X-PROGRAM-DATE-TIME tag will be placed on every media segment in HLS media playlists. When false, the default behavior, the PDT tag is set according to the HLS specification.'
                          pre_start_duration_seconds:
                            type: integer
                            description: Pre Start Duration is the length of content that will be included in the manifest when the start time of a manifest is in the future. When a manifest is near the start time but does not contain 'pre_start_duration_seconds' content Manifest Origin will keep content before the start time to make the manifest length at least 'pre_start_duration_seconds'. If not specified requesting a manifest in the future will result in a 404.
                            format: int32
                            minimum: 0
                            maximum: 43200
                          suggested_presentation_delay_seconds:
                            type: integer
                            description: Sets the suggestedPresentationDelay field in MPD to be this value. This value must be greater or equal to 'minimum_update_period_secs'. If unset, the default value will be calculated as 3 * segment target duration.
                            format: int32
                            minimum: 0
                        additionalProperties: false
                      retention_minutes:
                        type: integer
                        description: RetentionMinutes specifies how long data is retained, in minutes. Live linear (24/7) channels should set this to the longest expected DVR window (a few hours). Live event channels should set this to how Live2VOD playlists are expected to be available. If unspecified, the default will be 60 minutes. The maximum value is 15 days (21600 minutes).
                        format: int32
                        minimum: 0
                        maximum: 21600
                      segments:
                        type: object
                        description: 'Segments is a message that will include different options to change the processes for segments. Ex: Allows changing the default behavior of the # of regions segments publishes to with the redunancy field.'
                        properties:
                          redundancy:
                            type: string
                            enum:
                              - SingleRegion
                              - DualRegion
                        additionalProperties: false
                    additionalProperties: false
                  packager_id:
                    type: string
                    description: Determines how segments in this publication are packaged. Must reference a packager in 'packaging.packagers'. However, if this is a playlist-only publication (i.e. contains publish points that specify 'playlist_only_for'), this must remain unset as the packager will be inferred from the publication this one is providing playlists for.
                  publish_points:
                    type: array
                    description: Publish points specify where to output.
                    items:
                      type: object
                      properties:
                        http:
                          type: object
                          description: HTTP destination where media segments and playlists will be published.
                          properties:
                            basic_auth:
                              type: object
                              description: Only one of ['basic_auth'] may be set.
                              properties:
                                password:
                                  type: string
                                  description: Plain text password for basic auth.
                                username:
                                  type: string
                                  description: Username for basic auth.
                              additionalProperties: false
                            compression:
                              type: string
                              description: Configures whether or not (and how) to compress manifests being published to the origin. If not specified, manifests will not be compressed.
                              enum:
                                - NONE
                                - GZIP
                            do_not_monitor:
                              type: boolean
                              description: (Optional) Specifies if this pubpoint should not be monitored by PLM.
                            headers:
                              type: object
                              description: Allows custom HTTP headers to be set via configuration for all HTTP requests.
                              additionalProperties:
                                type: string
                            method:
                              type: string
                              description: Method overrides what HTTP method to specify in requests to the Publish Point. If not specified the service will default to POST.
                            playback_base_url:
                              type: string
                              description: The base URL where published playlists will be able to be obtained. This is often different than the publish_base_url for CDN publishing workflows.
                              format: uri-reference
                            playback_query_params:
                              type: string
                              description: 'Specifies any query parameters that will be added to playback urls. Should not include the initial ''?'' Example: ''foo=bar&q=golang'''
                            publish_base_url:
                              type: string
                              description: The base URL where generated playlists will be sent/published. Each publish point requires a unique 'publish_base_url'.
                              format: uri-reference
                          additionalProperties: false
                        id:
                          type: string
                          description: uniquely identifies this publish_point within a channel configuration. Can be referenced by other publish_points in the 'playlist_only_for' field.
                        playlist_only_for:
                          type: string
                          description: playlist_only_for identifies the id of the publish_point that has the segments for this publish_point, which is only publishing a playlist for those segments. All publish_points within a publication must either have 'playlist_only_for' all set or all not set.
                      additionalProperties: false
                  redundant_publishing:
                    type: boolean
                    description: When redundant publishing is enabled succeeding to publish a given media segment to at least one HTTPPublishPoint in publish_points will result in that segment showing up in manifests as playable content. Will require at least two publish_points defined within the same publication.
                  startover:
                    type: object
                    description: Configures startover processing for this Publication.
                    properties:
                      first_program_start:
                        type: object
                        description: Trigger Startover on the first Program Start. Only one of ['first_program_start', 'on_airing_id'] may be set.
                        additionalProperties: false
                      on_airing_id:
                        type: object
                        description: Use the Airing Id of a Program Start to trigger a Startover on the first match. Only one of ['first_program_start', 'on_airing_id'] may be set.
                        properties:
                          airing_id:
                            type: string
                            description: Airing Id is a SCTE-35 Segmentation Unique Program ID (UPID) of type 0x08 used to specify the unique airing of a program. Is a 8 byte hex encoded string that is prepended with '0x'.
                            pattern: ^0x[0-9a-fA-F]{16}$
                        additionalProperties: false
                    additionalProperties: false
                  thumbnail_encoder_ids:
                    type: array
                    description: 'Optional: Specify what thumbnail_encoders should be in this Publication'
                    items:
                      type: string
                    uniqueItems: true
                  use_strict_bitrate:
                    type: boolean
                    description: Optional, indicates whether we should pad the bitrate (false) or use what is explicitly provided (true)
                  video_encoder_ids:
                    type: array
                    description: Optionally specify which video encoders should be used for this publication. If none are specified, all video encoders configured for the transcoder will be used.
                    items:
                      type: string
                    uniqueItems: true
                additionalProperties: false
            rtmp_publications:
              type: array
              description: A set of configurations for delivering RTMP streams
              items:
                type: object
                properties:
                  audio_encoder_id:
                    type: string
                    description: Only AAC encoders are supported
                    minLength: 1
                  id:
                    type: string
                    description: RTMP publication ID. Must be unique.
                    minLength: 1
                    pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
                  url:
                    type: string
                    format: uri
                    minLength: 1
                    pattern: ^rtmps?://
                  video_encoder_id:
                    type: string
                    description: Only h264 encoders are supported
                    minLength: 1
                additionalProperties: false
            srt_publications:
              type: array
              description: A set of configurations for delivering SRT streams
              items:
                type: object
                properties:
                  audio_encoders:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          minLength: 1
                        pid:
                          type: integer
                          description: Output MPEG-TS PID. PIDs should be set on the PMT, SCTE-35 and all encoders or none. Valid PIDs must 13-bit values greater than 31. If no PIDs are provided (pid == 0) then they will be generated automatically.
                          format: int32
                          maximum: 8191
                          exclusiveMaximum: true
                      additionalProperties: false
                    minItems: 1
                  id:
                    type: string
                    description: SRT publication ID. Must be unique.
                    minLength: 1
                    pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
                  pmt_pid:
                    type: integer
                    description: MPEG-TS PMT PID. PIDs should be set on the PMT, SCTE-35 and all encoders or none. Valid PIDs must 13-bit values greater than 31. If no PIDs are provided (pid == 0) then they will be generated automatically.
                    format: int32
                    maximum: 8191
                    exclusiveMaximum: true
                  scte35_pid:
                    type: integer
                    description: MPEG-TS SCTE-35 PID. PIDs should be set on the PMT, SCTE-35, and all encoders or none. Valid PIDs must 13-bit values greater than 31. If no PIDs are provided (pid == 0) then they will be generated automatically.
                    format: int32
                    maximum: 8191
                    exclusiveMaximum: true
                  url:
                    type: string
                    format: uri
                    minLength: 1
                    pattern: ^srt://
                  video_encoders:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          minLength: 1
                        pid:
                          type: integer
                          description: Output MPEG-TS PID. PIDs should be set on the PMT, SCTE-35 and all encoders or none. Valid PIDs must 13-bit values greater than 31. If no PIDs are provided (pid == 0) then they will be generated automatically.
                          format: int32
                          maximum: 8191
                          exclusiveMaximum: true
                      additionalProperties: false
                    minItems: 1
                additionalProperties: false
          additionalProperties: false
        region:
          type: string
          description: Region represents the general geolocation for transcoding and stream egress from iStreamPlanet. If no region is provided at channel creation time, then 'US_WEST' is used.
          enum:
            - US_WEST
            - US_EAST
        resource_class:
          type: string
          description: If the ResourceClass is unspecified the channel will default to run in the 'DYNAMIC' ResourceClass. Note that changing the ResourceClass for a running channel is supported and will be performed with no downtime.
          enum:
            - DYNAMIC
            - STATIC
        self:
          type: string
          description: Self link for the channel.
          format: uri-reference
          readOnly: true
        signaling:
          type: object
          description: Signaling configures in-band signaling (i.e. SCTE-35).
          properties:
            blackout_settings:
              type: object
              description: 'Configure blackout: replacing content with custom slates based on program signaling.'
              properties:
                default_blackout_slate_url:
                  type: string
                  description: Default slate URL to use for blackouts. Can be overridden by the 'slates' field.
                  format: uri-reference
                  example: https://example.com/blackout.ts
                force_blackout_segments:
                  type: array
                  description: List of signaling segment types to force blackout, e.g. add 'SPLICE_INSERT' to blackout all ads signaled via SCTE-35 splice_insert.
                  items:
                    type: string
                    enum:
                      - SPLICE_INSERT
                      - CONTENT_ID
                      - PROGRAM
                      - PROGRAM_BLACKOUT_OVERRIDE
                      - PROGRAM_BREAKAWAY
                      - CHAPTER
                      - BREAK
                      - OPENING_CREDIT
                      - CLOSING_CREDIT
                      - PROVIDER_PLACEMENT_OP
                      - DISTRIBUTOR_PLACEMENT_OP
                      - PROVIDER_OVERLAY_OP
                      - DISTRIBUTOR_OVERLAY_OP
                      - PROVIDER_AD
                      - DISTRIBUTOR_AD
                      - UNSCHEDULED_EVENT
                      - NETWORK
                      - SLATE
                      - NOT_INDICATED
                      - TIMED_METADATA
                honor_web_delivery_restriction:
                  type: boolean
                  description: Determines whether to honor the web_delivery_allowed attribute in SCTE-35 segmentation descriptors. When this is enabled, a segmentation descriptor with web_delivery_allowed=false will trigger a blackout.
                slates:
                  type: array
                  description: Per-segment type slate overrides.
                  items:
                    type: object
                    properties:
                      blackout_slate_url:
                        type: string
                        description: Blackout slate URL to use for the specified segments. It must have one audio and one video stream. Either MPEG2 or H.264 can be used.
                        format: uri-reference
                        example: https://example.com/blackout.ts
                      segments:
                        type: array
                        description: Segment types that shall utilize the blackout slate URL. Any segment type defined here _must_ also be present in the parent signaling configuration.
                        items:
                          type: string
                          enum:
                            - SPLICE_INSERT
                            - CONTENT_ID
                            - PROGRAM
                            - PROGRAM_BLACKOUT_OVERRIDE
                            - PROGRAM_BREAKAWAY
                            - CHAPTER
                            - BREAK
                            - OPENING_CREDIT
                            - CLOSING_CREDIT
                            - PROVIDER_PLACEMENT_OP
                            - DISTRIBUTOR_PLACEMENT_OP
                            - PROVIDER_OVERLAY_OP
                            - DISTRIBUTOR_OVERLAY_OP
                            - PROVIDER_AD
                            - DISTRIBUTOR_AD
                            - UNSCHEDULED_EVENT
                            - NETWORK
                            - SLATE
                            - NOT_INDICATED
                            - TIMED_METADATA
                      upids:
                        type: array
                        description: Exclusive list of hex string encoded colon separated UPID Type:ID pairs (e.g. '0A:1A2B3C4D') to enable this blackout slate on.
                        items:
                          type: string
                    additionalProperties: false
              additionalProperties: false
            disable_inband_parsing:
              type: boolean
              description: Disable parsing SCTE-35 in-band signaling. Out-of-band signaling is still allowed.
            scte_pid:
              type: integer
              description: Defines the specific PID containing the SCTE that the transcoder should process. Using '0' (default value) will pick the first PID containing SCTE-35 in the PMT.
              format: int32
              minimum: 0
            segment_settings:
              type: array
              description: Settings that apply to specific segments.
              items:
                type: object
                properties:
                  default_duration_secs:
                    type: integer
                    description: Specifies the duration of a segment when the in-band SCTE-35 that initiates it (e.g. Distributor Placement Opportunity Start) is missing an explicit duration. N.B. for program and ad types, this also affects 'Simple Program' and 'Simple Ad' markers, respectively.
                    format: int32
                    minimum: 0
                    maximum: 172800
                  emit_default_duration:
                    type: boolean
                    description: Determines whether to include the default duration in the output SCTE-35 messages when the input SCTE-35 message did not specify a duration.
                  offset_millis:
                    type: integer
                    description: Specifies a 'correction' to the splice_time of in-band SCTE-35 in milliseconds.
                    format: int32
                    minimum: -4000
                    maximum: 4000
                  segment_end_mode:
                    type: string
                    description: Determines which Segment End signaling mode to use for the provided segments. If unspecified, defaults to MATCH_END_EVENT_ID.
                    enum:
                      - MATCH_END_EVENT_ID
                      - IGNORE_END_EVENT_ID
                      - IGNORE_END_SIGNAL
                  segments:
                    type: array
                    description: Specifies the list of which segment types this setting applies to. Any segment type defined here _must_ also be present in the parent signaling configuration.
                    items:
                      type: string
                      enum:
                        - SPLICE_INSERT
                        - CONTENT_ID
                        - PROGRAM
                        - PROGRAM_BLACKOUT_OVERRIDE
                        - PROGRAM_BREAKAWAY
                        - CHAPTER
                        - BREAK
                        - OPENING_CREDIT
                        - CLOSING_CREDIT
                        - PROVIDER_PLACEMENT_OP
                        - DISTRIBUTOR_PLACEMENT_OP
                        - PROVIDER_OVERLAY_OP
                        - DISTRIBUTOR_OVERLAY_OP
                        - PROVIDER_AD
                        - DISTRIBUTOR_AD
                        - UNSCHEDULED_EVENT
                        - NETWORK
                        - SLATE
                        - NOT_INDICATED
                        - TIMED_METADATA
                    uniqueItems: true
                  tier_filter:
                    type: object
                    description: Specifies how to filter the provided segments, when received through in-band SCTE-35, based on the SCTE-35 SpliceInfoSection Tier.
                    properties:
                      explicit_tier:
                        type: object
                        description: Only one of ['explicit_tier'] may be set.
                        properties:
                          values:
                            type: array
                            items:
                              type: integer
                              format: int32
                        additionalProperties: false
                    additionalProperties: false
                additionalProperties: false
            segments:
              type: array
              description: Segment types to process for in-band signaling.
              items:
                type: string
                enum:
                  - SPLICE_INSERT
                  - CONTENT_ID
                  - PROGRAM
                  - PROGRAM_BLACKOUT_OVERRIDE
                  - PROGRAM_BREAKAWAY
                  - CHAPTER
                  - BREAK
                  - OPENING_CREDIT
                  - CLOSING_CREDIT
                  - PROVIDER_PLACEMENT_OP
                  - DISTRIBUTOR_PLACEMENT_OP
                  - PROVIDER_OVERLAY_OP
                  - DISTRIBUTOR_OVERLAY_OP
                  - PROVIDER_AD
                  - DISTRIBUTOR_AD
                  - UNSCHEDULED_EVENT
                  - NETWORK
                  - SLATE
                  - NOT_INDICATED
                  - TIMED_METADATA
              uniqueItems: true
          additionalProperties: false
        tags:
          type: object
          description: Use ChannelMetadata when possible instead of tags.
          properties:
            custom:
              type: object
              description: Custom tags to be added to metrics and logs for this channel. In Datadog, the tags will be prefixed with 'dy_' to avoid collisions with system tags.
              additionalProperties:
                type: string
            monitored:
              type: boolean
              description: Indicates whether this channel is monitored by automation.
          additionalProperties: false
        transcode:
          type: object
          description: Transcode configures audio/video conversion settings.
          properties:
            audio_encoders:
              type: array
              description: Audio encoders specify audio conversion settings, e.g. channels, samples, codec, bitrate, etc.
              items:
                type: object
                properties:
                  audio_source_id:
                    type: string
                    description: Audio source ID specifies which stream within the audio source to use.
                    minLength: 1
                  bit_rate:
                    type: integer
                    description: Bit rate specifies the constant number of bits used per second. Higher values result in better audio quality but bigger file sizes.
                    format: int32
                    example: 128000
                    minimum: 1000
                    exclusiveMinimum: true
                  channels:
                    type: integer
                    description: 'Channels specifies the number of real audio channels to encode. The available options depend on the audio codec. The encoder supports different channel configurations based on the codec; AAC 1-2 channels, AC3 supports 2 or 6, and EAC3 supports 2 or 6. For example, for AC3 5.1 one would set 6 channels. Channel configurations are as follows: 1 - Mono (C) 2 - Stereo / Dolby 2.0 (L, R) 6 - Dolby 5.1 (L, C, R, l, r, LFE) Dolby Atmos layouts such as 5.1.4 are achieved by setting this field to 6 and configuring ddp_joc_logical_channels in EAC3Settings as desired.'
                    format: int32
                    example: 2
                    minimum: 0
                    exclusiveMinimum: true
                    maximum: 6
                  codec:
                    type: string
                    description: Codec specifies the audio data encoding format.
                    enum:
                      - AAC_LC
                      - AC3
                      - EAC3
                      - HE_AAC
                  eac3:
                    type: object
                    description: Only one of ['eac3'] may be set.
                    properties:
                      ddp_joc_logical_channels:
                        type: integer
                        description: 'If non-zero, configures the encoder to compute JOC metadata (i.e. Dolby Atmos) for the given logical speaker layout. The transcoder does not guarantee any particular bed layout in the JOC metadata, and this setting currently has no effect on that. It merely determines the channel layout to which all inputs are converted before encoding. Legal values are: 8 - 5.1.2 10 - 5.1.4 For sources with raw PCM input and more than 6 channels, configure this according to the expected input channel layout. For channels which expect to take a 7.1 EAC-3 input, configure to 8. For all other cases, including upmixing from 5.1 or fewer channels or any kind of Atmos input, configure to 10. This setting is mutually exclusive with ddp_joc_passthrough.'
                        format: int32
                        example: 10
                      ddp_joc_passthrough:
                        type: boolean
                        description: Indicates that the source will contain Joint Object Coding metadata (Dolby Atmos) and that the encoder should operate in passthrough mode. https://learning.dolby.com/hc/en-us/articles/4406039180564-Appendix-C-Dolby-Atmos-Delivery-Codecs- When the audio encoder is configured with this setting, the source audio will be repackaged without being decoded and re-encoded. If the source is not DD+JOC, it will be replaced with silence.
                      drc_line_mode:
                        type: string
                        description: If specified, overrides the dynamic range control line mode. If unspecified and the source audio is AC-3 or EAC-3, the DRC line mode matches the input. If unspecified and the source audio is any other codec, the encoder uses an unspecified default which may change without notice.
                        enum:
                          - DRC_FILM_STANDARD
                          - DRC_FILM_LIGHT
                          - DRC_MUSIC_STANDARD
                          - DRC_MUSIC_LIGHT
                          - DRC_SPEECH
                        example: DRC_FILM_STANDARD
                      drc_rf_mode:
                        type: string
                        description: If specified, overrides the dynamic range control RF mode. If unspecified and the source audio is AC-3 or EAC-3, the DRC RF mode matches the input. If unspecified and the source audio is any other codec, the encoder uses an unspecified default which may change without notice.
                        enum:
                          - DRC_FILM_STANDARD
                          - DRC_FILM_LIGHT
                          - DRC_MUSIC_STANDARD
                          - DRC_MUSIC_LIGHT
                          - DRC_SPEECH
                        example: DRC_FILM_STANDARD
                      surround_phase_shift:
                        type: string
                        description: If specified, overrides whether surround phase shift is enabled. If unspecified and the source audio is AC-3 or EAC-3, the surround phase shift mode matches the input. If unspecified and the source audio is any other codec, the encoder uses an unspecified default which may change without notice.
                        enum:
                          - SURROUND_PHASE_SHIFT_ENABLED
                          - SURROUND_PHASE_SHIFT_DISABLED
                        example: SURROUND_PHASE_SHIFT_ENABLED
                    additionalProperties: false
                  id:
                    type: string
                    description: Encoder ID. IDs must be unique for all encoders. This ID is referenced when setting up playlist publishing.
                    example: aac128
                    minLength: 1
                  loudness:
                    type: object
                    description: Loudness normalization settings. Loudness configuration is required for non-passthrough AC-3 and EAC-3.
                    properties:
                      dialog_intel:
                        type: boolean
                        description: Enable Dialog Intelligence. Only supported for (E)AC-3 encoders. This may only be set if lkfs is explicitly configured to -24.
                      lkfs:
                        type: integer
                        description: Loudness normalization LKFS setting. Default value is -24.
                        format: int32
                      peak_limit:
                        type: number
                        description: Peak Limit. The only allowable value is -2.0. This field is soft-deprecated and will be unsupported in a future transcoder version. In the current transcoder version, the values 0.0 and -2.0 both produce the same configuration.
                        format: float
                    additionalProperties: false
                  sample_rate:
                    type: integer
                    description: 'Sample rate specifies the number of audio samples in hertz. The available options depend on the audio codec: AAC-LC supports 8000, 11025, 12000, 16000, 22050, 24000, 32000, 44100, 48000, 64000, 88200, and 96000. HE-AAC supports 16000, 22050, 24000, 32000, 44100, and 48000. AC3/EAC3 support only 48000.'
                    format: int32
                    example: 48000
                    minimum: 0
                    exclusiveMinimum: true
                  tag:
                    type: string
                    description: Used by the player to map audio tracks to a quadrant, which represents a single view in a multiview layout. This value is opaque and not used by Aventus.
                additionalProperties: false
              minItems: 1
            debug_overlay:
              type: boolean
              description: 'Deprecated: Do not use. Debug_overlay overlays debugging information from the transcoder into the top right of the video output. The overlay is burned into the video and will be visible to end-users if enabled. Do not enable on customer facing channels. Requires a transcoder restart if the state is changed. The default value is false, which disables the overlay. This setting is deprecated in favour of debug_overlays.'
              deprecated: true
            debug_overlays:
              type: object
              description: The debug_overlays specifies the position of the debugging overlay information from the transcoder into each video output. The overlay is burned into the video and will be visible to end-users if enabled. The default position value is OFF, which results in no debug overlay. Do not enable on customer facing channels. Requires a transcoder restart if the state is changed.
              properties:
                position:
                  type: string
                  description: Position of the debug overlay within the output frame.
                  enum:
                    - "OFF"
                    - TOP_LEFT
                    - TOP_RIGHT
                    - BOTTOM_LEFT
                    - BOTTOM_RIGHT
              additionalProperties: false
            dynamic_resources:
              type: object
              description: Configures external dynamic resources which will be downloaded by the transcoder and made available for use in the dynamic state API. Each key in the map is used to identify the resource from any location wishing to reference it (e.g. the dynamic state API).
              additionalProperties:
                type: object
                properties:
                  type:
                    type: string
                    description: Identifies the intended use of this resource.
                    enum:
                      - GRAPHIC
                      - FONT
                    example: GRAPHIC
                  url:
                    type: string
                    description: The URL from which the resource will be downloaded.
                    format: uri-reference
                    example: https://static-wbd-cdn.wbd.com/default_images/wbd-logo-card-1200x675_0.jpg
                additionalProperties: false
            feature_flags:
              type: array
              description: Feature flag strings enable experimental transcode features or functionality that are not yet or never will be promoted to the channeldoc model proper. Do not enable on customer facing channels.
              items:
                type: string
            id3_mode:
              type: string
              description: Specify how to process ID3 tags from the input source. If not specified, ID3 tags in the source will be ignored.
              enum:
                - PASSTHROUGH
            overlays:
              type: array
              description: List of overlays. An overlay is an image that will be rendered on top of the source video. Only one overlay is supported at the moment. If specified, the overlay will be always rendered unless a video slate is on.
              items:
                type: object
                properties:
                  image_url:
                    type: string
                    description: The URL of the image overlay. Only PNG is supported at the moment. The image's dimensions should match those of source for perfect pixel placement.
                    minLength: 1
                additionalProperties: false
              maxItems: 1
            resize_mode:
              type: string
              description: 'Deprecated: Do not use. Deprecated: This field was never implemented. See resize_mode on VideoEncoder instead.'
              enum:
                - STRETCH
                - LETTERBOX
                - CENTER_CROP
              deprecated: true
            segmenter:
              type: object
              description: Segmenter configures how video GOPs and segments get generated.
              properties:
                gop_duration_secs:
                  type: number
                  description: GOP (group of pictures) duration specifies the amount of time between I-frames. Shorter durations can lower quality slightly as each I-frame uses more bits than P- & B-frames but can provide a better seeking experience when enabling thumbnail encoders and/or I-Frame Only playlists.
                  format: double
                  example: 2
                  minimum: 0
                  exclusiveMinimum: true
                segment_duration_secs:
                  type: number
                  description: Segment duration specifies the target duration of a single segment. Segments shorter than this duration can occur at signaling boundaries. This value _must_ be a multiple of the GOP duration value.
                  format: double
                  example: 6
                  minimum: 0
                  exclusiveMinimum: true
                temi:
                  type: boolean
                  description: Include TEMI (Timeline and External Media Information ISO/IEC 13818-1:2019 Annex U) to mpeg-ts segments.
              additionalProperties: false
            subtitle_encoders:
              type: array
              description: Subtitle encoders specify how text-based subtitles are extracted into separate segments. They are not used to describe CEA 608 captions, which remain part of the video codec.
              items:
                type: object
                properties:
                  atsc_captions:
                    type: object
                    description: Extract subtitles from the ATSC caption encodings. The captions themselves are first sourced according to the Source.captions_source field. Only one of ['teletext', 'atsc_captions'] may be set.
                    properties:
                      cea608:
                        type: integer
                        description: 'If non-zero, decode captions from the CEA-608 logical channel number identified by this number. If zero, only CTA-708 captions will be decoded. The ''logical channel number'' refers to the CCx name commonly used in literature: - CC1 is the NTSC odd field subchannel 1, considered the primary caption stream. - CC2 is the NTSC odd field subchannel 2, considered the tertiary caption stream. - CC3 is the NTSC even field subchannel 1, considered the secondary caption stream. - CC4 is the NTSC even field subchannel 2, considered the quaternary caption stream.'
                        format: int32
                        example: 1
                        minimum: 0
                        maximum: 4
                      cta708:
                        type: integer
                        description: 'If non-zero, decode captions from the CTA-708 service identified by this number. If zero, only CEA-608 captions will be decoded. It is allowed to set both ''cta708'' and ''cea608''. In this case, the transcoder will decode both streams, and will use the CTA-708 data if the stream is active and fall back to CEA-608 otherwise. Fallback from CTA-708 to CEA-608 requires a timeout to elapse, but switching from CEA-608 to CTA-708 occurs the instant the CTA-708 stream becomes active. CTA-708 recommends the following correspondence between the two encodings: - CTA-708 service 1 == CEA-608 CC1 (primary captions) - CTA-708 service 2 == CEA-608 CC3 (secondary captions) - CTA-708 service 3 == CEA-608 CC2 (tertiary captions) - CTA-708 service 4 == CEA-608 CC4 (quaternary captions) However, some sources use an alternate convention where CTA-708 service 3 is the secondary caption service (corresponding to CC3) and CTA-708 service 2 is the tertiary caption service.'
                        format: int32
                        example: 1
                        minimum: 0
                        maximum: 63
                    additionalProperties: false
                  id:
                    type: string
                    description: Encoder ID. IDs must be unique for all encoders. This ID is referenced when setting up playlist publishing.
                    minLength: 1
                  language:
                    type: string
                    description: Language is the code for the language in which the subtitles are written.
                    example: en
                    minLength: 2
                  tag:
                    type: string
                    description: Used by the player to map text tracks to a quadrant, which represents a single view in a multiview layout. This value is opaque and not used by Aventus.
                  teletext:
                    type: object
                    description: Extract subtitles from an embedded Teletext stream. The teletext PID is determined automatically. Only one of ['teletext', 'atsc_captions'] may be set.
                    properties:
                      charset_set:
                        type: string
                        description: 'If set, forces interpretation of the National Option field to choose from character sets in this specific set of character sets. Determining the correct value for this configuration is non-trivial, but there are some guidelines. Usually, all languages in one Teletext stream will use the same charset set. If only one set can handle all the languages, it''s probably that one. Some of the sets roughly correspond to geopolitical divisions from the Cold War era: SET3 is roughly Yugoslavia plus Romania; SET4 is the rest of the former USSR/Warsaw Pact, including East Germany but excluding Poland; SET8 is Africa; SET10 is the Middle East. There does not seem to be any standard name for this configuration. The standard calls it ''the upper four bits of Triplet 1'', which is highly ambiguous and nonsensical outside of the context of that usage. The decoder ffmpeg uses calls it ''region'', but most of the sets cannot cleanly be described as any particular geographic region.'
                        enum:
                          - SET0
                          - SET1
                          - SET2
                          - SET3
                          - SET4
                          - SET6
                          - SET8
                          - SET10
                      language:
                        type: string
                        description: The three-letter language code declared in the Teletext descriptor in the source PMT. If the language is not found, the subtitles will be empty. language + type configuration is mutually exclusive with magazine + page configuration.
                        example: swe
                      magazine:
                        type: integer
                        description: The teletext magazine number where the subtitles are found. magazine + page configuration is mutually exclusive with language + type configuration.
                        format: int32
                        example: 1
                        minimum: 0
                      page:
                        type: integer
                        description: The teletext page number where the subtitles are found. magazine + page configuration is mutually exclusive with language + type configuration.
                        format: int32
                        example: 170
                        minimum: 0
                      page_type:
                        type: string
                        description: 'The Teletext page type declared in the Teletext descriptor in the source PMT. If this field is unset, it will be inferred from the ''usage'' field on the SubtitleEncoder using this table: SubtitleEncoder.CLOSED_CAPTIONS => TeletextSource.PAGE_TYPE_SUBTITLE_HEARING_IMPAIRED SubtitleEncoder.SUBTITLES => TeletextSource.PAGE_TYPE_SUBTITLE'
                        enum:
                          - PAGE_TYPE_INITIAL
                          - PAGE_TYPE_SUBTITLE
                          - PAGE_TYPE_ADDITIONAL_INFORMATION
                          - PAGE_TYPE_PROGRAMME_SCHEDULE
                          - PAGE_TYPE_SUBTITLE_HEARING_IMPAIRED
                    additionalProperties: false
                  usage:
                    type: string
                    description: Usage indicates how this encoder should be flagged in generated manifests.
                    enum:
                      - CLOSED_CAPTIONS
                      - SUBTITLES
                additionalProperties: false
            thumbnail_encoders:
              type: array
              description: Thumbnail encoders specify how to create image snapshots of the video stream.
              items:
                type: object
                properties:
                  height:
                    type: integer
                    description: Height specifies the thumbnail image height in pixels.
                    format: int32
                    example: 180
                    minimum: 0
                    exclusiveMinimum: true
                  id:
                    type: string
                    description: Encoder ID. IDs must be unique for all encoders. This ID is referenced when setting up playlist publishing.
                    minLength: 1
                  width:
                    type: integer
                    description: Width specifies the thumbnail image width in pixels.
                    format: int32
                    example: 320
                    minimum: 0
                    exclusiveMinimum: true
                additionalProperties: false
            video_encoders:
              type: array
              description: Video encoders specify video conversion settings, e.g. dimensions, codec, bitrate, etc.
              items:
                type: object
                properties:
                  bit_rate:
                    type: integer
                    description: Bit rate specifies the number in bits used per second. Higher values result in better video quality but bigger file sizes. For H.264 this value is the target of the constrained variable bit rate.
                    format: int32
                    example: 6000000
                    minimum: 1000
                    exclusiveMinimum: true
                  frame_rate:
                    type: string
                    description: Frame rate specifies the number of images that are shown per second when playing back the video. For the best quality playback, this should match or be a multiple of the input source video stream.
                    enum:
                      - FR_23_98
                      - FR_24
                      - FR_25
                      - FR_29_97
                      - FR_30
                      - FR_50
                      - FR_59_94
                      - FR_60
                    example: FR_60
                  h264:
                    type: object
                    description: Configure the encoder to use the H.264 codec. Only one of ['H264Settings', 'H265Settings'] may be set.
                    properties:
                      profile:
                        type: string
                        description: H.264 video profile, which defines various encoder features and settings. See https://en.wikipedia.org/wiki/Advanced_Video_Coding#Profiles for details.
                        enum:
                          - BASELINE
                          - MAIN
                          - HIGH
                          - HIGH_10
                          - HIGH_422
                    additionalProperties: false
                  h265:
                    type: object
                    description: Configure the encoder to use the H.265 codec. Only one of ['H264Settings', 'H265Settings'] may be set.
                    properties:
                      hdr:
                        type: object
                        description: Configure the HDR settings.
                        properties:
                          dolby_vision:
                            type: object
                            description: Only one of ['hdr10', 'dolby_vision'] may be set.
                            properties:
                              profile5:
                                type: object
                                description: Only one of ['profile5', 'profile81', 'profile84'] may be set.
                                additionalProperties: false
                              profile81:
                                type: object
                                description: Only one of ['profile5', 'profile81', 'profile84'] may be set.
                                properties:
                                  clli:
                                    type: object
                                    properties:
                                      max_cll:
                                        type: number
                                        description: Maximum Content Light Level (nits).
                                        format: double
                                        minimum: 0
                                        maximum: 10000
                                      max_fall:
                                        type: number
                                        description: Maximum Frame-Average Light Level (nits).
                                        format: double
                                        minimum: 0
                                        maximum: 10000
                                    additionalProperties: false
                                  level8:
                                    type: array
                                    description: Configures custom Level 8 metadata. Each target may be configured at most once. Unconfigured targets use the Dolby LDP SIDK defaults.
                                    items:
                                      type: object
                                      properties:
                                        clip_trim:
                                          type: number
                                          description: Control the clipping of whites. A positive value will clip highlights and bright whites less, while a negative value will clip more.
                                          format: double
                                          minimum: -1
                                          maximum: 1
                                        ms_weight_plus_one:
                                          type: number
                                          description: Amount of multiscale detail to apply. This is offset from the values used in Dolby documentation so that the Protobuf default of 0.0 corresponds to the Dolby default of -1.0. Values > 1.0 will retain more details when Dolby Vision is mapping down to a lower luminance. Values < 1.0 will lower detail contrast when Dolby Vision is mapping down to a lower luminance. The special value of 0.0 will disable multiscale detail.
                                          format: double
                                          minimum: 0
                                          maximum: 2
                                        target:
                                          type: string
                                          description: Identifies which Level 8 trim target is being configured.
                                          enum:
                                            - REC709_100NITS
                                            - BT2020_600NITS
                                            - BT2020_1000NITS
                                            - CUSTOM
                                        target_mid_contrast:
                                          type: number
                                          description: Controls the contrast of midtones. A positive value will increase the midtone contrast, while a negative value will decrease the midtone contrast.
                                          format: double
                                          minimum: -1
                                          maximum: 1
                                        trim_chroma_weight:
                                          type: number
                                          description: ChromaWeight to apply. Additional mapping for saturated colors. Higher value implies stronger effect.
                                          format: double
                                          minimum: -1
                                          maximum: 1
                                        trim_gain:
                                          type: number
                                          description: Gain to apply. This is a scaling factor for code values in a color component.
                                          format: double
                                          minimum: -1
                                          maximum: 1
                                        trim_gamma:
                                          type: number
                                          description: Gamma to apply. This is a power function in normalized code value in a color component.
                                          format: double
                                          minimum: -1
                                          maximum: 1
                                        trim_lift:
                                          type: number
                                          description: Lift to apply. This is an offset of code values in a color component.
                                          format: double
                                          minimum: -1
                                          maximum: 1
                                        trim_saturation_gain:
                                          type: number
                                          description: Saturation gain to apply. Gain on P and T components. Higher value implies stronger effect.
                                          format: double
                                          minimum: -1
                                          maximum: 1
                                      additionalProperties: false
                                  mdcv:
                                    type: object
                                    properties:
                                      color_profile:
                                        type: string
                                        description: Identifies color primaries and white point.
                                        enum:
                                          - BT2020
                                          - P3_D65
                                          - BT709
                                      max_dml:
                                        type: number
                                        description: Maximum display mastering luminance (nits). Must be greater than min_dml.
                                        format: double
                                        minimum: 0
                                        maximum: 10000
                                      min_dml:
                                        type: number
                                        description: Minimum display mastering luminance (nits).
                                        format: double
                                        minimum: 0
                                        maximum: 10000
                                    additionalProperties: false
                                additionalProperties: false
                              profile84:
                                type: object
                                description: Only one of ['profile5', 'profile81', 'profile84'] may be set.
                                additionalProperties: false
                            additionalProperties: false
                          hdr10:
                            type: object
                            description: Only one of ['hdr10', 'dolby_vision'] may be set.
                            properties:
                              clli:
                                type: object
                                properties:
                                  max_cll:
                                    type: number
                                    description: Maximum Content Light Level (nits).
                                    format: double
                                    minimum: 0
                                    maximum: 10000
                                  max_fall:
                                    type: number
                                    description: Maximum Frame-Average Light Level (nits).
                                    format: double
                                    minimum: 0
                                    maximum: 10000
                                additionalProperties: false
                              mdcv:
                                type: object
                                properties:
                                  color_profile:
                                    type: string
                                    description: Identifies color primaries and white point.
                                    enum:
                                      - BT2020
                                      - P3_D65
                                      - BT709
                                  max_dml:
                                    type: number
                                    description: Maximum display mastering luminance (nits). Must be greater than min_dml.
                                    format: double
                                    minimum: 0
                                    maximum: 10000
                                  min_dml:
                                    type: number
                                    description: Minimum display mastering luminance (nits).
                                    format: double
                                    minimum: 0
                                    maximum: 10000
                                additionalProperties: false
                            additionalProperties: false
                        additionalProperties: false
                      profile:
                        type: string
                        description: H.265 video profile, which defines various encoder features and settings. See https://en.wikipedia.org/wiki/High_Efficiency_Video_Coding#Profiles for details.
                        enum:
                          - MAIN
                          - MAIN_10
                    additionalProperties: false
                  height:
                    type: integer
                    description: 'Height specifies the video height in pixels. Must be a multiple of two. Valid resolution ranges, width x height are: H.264: 2x2 to 1920x1080 or 1080x1920 H.265: 130x34 to 3840x2160 or 2160x3840 The upper limit is dictated by the number of pixels.'
                    format: int32
                    example: 1080
                    minimum: 1
                    exclusiveMinimum: true
                  id:
                    type: string
                    description: Encoder ID. IDs must be unique for all encoders. This ID is referenced when setting up playlist publishing.
                    example: 1080p60
                    minLength: 1
                  resize_mode:
                    type: string
                    description: Indicates how to handle the case where the input aspect ratio does not match the aspect ratio of this VideoEncoder.
                    enum:
                      - STRETCH
                      - LETTERBOX
                      - CENTER_CROP
                  width:
                    type: integer
                    description: 'Width specifies the video width in pixels. Must be a multiple of two. Valid resolution ranges, width x height are: H.264: 2x2 to 1920x1080 or 1080x1920 H.265: 130x34 to 3840x2160 or 2160x3840 The upper limit is dictated by the number of pixels.'
                    format: int32
                    example: 1920
                    minimum: 1
                    exclusiveMinimum: true
                additionalProperties: false
              minItems: 1
          additionalProperties: false
      additionalProperties: false
    patch-org-channel-request2:
      type: array
      items:
        type: object
        properties:
          from:
            type: string
            description: JSON Pointer for the source of a move or copy
          op:
            type: string
            description: Operation name
            enum:
              - add
              - remove
              - replace
              - move
              - copy
              - test
          path:
            type: string
            description: JSON Pointer to the field being operated on, or the destination of a move/copy operation
          value:
            description: The value to set
        additionalProperties: false
        required:
          - op
          - path
    put-org-channel-request:
      type: object
      properties:
        $schema:
          type: string
          description: An optional URL to a JSON Schema document describing this resource
          format: uri
        created:
          type: string
          description: Date and time the channel was created.
          format: date-time
          readOnly: true
        description:
          type: string
          description: A human-readable description of the channel.
        desired_state:
          type: string
          description: Desired running state for a channel.
          enum:
            - "ON"
            - "OFF"
        enable_byoip:
          type: boolean
          description: Indicates whether the channel's transcoder needs to run in a designated IP range.
        id:
          type: string
          description: External Channel ID provided at channel creation time
          example: my-channel
          minLength: 1
          pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
          readOnly: true
        ingest:
          type: object
          description: Ingest configures inputs for the transcoder.
          properties:
            slate:
              type: object
              description: Slate configures default slating behavior.
              properties:
                source_loss_url:
                  type: string
                  description: Source loss URL defines the location of the TS file to play when no source is available. It must have one audio and one video stream. Either MPEG2 or H.264 can be used.
                  format: uri-reference
                  example: https://example.com/slate.ts
              additionalProperties: false
            source:
              type: object
              description: Source provides a reference to the input media stream for this channel.
              properties:
                audio_sources:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        minLength: 1
                      language:
                        type: string
                        description: RFC 5646, e.g. 'en' 'en-US'
                        minLength: 1
                      license:
                        type: string
                        description: License specifies how the audio in this source is licensed.
                        enum:
                          - LIVE
                          - REPLAY
                      name:
                        type: string
                        description: Language fiendly name, e.g. 'English', 'Spanish'
                        minLength: 1
                      selector:
                        type: string
                        description: Expression for choosing an audio track in the stream for this AudioSource https://wbdstreaming.atlassian.net/wiki/spaces/LIVE/pages/250351679/Proposal+Audio+Track+Selection
                    additionalProperties: false
                  minItems: 1
                captions_source:
                  type: string
                  description: Closed captions source embedding. If unspecified, defaults to ATSC_A53.
                  enum:
                    - ATSC_A53
                    - SMPTE_2038
                id:
                  type: string
                  description: Unique identifier for this source.
                  example: s-examplej95ah2qab
                self:
                  type: string
                  description: Self link for the source.
                  format: uri-reference
                  readOnly: true
                video_source:
                  type: object
                  description: Additional information about the source video stream. This is only used to configure the transcoder compute resources to account for scaling and colorspace conversion of the source input.
                  properties:
                    dynamic_range:
                      type: string
                      description: The highest dynamic range the source will ever send to the transcoder.
                      enum:
                        - SDR
                        - HDR
                    max_resolution:
                      type: string
                      description: The maximum resolution the source will ever send to the transcoder.
                      enum:
                        - SD
                        - HD
                        - FHD
                        - TwoK
                        - QHD
                        - UHD
                  additionalProperties: false
              additionalProperties: false
              required:
                - id
          additionalProperties: false
          required:
            - source
        labels:
          type: array
          description: Optional labels for a channel. Any included labels must be at least 1 character long, but no greater than 256 characters. The maximum number of labels is 10.
          items:
            type: string
          maxItems: 10
        modified:
          type: string
          description: Date and time the channel was last modified.
          format: date-time
          readOnly: true
        name:
          type: string
          description: A friendly human-readable name for the channel. This will get displayed in user interfaces.
          example: My Channel
        organization:
          type: string
          minLength: 1
        packaging:
          type: object
          description: Packaging configures media format and content protection settings.
          properties:
            packagers:
              type: object
              description: Defines the list of packagers available for Publications.
              additionalProperties:
                type: object
                properties:
                  content_protection:
                    type: object
                    description: Configures how to protect packaged media segments.
                    properties:
                      atlas:
                        type: object
                        description: Only one of ['simple', 'atlas', 'cpix'] may be set.
                        properties:
                          asset_id:
                            type: string
                            description: The Asset Identifier which was taken from the token entitlement service request.
                          company_id:
                            type: string
                            description: The Identifier of the Company that this token belongs.
                          drms:
                            type: array
                            description: DRM system keys to request
                            items:
                              type: string
                              enum:
                                - WIDEVINE
                                - FAIRPLAY
                                - PRIMETIME
                                - PLAYREADY
                                - W3C_COMMON_CLEAR_KEY
                                - BULK_FILE
                            uniqueItems: true
                          widevine_v0_pssh_box:
                            type: boolean
                            description: When TRUE the KeyID is not embedded in the pssh box which sets the version to 0. Defaults to generating v1 pssh_boxes that includes the key_id
                        additionalProperties: false
                      bulk_file:
                        type: object
                        description: Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
                        properties:
                          iv_rotation:
                            type: string
                            description: How often the IV should be rotated and how it should be created
                            enum:
                              - RANDOM_PER_KEY
                              - PER_SEGMENT_NUMBER
                              - UNIQUE_PER_SEGMENT
                        additionalProperties: false
                      common:
                        type: object
                        description: Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
                        properties:
                          scheme_type:
                            type: string
                            description: Defines the scheme that can be used with Common Encryption
                            enum:
                              - CENC
                              - CBCS
                        additionalProperties: false
                      cpix:
                        type: object
                        description: Only one of ['simple', 'atlas', 'cpix'] may be set.
                        properties:
                          certificates_id:
                            type: string
                            description: Unique ID used for certificate settings, unique per distributor.
                          content_id:
                            type: string
                            description: (Optional) Content ID that identifies this channel in the CPIX service. Value is defined by the DRM system owner, and if defined will be included as part of a POST request.
                          credentials_id:
                            type: string
                            description: Unique ID used for credentials settings, unique per distributor.
                          decryption_key_id:
                            type: string
                            description: Unique ID of the decryption key to use in case the server response contains content keys encrypted. The key is unique per distirutor, and configured ahead of time by the publishing team and the CPIX service owner.
                          drms:
                            type: array
                            description: (Optional) DRM system keys to request. If not defined a GET request will be done, and any key returned will be handled. If defined, random kid(s) (key ids) will be generated on rotation for each DRM system, and a POST request will be done to create them.
                            items:
                              type: string
                              enum:
                                - WIDEVINE
                                - FAIRPLAY
                                - PRIMETIME
                                - PLAYREADY
                                - W3C_COMMON_CLEAR_KEY
                                - BULK_FILE
                            uniqueItems: true
                          headers_id:
                            type: string
                            description: (Optional) An identifier to a list of HTTP headers to be added to the request sent to the CPIX service.
                          uri:
                            type: string
                            description: CPIX service URI
                            format: uri-reference
                            minLength: 1
                        additionalProperties: false
                      key_rotation:
                        type: object
                        description: Configures how keys should be rotated
                        properties:
                          interval_secs:
                            type: number
                            description: Rotate keys based on the specified time interval. If Program is also provided then this time interval will only apply to media segments that are outside of program boundaries. If Program is NOT provided then only this time interval will be used to decided when to rotate keys.
                            format: float
                            minimum: 300
                          program:
                            type: boolean
                            description: Rotate keys on (SCTE35) program boundaries such that no two programs will be protected with the same key.
                          program_overlap_skip_encrypt:
                            type: boolean
                            description: Do not encrypt segments that are part of more than one SCTE-35 program.
                        additionalProperties: false
                      sample_aes:
                        type: object
                        description: Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
                        additionalProperties: false
                      simple:
                        type: object
                        description: Only one of ['simple', 'atlas', 'cpix'] may be set.
                        properties:
                          publish_points:
                            type: array
                            description: Pub points where keys should be published. If multiple are specified, only one needs to succeed to consider the key successfully published.
                            items:
                              type: object
                              properties:
                                basic_auth:
                                  type: object
                                  description: Only one of ['basic_auth'] may be set.
                                  properties:
                                    password:
                                      type: string
                                      description: Plain text password for basic auth.
                                    username:
                                      type: string
                                      description: Username for basic auth.
                                  additionalProperties: false
                                compression:
                                  type: string
                                  description: Configures whether or not (and how) to compress manifests being published to the origin. If not specified, manifests will not be compressed.
                                  enum:
                                    - NONE
                                    - GZIP
                                do_not_monitor:
                                  type: boolean
                                  description: (Optional) Specifies if this pubpoint should not be monitored by PLM.
                                headers:
                                  type: object
                                  description: Allows custom HTTP headers to be set via configuration for all HTTP requests.
                                  additionalProperties:
                                    type: string
                                method:
                                  type: string
                                  description: Method overrides what HTTP method to specify in requests to the Publish Point. If not specified the service will default to POST.
                                playback_base_url:
                                  type: string
                                  description: The base URL where published playlists will be able to be obtained. This is often different than the publish_base_url for CDN publishing workflows.
                                  format: uri-reference
                                playback_query_params:
                                  type: string
                                  description: 'Specifies any query parameters that will be added to playback urls. Should not include the initial ''?'' Example: ''foo=bar&q=golang'''
                                publish_base_url:
                                  type: string
                                  description: The base URL where generated playlists will be sent/published. Each publish point requires a unique 'publish_base_url'.
                                  format: uri-reference
                              additionalProperties: false
                          require_publish:
                            type: string
                            description: Indicates which publish points must succeed for segment publishing to use the keys.
                            enum:
                              - ANY
                              - ALL
                        additionalProperties: false
                    additionalProperties: false
                  mp2t:
                    type: object
                    description: Uses MP2T format for each segments. Only one of ['mp2t', 'mp4'] may be set.
                    properties:
                      force_unmuxed_audio:
                        type: boolean
                        description: Forces the Video and Audio Encodings to be unmuxed when there is one audio encodings. This setting will have to be uniformed across MP2T packagers within a config. When there are two or more audio encodings, unmuxed will be used automatically.
                      insert_id3_utc_time:
                        type: boolean
                        description: If true, insert ID3 tags that include a UTC timestamp. This is a Turner/WM-specific extension.
                    additionalProperties: false
                  mp4:
                    type: object
                    description: Uses MP4 format for each segments. Only one of ['mp2t', 'mp4'] may be set.
                    properties:
                      caption_placement:
                        type: string
                        description: CaptionPlacement defines where caption messages should be placed in the output MP4.
                        enum:
                          - SEI_PAYLOAD
                          - CLCP_TRACK
                      insert_pssh_box:
                        type: boolean
                        description: Insert pssh boxes generated by content protection into packaged segments. Defaults to not insert pssh boxes to the packaged segments.
                    additionalProperties: false
                  ttml:
                    type: object
                    description: Only one of ['web_vtt', 'ttml'] may be set.
                    additionalProperties: false
                  web_vtt:
                    type: object
                    description: Only one of ['web_vtt', 'ttml'] may be set.
                    properties:
                      file_format:
                        type: string
                        description: The file format used to encapsulate the WebVTT segments.
                        enum:
                          - TEXT
                          - MP4
                    additionalProperties: false
                additionalProperties: false
          additionalProperties: false
        publishing:
          type: object
          description: Publishing configures playlist formats and where to send video and playlist data.
          properties:
            closed_caption_streams:
              type: array
              description: Configures how captioning information, which references CEA-608 captions embedded in video segments, is published.
              items:
                type: object
                properties:
                  auto_select:
                    type: string
                    description: Indicates that the client should play the captioning media selection group if the user has not indicated a user preference. If both auto_select and default are not set, the first captioning media selection group will be used.
                    enum:
                      - "NO"
                      - "YES"
                  default:
                    type: string
                    description: Configures the captioning media selection group that will be played if the user has not indicated a user preference. If both auto_select and default are not set, the first captioning media selection group will be used.
                    enum:
                      - "NO"
                      - "YES"
                  language:
                    type: string
                    description: Language code as RFC 5646, e.g. 'en' 'en-US'.
                  name:
                    type: string
                    description: Source stream name.
                additionalProperties: false
            feature_flags:
              type: array
              description: Set of string identifiers corresponding to features that this Channel is opting in.
              items:
                type: string
            live2vod:
              type: object
              description: Live2VOD configuration used to archive the channel data, this allows clip creation after the content is no longer live.
              properties:
                clear_capture:
                  type: boolean
                  description: BETA - (Optional) Indicates whether the system should send the unpackaged segments produced from the transcoder to the L2V system for purposes of creating mp4s and/or repackaging.
                product_id:
                  type: string
                  description: Product ID that VODs will be associated with in the Live2VOD system. The value of this ID is pre-configured in the Live2VOD portal.
                  minLength: 1
                retention_days:
                  type: integer
                  description: Specifies the retention time, in days, for archived content.
                  format: int32
                  minimum: 1
                  maximum: 30
              additionalProperties: false
            publications:
              type: array
              description: A set of individual configurations that each can configure a specific destination and mechanism of delivery for segments and/or playlists.
              items:
                type: object
                properties:
                  audio_encoder_ids:
                    type: array
                    description: Optionally specify which audio encoders should be used for this publication. If none are specified, all audio encoders configured for the transcoder will be used.
                    items:
                      type: string
                    uniqueItems: true
                  create_vods:
                    type: boolean
                    description: Create VODs for all publish points in this publication. Note that Live2VOD must also be configured for the parent |Channel|.
                  dash:
                    type: object
                    description: DASH configures publication settings. Only one of HLS or DASH can be set.
                    properties:
                      minimum_update_period_secs:
                        type: integer
                        description: Sets the minimumUpdatePeriod field in MPD to be this value. If set to 0 (default), segment duration is used. The value shall not exceed the 'suggested_presentation_delay_secs'.
                        format: int32
                      signaling_formats:
                        type: array
                        description: Signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering playlists.
                        items:
                          type: string
                          enum:
                            - SCTE35_SPLICE_INFO_SECTION
                            - SCTE35_BIN
                        uniqueItems: true
                      suggested_presentation_delay_secs:
                        type: integer
                        description: The suggested amount of time (in seconds) the player should be behind the live stream. This value must be greater or equal to 'minimum_update_period_secs'.
                        format: int32
                        minimum: 0
                      url_type:
                        type: string
                        description: If set to 'URL_TYPE_UNDEFINED' playlist generation will use 'RELATIVE'.
                        enum:
                          - RELATIVE
                          - ABSOLUTE
                          - HOST_RELATIVE
                    additionalProperties: false
                  drms:
                    type: array
                    description: Optionally specify which DRMs to advertise in the playlist. If specified, this must be a subset of the DRMs specified by the packager associated with this publication. If omitted or empty, all DRMs specified by the packager will be advertised. This setting can only be used for HLS playlists.
                    items:
                      type: string
                      enum:
                        - WIDEVINE
                        - FAIRPLAY
                        - PRIMETIME
                        - PLAYREADY
                        - W3C_COMMON_CLEAR_KEY
                        - BULK_FILE
                    uniqueItems: true
                  dvr_window_secs:
                    type: integer
                    description: DVR window is the max sum(duration of media segments) that will be kept in a manifest at a given time in seconds. The max supported DVR window is 10 hours.
                    format: int32
                    minimum: 0
                    maximum: 36000
                  fer_audio_encoder_ids:
                    type: array
                    description: Optionally specify which audio encoders should be used when generating the FER of this Presentation, this overrides the 'audio_encoder_ids' used during the live portion. If none are specified, the 'audio_encoder_ids' field will be used.
                    items:
                      type: string
                    uniqueItems: true
                  hls:
                    type: object
                    description: HLS configures publication settings. Only one of HLS or DASH can be set.
                    properties:
                      audio_only_variants:
                        type: string
                        description: 'Defines how audio only variant streams are included in the master playlist, where the variant streams are defined by #EXT-X-STREAM-INF tag, the tag attributes provide information about the Stream. The INCLUDE_DEFAULT option - only the default ''audio only variant stream'' is included in master playlist. This is the most common use case. INCLUDE_NONE - no audio only variant streams are included in the master playlist. INCLUDE_ALL - include all audio only variant streams in the master playlist.'
                        enum:
                          - INCLUDE_DEFAULT
                          - INCLUDE_NONE
                          - INCLUDE_ALL
                      gap_tags:
                        type: string
                        description: 'Allows turning gap tags ON/OFF. When turned ON - the tag ''#EXT-X-GAP'' is inserted into media playlist for a missing segment. When turned OFF - Discontinuity is inserted into the playlist for missing segment(s). The default option UNDEFINED is mapped to OFF. Note: Gap tags are always inserted for the missing thumbnail segments independently of this setting'
                        enum:
                          - "ON"
                          - "OFF"
                      master_publish_frequency_secs:
                        type: integer
                        description: 'How often the multi-variant playlist(s) should be published (in seconds) once a channel is started. If 0 (not provided), defaults to 1 hour. The following can also result in re-publishing of multi-variant playlists: - Configuration changes related to transcoding configuration (i.e. adding, removing, changing encoders). - Service code changes related to manifest generation.'
                        format: int32
                      master_url_type:
                        type: string
                        description: Allows specifying url type for HLS master playlists. If not provided, playlist generation will use 'RELATIVE'.
                        enum:
                          - RELATIVE
                          - ABSOLUTE
                          - HOST_RELATIVE
                      media_url_type:
                        type: string
                        description: Allows specifying url type for HLS media playlists. If not provided, playlist generation will use 'RELATIVE'.
                        enum:
                          - RELATIVE
                          - ABSOLUTE
                          - HOST_RELATIVE
                      partial_presentations:
                        type: array
                        description: Specify which partial presentations should be used for this presentation. Partial presentations are additional master playlists that point to a subset of the parent presentation's media streams/variant playlists.
                        items:
                          type: object
                          properties:
                            audio_encoder_ids:
                              type: array
                              description: Specify which audio encoders should be used for this presentation. If none are specified, all audio encoders configured for the parent Publication will be used.
                              items:
                                type: string
                              uniqueItems: true
                            fer_audio_encoder_ids:
                              type: array
                              description: 'Optionally specify which audio encoders should be used when generating the FER of this Partial Presentation, this overrides the ''audio_encoder_ids'' used during the live portion. If none are specified, the ''audio_encoder_ids'' field will be used. NOTE: This MUST only be used with push based manifest. Ignore this field when using Aventus Origin with Dynamic Manifests. Instead use the AudioSource.License field.'
                              items:
                                type: string
                              uniqueItems: true
                            iframe_only_encoder_ids:
                              type: array
                              description: List of video encoder IDs that should have I-Frame only playlists generated for them. If no 'iframe_only_encoder_ids' are given then no I-Frame playlists will be in the Partial Presentation.
                              items:
                                type: string
                              uniqueItems: true
                            playlist_path:
                              type: string
                              description: Sub-path that will be appended onto the publish and playback base URLs of HTTP PublishPoints for published playlist files.
                              minLength: 1
                            thumbnail_encoder_ids:
                              type: array
                              description: Specify which thumbnail encoders should be used for this presentation. If no 'thumbnail_encoder_ids' are given then no thumbnail playlists will be in the Partial Presentation.
                              items:
                                type: string
                              uniqueItems: true
                            video_encoder_ids:
                              type: array
                              description: Specify which video encoders should be used for this presentation. If none are specified, all video encoders configured for the parent Publication will be used.
                              items:
                                type: string
                              uniqueItems: true
                          additionalProperties: false
                      pdt_on_every_segment:
                        type: boolean
                        description: 'When true a #EXT-X-PROGRAM-DATE-TIME tag will be placed on every media segment in media playlists. When false, the default behavior, the PDT tag is set according to the HLS specification.'
                      signaling_formats:
                        type: array
                        description: Signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering playlists.
                        items:
                          type: string
                          enum:
                            - APPLE_SCTE35
                            - AD_SIMPLE
                            - SCTE35
                        uniqueItems: true
                      utc_in_segment_title:
                        type: boolean
                        description: 'Include a UTC timestamp (that is equivalent in value to #EXT-X-PROGRAM-DATE-TIME) in the title of each media segment in media playlists. Ex. #EXTINF:6.006,LTC=2020-01-01T12:00:00.000Z'
                    additionalProperties: false
                  iframe_only_encoder_ids:
                    type: array
                    description: List of video encoder IDs that should have I-Frame only playlists generated for them.
                    items:
                      type: string
                    uniqueItems: true
                  master_playlist_name:
                    type: string
                    description: Optional master manifest name. When not supplied a default of 'master' will be used.
                  origin:
                    type: object
                    description: Configures defaults used when generating manifests or playlist using the dynamic origin. Cannot be set if this is a playlist-only publication (i.e. contains publish points that specify 'playlist_only_for').
                    properties:
                      fallback_defaults:
                        type: object
                        description: FallbackDefaults specifies the alternative behavior of the dynamic manifest generator. This behavior is intended to be a simplified configuration comparead to the default behavior so that it can be used as a fallback for when players are encountering issues with the default behavior. Specific behaviors can be overwritten using appropriate query string parameters when making the request for the manifest.
                        properties:
                          dash_signaling_formats:
                            type: array
                            description: DASH Signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering DASH manifests.
                            items:
                              type: string
                              enum:
                                - SCTE35_SPLICE_INFO_SECTION
                                - SCTE35_BIN
                            uniqueItems: true
                          duration_seconds:
                            type: integer
                            description: Duration is the length of content that will be included in the manifest, in seconds. The max supported DVR window is 12 hours. If not specified, the default duration will be 30 seconds.
                            format: int32
                            minimum: 0
                            maximum: 43200
                          enable_hls_delta_updates:
                            type: boolean
                            description: When true enables HLS Delta updates for this particular origin.
                          hls_signaling_formats:
                            type: array
                            description: HLS signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering playlists.
                            items:
                              type: string
                              enum:
                                - APPLE_SCTE35
                                - AD_SIMPLE
                                - SCTE35
                            uniqueItems: true
                          media_url_type:
                            type: string
                            description: Allows specifying url type for HLS media playlists and DASH manifests. If not provided, playlist generation will use 'RELATIVE'.
                            enum:
                              - RELATIVE
                              - ABSOLUTE
                              - HOST_RELATIVE
                          minimum_update_period_seconds:
                            type: integer
                            description: Sets the minimumUpdatePeriod field in MPD to be this value. If set to 0 (default), segment duration is used. The value shall not exceed the 'suggested_presentation_delay_secs'.
                            format: int32
                            minimum: 0
                          multi_variant_url_type:
                            type: string
                            description: Allows specifying url type for HLS multi-variant playlists. If not provided, playlist generation will use 'RELATIVE'.
                            enum:
                              - RELATIVE
                              - ABSOLUTE
                              - HOST_RELATIVE
                          pdt_on_every_segment:
                            type: boolean
                            description: 'When true a #EXT-X-PROGRAM-DATE-TIME tag will be placed on every media segment in HLS media playlists. When false, the default behavior, the PDT tag is set according to the HLS specification.'
                          pre_start_duration_seconds:
                            type: integer
                            description: Pre Start Duration is the length of content that will be included in the manifest when the start time of a manifest is in the future. When a manifest is near the start time but does not contain 'pre_start_duration_seconds' content Manifest Origin will keep content before the start time to make the manifest length at least 'pre_start_duration_seconds'. If not specified requesting a manifest in the future will result in a 404.
                            format: int32
                            minimum: 0
                            maximum: 43200
                          suggested_presentation_delay_seconds:
                            type: integer
                            description: Sets the suggestedPresentationDelay field in MPD to be this value. This value must be greater or equal to 'minimum_update_period_secs'. If unset, the default value will be calculated as 3 * segment target duration.
                            format: int32
                            minimum: 0
                        additionalProperties: false
                      manifest_defaults:
                        type: object
                        description: ManifestDefaults specifies the default behavior of the dynamic manifest generator. Specific behaviors can be overwritten using appropriate query string parameters when making the request for the manifest.
                        properties:
                          dash_signaling_formats:
                            type: array
                            description: DASH Signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering DASH manifests.
                            items:
                              type: string
                              enum:
                                - SCTE35_SPLICE_INFO_SECTION
                                - SCTE35_BIN
                            uniqueItems: true
                          duration_seconds:
                            type: integer
                            description: Duration is the length of content that will be included in the manifest, in seconds. The max supported DVR window is 12 hours. If not specified, the default duration will be 30 seconds.
                            format: int32
                            minimum: 0
                            maximum: 43200
                          enable_hls_delta_updates:
                            type: boolean
                            description: When true enables HLS Delta updates for this particular origin.
                          hls_signaling_formats:
                            type: array
                            description: HLS signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering playlists.
                            items:
                              type: string
                              enum:
                                - APPLE_SCTE35
                                - AD_SIMPLE
                                - SCTE35
                            uniqueItems: true
                          media_url_type:
                            type: string
                            description: Allows specifying url type for HLS media playlists and DASH manifests. If not provided, playlist generation will use 'RELATIVE'.
                            enum:
                              - RELATIVE
                              - ABSOLUTE
                              - HOST_RELATIVE
                          minimum_update_period_seconds:
                            type: integer
                            description: Sets the minimumUpdatePeriod field in MPD to be this value. If set to 0 (default), segment duration is used. The value shall not exceed the 'suggested_presentation_delay_secs'.
                            format: int32
                            minimum: 0
                          multi_variant_url_type:
                            type: string
                            description: Allows specifying url type for HLS multi-variant playlists. If not provided, playlist generation will use 'RELATIVE'.
                            enum:
                              - RELATIVE
                              - ABSOLUTE
                              - HOST_RELATIVE
                          pdt_on_every_segment:
                            type: boolean
                            description: 'When true a #EXT-X-PROGRAM-DATE-TIME tag will be placed on every media segment in HLS media playlists. When false, the default behavior, the PDT tag is set according to the HLS specification.'
                          pre_start_duration_seconds:
                            type: integer
                            description: Pre Start Duration is the length of content that will be included in the manifest when the start time of a manifest is in the future. When a manifest is near the start time but does not contain 'pre_start_duration_seconds' content Manifest Origin will keep content before the start time to make the manifest length at least 'pre_start_duration_seconds'. If not specified requesting a manifest in the future will result in a 404.
                            format: int32
                            minimum: 0
                            maximum: 43200
                          suggested_presentation_delay_seconds:
                            type: integer
                            description: Sets the suggestedPresentationDelay field in MPD to be this value. This value must be greater or equal to 'minimum_update_period_secs'. If unset, the default value will be calculated as 3 * segment target duration.
                            format: int32
                            minimum: 0
                        additionalProperties: false
                      retention_minutes:
                        type: integer
                        description: RetentionMinutes specifies how long data is retained, in minutes. Live linear (24/7) channels should set this to the longest expected DVR window (a few hours). Live event channels should set this to how Live2VOD playlists are expected to be available. If unspecified, the default will be 60 minutes. The maximum value is 15 days (21600 minutes).
                        format: int32
                        minimum: 0
                        maximum: 21600
                      segments:
                        type: object
                        description: 'Segments is a message that will include different options to change the processes for segments. Ex: Allows changing the default behavior of the # of regions segments publishes to with the redunancy field.'
                        properties:
                          redundancy:
                            type: string
                            enum:
                              - SingleRegion
                              - DualRegion
                        additionalProperties: false
                    additionalProperties: false
                  packager_id:
                    type: string
                    description: Determines how segments in this publication are packaged. Must reference a packager in 'packaging.packagers'. However, if this is a playlist-only publication (i.e. contains publish points that specify 'playlist_only_for'), this must remain unset as the packager will be inferred from the publication this one is providing playlists for.
                  publish_points:
                    type: array
                    description: Publish points specify where to output.
                    items:
                      type: object
                      properties:
                        http:
                          type: object
                          description: HTTP destination where media segments and playlists will be published.
                          properties:
                            basic_auth:
                              type: object
                              description: Only one of ['basic_auth'] may be set.
                              properties:
                                password:
                                  type: string
                                  description: Plain text password for basic auth.
                                username:
                                  type: string
                                  description: Username for basic auth.
                              additionalProperties: false
                            compression:
                              type: string
                              description: Configures whether or not (and how) to compress manifests being published to the origin. If not specified, manifests will not be compressed.
                              enum:
                                - NONE
                                - GZIP
                            do_not_monitor:
                              type: boolean
                              description: (Optional) Specifies if this pubpoint should not be monitored by PLM.
                            headers:
                              type: object
                              description: Allows custom HTTP headers to be set via configuration for all HTTP requests.
                              additionalProperties:
                                type: string
                            method:
                              type: string
                              description: Method overrides what HTTP method to specify in requests to the Publish Point. If not specified the service will default to POST.
                            playback_base_url:
                              type: string
                              description: The base URL where published playlists will be able to be obtained. This is often different than the publish_base_url for CDN publishing workflows.
                              format: uri-reference
                            playback_query_params:
                              type: string
                              description: 'Specifies any query parameters that will be added to playback urls. Should not include the initial ''?'' Example: ''foo=bar&q=golang'''
                            publish_base_url:
                              type: string
                              description: The base URL where generated playlists will be sent/published. Each publish point requires a unique 'publish_base_url'.
                              format: uri-reference
                          additionalProperties: false
                        id:
                          type: string
                          description: uniquely identifies this publish_point within a channel configuration. Can be referenced by other publish_points in the 'playlist_only_for' field.
                        playlist_only_for:
                          type: string
                          description: playlist_only_for identifies the id of the publish_point that has the segments for this publish_point, which is only publishing a playlist for those segments. All publish_points within a publication must either have 'playlist_only_for' all set or all not set.
                      additionalProperties: false
                  redundant_publishing:
                    type: boolean
                    description: When redundant publishing is enabled succeeding to publish a given media segment to at least one HTTPPublishPoint in publish_points will result in that segment showing up in manifests as playable content. Will require at least two publish_points defined within the same publication.
                  startover:
                    type: object
                    description: Configures startover processing for this Publication.
                    properties:
                      first_program_start:
                        type: object
                        description: Trigger Startover on the first Program Start. Only one of ['first_program_start', 'on_airing_id'] may be set.
                        additionalProperties: false
                      on_airing_id:
                        type: object
                        description: Use the Airing Id of a Program Start to trigger a Startover on the first match. Only one of ['first_program_start', 'on_airing_id'] may be set.
                        properties:
                          airing_id:
                            type: string
                            description: Airing Id is a SCTE-35 Segmentation Unique Program ID (UPID) of type 0x08 used to specify the unique airing of a program. Is a 8 byte hex encoded string that is prepended with '0x'.
                            pattern: ^0x[0-9a-fA-F]{16}$
                        additionalProperties: false
                    additionalProperties: false
                  thumbnail_encoder_ids:
                    type: array
                    description: 'Optional: Specify what thumbnail_encoders should be in this Publication'
                    items:
                      type: string
                    uniqueItems: true
                  use_strict_bitrate:
                    type: boolean
                    description: Optional, indicates whether we should pad the bitrate (false) or use what is explicitly provided (true)
                  video_encoder_ids:
                    type: array
                    description: Optionally specify which video encoders should be used for this publication. If none are specified, all video encoders configured for the transcoder will be used.
                    items:
                      type: string
                    uniqueItems: true
                additionalProperties: false
            rtmp_publications:
              type: array
              description: A set of configurations for delivering RTMP streams
              items:
                type: object
                properties:
                  audio_encoder_id:
                    type: string
                    description: Only AAC encoders are supported
                    minLength: 1
                  id:
                    type: string
                    description: RTMP publication ID. Must be unique.
                    minLength: 1
                    pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
                  url:
                    type: string
                    format: uri
                    minLength: 1
                    pattern: ^rtmps?://
                  video_encoder_id:
                    type: string
                    description: Only h264 encoders are supported
                    minLength: 1
                additionalProperties: false
            srt_publications:
              type: array
              description: A set of configurations for delivering SRT streams
              items:
                type: object
                properties:
                  audio_encoders:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          minLength: 1
                        pid:
                          type: integer
                          description: Output MPEG-TS PID. PIDs should be set on the PMT, SCTE-35 and all encoders or none. Valid PIDs must 13-bit values greater than 31. If no PIDs are provided (pid == 0) then they will be generated automatically.
                          format: int32
                          maximum: 8191
                          exclusiveMaximum: true
                      additionalProperties: false
                    minItems: 1
                  id:
                    type: string
                    description: SRT publication ID. Must be unique.
                    minLength: 1
                    pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
                  pmt_pid:
                    type: integer
                    description: MPEG-TS PMT PID. PIDs should be set on the PMT, SCTE-35 and all encoders or none. Valid PIDs must 13-bit values greater than 31. If no PIDs are provided (pid == 0) then they will be generated automatically.
                    format: int32
                    maximum: 8191
                    exclusiveMaximum: true
                  scte35_pid:
                    type: integer
                    description: MPEG-TS SCTE-35 PID. PIDs should be set on the PMT, SCTE-35, and all encoders or none. Valid PIDs must 13-bit values greater than 31. If no PIDs are provided (pid == 0) then they will be generated automatically.
                    format: int32
                    maximum: 8191
                    exclusiveMaximum: true
                  url:
                    type: string
                    format: uri
                    minLength: 1
                    pattern: ^srt://
                  video_encoders:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          minLength: 1
                        pid:
                          type: integer
                          description: Output MPEG-TS PID. PIDs should be set on the PMT, SCTE-35 and all encoders or none. Valid PIDs must 13-bit values greater than 31. If no PIDs are provided (pid == 0) then they will be generated automatically.
                          format: int32
                          maximum: 8191
                          exclusiveMaximum: true
                      additionalProperties: false
                    minItems: 1
                additionalProperties: false
          additionalProperties: false
        region:
          type: string
          description: Region represents the general geolocation for transcoding and stream egress from iStreamPlanet. If no region is provided at channel creation time, then 'US_WEST' is used.
          enum:
            - US_WEST
            - US_EAST
        resource_class:
          type: string
          description: If the ResourceClass is unspecified the channel will default to run in the 'DYNAMIC' ResourceClass. Note that changing the ResourceClass for a running channel is supported and will be performed with no downtime.
          enum:
            - DYNAMIC
            - STATIC
        self:
          type: string
          description: Self link for the channel.
          format: uri-reference
          readOnly: true
        signaling:
          type: object
          description: Signaling configures in-band signaling (i.e. SCTE-35).
          properties:
            blackout_settings:
              type: object
              description: 'Configure blackout: replacing content with custom slates based on program signaling.'
              properties:
                default_blackout_slate_url:
                  type: string
                  description: Default slate URL to use for blackouts. Can be overridden by the 'slates' field.
                  format: uri-reference
                  example: https://example.com/blackout.ts
                force_blackout_segments:
                  type: array
                  description: List of signaling segment types to force blackout, e.g. add 'SPLICE_INSERT' to blackout all ads signaled via SCTE-35 splice_insert.
                  items:
                    type: string
                    enum:
                      - SPLICE_INSERT
                      - CONTENT_ID
                      - PROGRAM
                      - PROGRAM_BLACKOUT_OVERRIDE
                      - PROGRAM_BREAKAWAY
                      - CHAPTER
                      - BREAK
                      - OPENING_CREDIT
                      - CLOSING_CREDIT
                      - PROVIDER_PLACEMENT_OP
                      - DISTRIBUTOR_PLACEMENT_OP
                      - PROVIDER_OVERLAY_OP
                      - DISTRIBUTOR_OVERLAY_OP
                      - PROVIDER_AD
                      - DISTRIBUTOR_AD
                      - UNSCHEDULED_EVENT
                      - NETWORK
                      - SLATE
                      - NOT_INDICATED
                      - TIMED_METADATA
                honor_web_delivery_restriction:
                  type: boolean
                  description: Determines whether to honor the web_delivery_allowed attribute in SCTE-35 segmentation descriptors. When this is enabled, a segmentation descriptor with web_delivery_allowed=false will trigger a blackout.
                slates:
                  type: array
                  description: Per-segment type slate overrides.
                  items:
                    type: object
                    properties:
                      blackout_slate_url:
                        type: string
                        description: Blackout slate URL to use for the specified segments. It must have one audio and one video stream. Either MPEG2 or H.264 can be used.
                        format: uri-reference
                        example: https://example.com/blackout.ts
                      segments:
                        type: array
                        description: Segment types that shall utilize the blackout slate URL. Any segment type defined here _must_ also be present in the parent signaling configuration.
                        items:
                          type: string
                          enum:
                            - SPLICE_INSERT
                            - CONTENT_ID
                            - PROGRAM
                            - PROGRAM_BLACKOUT_OVERRIDE
                            - PROGRAM_BREAKAWAY
                            - CHAPTER
                            - BREAK
                            - OPENING_CREDIT
                            - CLOSING_CREDIT
                            - PROVIDER_PLACEMENT_OP
                            - DISTRIBUTOR_PLACEMENT_OP
                            - PROVIDER_OVERLAY_OP
                            - DISTRIBUTOR_OVERLAY_OP
                            - PROVIDER_AD
                            - DISTRIBUTOR_AD
                            - UNSCHEDULED_EVENT
                            - NETWORK
                            - SLATE
                            - NOT_INDICATED
                            - TIMED_METADATA
                      upids:
                        type: array
                        description: Exclusive list of hex string encoded colon separated UPID Type:ID pairs (e.g. '0A:1A2B3C4D') to enable this blackout slate on.
                        items:
                          type: string
                    additionalProperties: false
              additionalProperties: false
            disable_inband_parsing:
              type: boolean
              description: Disable parsing SCTE-35 in-band signaling. Out-of-band signaling is still allowed.
            scte_pid:
              type: integer
              description: Defines the specific PID containing the SCTE that the transcoder should process. Using '0' (default value) will pick the first PID containing SCTE-35 in the PMT.
              format: int32
              minimum: 0
            segment_settings:
              type: array
              description: Settings that apply to specific segments.
              items:
                type: object
                properties:
                  default_duration_secs:
                    type: integer
                    description: Specifies the duration of a segment when the in-band SCTE-35 that initiates it (e.g. Distributor Placement Opportunity Start) is missing an explicit duration. N.B. for program and ad types, this also affects 'Simple Program' and 'Simple Ad' markers, respectively.
                    format: int32
                    minimum: 0
                    maximum: 172800
                  emit_default_duration:
                    type: boolean
                    description: Determines whether to include the default duration in the output SCTE-35 messages when the input SCTE-35 message did not specify a duration.
                  offset_millis:
                    type: integer
                    description: Specifies a 'correction' to the splice_time of in-band SCTE-35 in milliseconds.
                    format: int32
                    minimum: -4000
                    maximum: 4000
                  segment_end_mode:
                    type: string
                    description: Determines which Segment End signaling mode to use for the provided segments. If unspecified, defaults to MATCH_END_EVENT_ID.
                    enum:
                      - MATCH_END_EVENT_ID
                      - IGNORE_END_EVENT_ID
                      - IGNORE_END_SIGNAL
                  segments:
                    type: array
                    description: Specifies the list of which segment types this setting applies to. Any segment type defined here _must_ also be present in the parent signaling configuration.
                    items:
                      type: string
                      enum:
                        - SPLICE_INSERT
                        - CONTENT_ID
                        - PROGRAM
                        - PROGRAM_BLACKOUT_OVERRIDE
                        - PROGRAM_BREAKAWAY
                        - CHAPTER
                        - BREAK
                        - OPENING_CREDIT
                        - CLOSING_CREDIT
                        - PROVIDER_PLACEMENT_OP
                        - DISTRIBUTOR_PLACEMENT_OP
                        - PROVIDER_OVERLAY_OP
                        - DISTRIBUTOR_OVERLAY_OP
                        - PROVIDER_AD
                        - DISTRIBUTOR_AD
                        - UNSCHEDULED_EVENT
                        - NETWORK
                        - SLATE
                        - NOT_INDICATED
                        - TIMED_METADATA
                    uniqueItems: true
                  tier_filter:
                    type: object
                    description: Specifies how to filter the provided segments, when received through in-band SCTE-35, based on the SCTE-35 SpliceInfoSection Tier.
                    properties:
                      explicit_tier:
                        type: object
                        description: Only one of ['explicit_tier'] may be set.
                        properties:
                          values:
                            type: array
                            items:
                              type: integer
                              format: int32
                        additionalProperties: false
                    additionalProperties: false
                additionalProperties: false
            segments:
              type: array
              description: Segment types to process for in-band signaling.
              items:
                type: string
                enum:
                  - SPLICE_INSERT
                  - CONTENT_ID
                  - PROGRAM
                  - PROGRAM_BLACKOUT_OVERRIDE
                  - PROGRAM_BREAKAWAY
                  - CHAPTER
                  - BREAK
                  - OPENING_CREDIT
                  - CLOSING_CREDIT
                  - PROVIDER_PLACEMENT_OP
                  - DISTRIBUTOR_PLACEMENT_OP
                  - PROVIDER_OVERLAY_OP
                  - DISTRIBUTOR_OVERLAY_OP
                  - PROVIDER_AD
                  - DISTRIBUTOR_AD
                  - UNSCHEDULED_EVENT
                  - NETWORK
                  - SLATE
                  - NOT_INDICATED
                  - TIMED_METADATA
              uniqueItems: true
          additionalProperties: false
        tags:
          type: object
          description: Use ChannelMetadata when possible instead of tags.
          properties:
            custom:
              type: object
              description: Custom tags to be added to metrics and logs for this channel. In Datadog, the tags will be prefixed with 'dy_' to avoid collisions with system tags.
              additionalProperties:
                type: string
            monitored:
              type: boolean
              description: Indicates whether this channel is monitored by automation.
          additionalProperties: false
        transcode:
          type: object
          description: Transcode configures audio/video conversion settings.
          properties:
            audio_encoders:
              type: array
              description: Audio encoders specify audio conversion settings, e.g. channels, samples, codec, bitrate, etc.
              items:
                type: object
                properties:
                  audio_source_id:
                    type: string
                    description: Audio source ID specifies which stream within the audio source to use.
                    minLength: 1
                  bit_rate:
                    type: integer
                    description: Bit rate specifies the constant number of bits used per second. Higher values result in better audio quality but bigger file sizes.
                    format: int32
                    example: 128000
                    minimum: 1000
                    exclusiveMinimum: true
                  channels:
                    type: integer
                    description: 'Channels specifies the number of real audio channels to encode. The available options depend on the audio codec. The encoder supports different channel configurations based on the codec; AAC 1-2 channels, AC3 supports 2 or 6, and EAC3 supports 2 or 6. For example, for AC3 5.1 one would set 6 channels. Channel configurations are as follows: 1 - Mono (C) 2 - Stereo / Dolby 2.0 (L, R) 6 - Dolby 5.1 (L, C, R, l, r, LFE) Dolby Atmos layouts such as 5.1.4 are achieved by setting this field to 6 and configuring ddp_joc_logical_channels in EAC3Settings as desired.'
                    format: int32
                    example: 2
                    minimum: 0
                    exclusiveMinimum: true
                    maximum: 6
                  codec:
                    type: string
                    description: Codec specifies the audio data encoding format.
                    enum:
                      - AAC_LC
                      - AC3
                      - EAC3
                      - HE_AAC
                  eac3:
                    type: object
                    description: Only one of ['eac3'] may be set.
                    properties:
                      ddp_joc_logical_channels:
                        type: integer
                        description: 'If non-zero, configures the encoder to compute JOC metadata (i.e. Dolby Atmos) for the given logical speaker layout. The transcoder does not guarantee any particular bed layout in the JOC metadata, and this setting currently has no effect on that. It merely determines the channel layout to which all inputs are converted before encoding. Legal values are: 8 - 5.1.2 10 - 5.1.4 For sources with raw PCM input and more than 6 channels, configure this according to the expected input channel layout. For channels which expect to take a 7.1 EAC-3 input, configure to 8. For all other cases, including upmixing from 5.1 or fewer channels or any kind of Atmos input, configure to 10. This setting is mutually exclusive with ddp_joc_passthrough.'
                        format: int32
                        example: 10
                      ddp_joc_passthrough:
                        type: boolean
                        description: Indicates that the source will contain Joint Object Coding metadata (Dolby Atmos) and that the encoder should operate in passthrough mode. https://learning.dolby.com/hc/en-us/articles/4406039180564-Appendix-C-Dolby-Atmos-Delivery-Codecs- When the audio encoder is configured with this setting, the source audio will be repackaged without being decoded and re-encoded. If the source is not DD+JOC, it will be replaced with silence.
                      drc_line_mode:
                        type: string
                        description: If specified, overrides the dynamic range control line mode. If unspecified and the source audio is AC-3 or EAC-3, the DRC line mode matches the input. If unspecified and the source audio is any other codec, the encoder uses an unspecified default which may change without notice.
                        enum:
                          - DRC_FILM_STANDARD
                          - DRC_FILM_LIGHT
                          - DRC_MUSIC_STANDARD
                          - DRC_MUSIC_LIGHT
                          - DRC_SPEECH
                        example: DRC_FILM_STANDARD
                      drc_rf_mode:
                        type: string
                        description: If specified, overrides the dynamic range control RF mode. If unspecified and the source audio is AC-3 or EAC-3, the DRC RF mode matches the input. If unspecified and the source audio is any other codec, the encoder uses an unspecified default which may change without notice.
                        enum:
                          - DRC_FILM_STANDARD
                          - DRC_FILM_LIGHT
                          - DRC_MUSIC_STANDARD
                          - DRC_MUSIC_LIGHT
                          - DRC_SPEECH
                        example: DRC_FILM_STANDARD
                      surround_phase_shift:
                        type: string
                        description: If specified, overrides whether surround phase shift is enabled. If unspecified and the source audio is AC-3 or EAC-3, the surround phase shift mode matches the input. If unspecified and the source audio is any other codec, the encoder uses an unspecified default which may change without notice.
                        enum:
                          - SURROUND_PHASE_SHIFT_ENABLED
                          - SURROUND_PHASE_SHIFT_DISABLED
                        example: SURROUND_PHASE_SHIFT_ENABLED
                    additionalProperties: false
                  id:
                    type: string
                    description: Encoder ID. IDs must be unique for all encoders. This ID is referenced when setting up playlist publishing.
                    example: aac128
                    minLength: 1
                  loudness:
                    type: object
                    description: Loudness normalization settings. Loudness configuration is required for non-passthrough AC-3 and EAC-3.
                    properties:
                      dialog_intel:
                        type: boolean
                        description: Enable Dialog Intelligence. Only supported for (E)AC-3 encoders. This may only be set if lkfs is explicitly configured to -24.
                      lkfs:
                        type: integer
                        description: Loudness normalization LKFS setting. Default value is -24.
                        format: int32
                      peak_limit:
                        type: number
                        description: Peak Limit. The only allowable value is -2.0. This field is soft-deprecated and will be unsupported in a future transcoder version. In the current transcoder version, the values 0.0 and -2.0 both produce the same configuration.
                        format: float
                    additionalProperties: false
                  sample_rate:
                    type: integer
                    description: 'Sample rate specifies the number of audio samples in hertz. The available options depend on the audio codec: AAC-LC supports 8000, 11025, 12000, 16000, 22050, 24000, 32000, 44100, 48000, 64000, 88200, and 96000. HE-AAC supports 16000, 22050, 24000, 32000, 44100, and 48000. AC3/EAC3 support only 48000.'
                    format: int32
                    example: 48000
                    minimum: 0
                    exclusiveMinimum: true
                  tag:
                    type: string
                    description: Used by the player to map audio tracks to a quadrant, which represents a single view in a multiview layout. This value is opaque and not used by Aventus.
                additionalProperties: false
              minItems: 1
            debug_overlay:
              type: boolean
              description: 'Deprecated: Do not use. Debug_overlay overlays debugging information from the transcoder into the top right of the video output. The overlay is burned into the video and will be visible to end-users if enabled. Do not enable on customer facing channels. Requires a transcoder restart if the state is changed. The default value is false, which disables the overlay. This setting is deprecated in favour of debug_overlays.'
              deprecated: true
            debug_overlays:
              type: object
              description: The debug_overlays specifies the position of the debugging overlay information from the transcoder into each video output. The overlay is burned into the video and will be visible to end-users if enabled. The default position value is OFF, which results in no debug overlay. Do not enable on customer facing channels. Requires a transcoder restart if the state is changed.
              properties:
                position:
                  type: string
                  description: Position of the debug overlay within the output frame.
                  enum:
                    - "OFF"
                    - TOP_LEFT
                    - TOP_RIGHT
                    - BOTTOM_LEFT
                    - BOTTOM_RIGHT
              additionalProperties: false
            dynamic_resources:
              type: object
              description: Configures external dynamic resources which will be downloaded by the transcoder and made available for use in the dynamic state API. Each key in the map is used to identify the resource from any location wishing to reference it (e.g. the dynamic state API).
              additionalProperties:
                type: object
                properties:
                  type:
                    type: string
                    description: Identifies the intended use of this resource.
                    enum:
                      - GRAPHIC
                      - FONT
                    example: GRAPHIC
                  url:
                    type: string
                    description: The URL from which the resource will be downloaded.
                    format: uri-reference
                    example: https://static-wbd-cdn.wbd.com/default_images/wbd-logo-card-1200x675_0.jpg
                additionalProperties: false
            feature_flags:
              type: array
              description: Feature flag strings enable experimental transcode features or functionality that are not yet or never will be promoted to the channeldoc model proper. Do not enable on customer facing channels.
              items:
                type: string
            id3_mode:
              type: string
              description: Specify how to process ID3 tags from the input source. If not specified, ID3 tags in the source will be ignored.
              enum:
                - PASSTHROUGH
            overlays:
              type: array
              description: List of overlays. An overlay is an image that will be rendered on top of the source video. Only one overlay is supported at the moment. If specified, the overlay will be always rendered unless a video slate is on.
              items:
                type: object
                properties:
                  image_url:
                    type: string
                    description: The URL of the image overlay. Only PNG is supported at the moment. The image's dimensions should match those of source for perfect pixel placement.
                    minLength: 1
                additionalProperties: false
              maxItems: 1
            resize_mode:
              type: string
              description: 'Deprecated: Do not use. Deprecated: This field was never implemented. See resize_mode on VideoEncoder instead.'
              enum:
                - STRETCH
                - LETTERBOX
                - CENTER_CROP
              deprecated: true
            segmenter:
              type: object
              description: Segmenter configures how video GOPs and segments get generated.
              properties:
                gop_duration_secs:
                  type: number
                  description: GOP (group of pictures) duration specifies the amount of time between I-frames. Shorter durations can lower quality slightly as each I-frame uses more bits than P- & B-frames but can provide a better seeking experience when enabling thumbnail encoders and/or I-Frame Only playlists.
                  format: double
                  example: 2
                  minimum: 0
                  exclusiveMinimum: true
                segment_duration_secs:
                  type: number
                  description: Segment duration specifies the target duration of a single segment. Segments shorter than this duration can occur at signaling boundaries. This value _must_ be a multiple of the GOP duration value.
                  format: double
                  example: 6
                  minimum: 0
                  exclusiveMinimum: true
                temi:
                  type: boolean
                  description: Include TEMI (Timeline and External Media Information ISO/IEC 13818-1:2019 Annex U) to mpeg-ts segments.
              additionalProperties: false
            subtitle_encoders:
              type: array
              description: Subtitle encoders specify how text-based subtitles are extracted into separate segments. They are not used to describe CEA 608 captions, which remain part of the video codec.
              items:
                type: object
                properties:
                  atsc_captions:
                    type: object
                    description: Extract subtitles from the ATSC caption encodings. The captions themselves are first sourced according to the Source.captions_source field. Only one of ['teletext', 'atsc_captions'] may be set.
                    properties:
                      cea608:
                        type: integer
                        description: 'If non-zero, decode captions from the CEA-608 logical channel number identified by this number. If zero, only CTA-708 captions will be decoded. The ''logical channel number'' refers to the CCx name commonly used in literature: - CC1 is the NTSC odd field subchannel 1, considered the primary caption stream. - CC2 is the NTSC odd field subchannel 2, considered the tertiary caption stream. - CC3 is the NTSC even field subchannel 1, considered the secondary caption stream. - CC4 is the NTSC even field subchannel 2, considered the quaternary caption stream.'
                        format: int32
                        example: 1
                        minimum: 0
                        maximum: 4
                      cta708:
                        type: integer
                        description: 'If non-zero, decode captions from the CTA-708 service identified by this number. If zero, only CEA-608 captions will be decoded. It is allowed to set both ''cta708'' and ''cea608''. In this case, the transcoder will decode both streams, and will use the CTA-708 data if the stream is active and fall back to CEA-608 otherwise. Fallback from CTA-708 to CEA-608 requires a timeout to elapse, but switching from CEA-608 to CTA-708 occurs the instant the CTA-708 stream becomes active. CTA-708 recommends the following correspondence between the two encodings: - CTA-708 service 1 == CEA-608 CC1 (primary captions) - CTA-708 service 2 == CEA-608 CC3 (secondary captions) - CTA-708 service 3 == CEA-608 CC2 (tertiary captions) - CTA-708 service 4 == CEA-608 CC4 (quaternary captions) However, some sources use an alternate convention where CTA-708 service 3 is the secondary caption service (corresponding to CC3) and CTA-708 service 2 is the tertiary caption service.'
                        format: int32
                        example: 1
                        minimum: 0
                        maximum: 63
                    additionalProperties: false
                  id:
                    type: string
                    description: Encoder ID. IDs must be unique for all encoders. This ID is referenced when setting up playlist publishing.
                    minLength: 1
                  language:
                    type: string
                    description: Language is the code for the language in which the subtitles are written.
                    example: en
                    minLength: 2
                  tag:
                    type: string
                    description: Used by the player to map text tracks to a quadrant, which represents a single view in a multiview layout. This value is opaque and not used by Aventus.
                  teletext:
                    type: object
                    description: Extract subtitles from an embedded Teletext stream. The teletext PID is determined automatically. Only one of ['teletext', 'atsc_captions'] may be set.
                    properties:
                      charset_set:
                        type: string
                        description: 'If set, forces interpretation of the National Option field to choose from character sets in this specific set of character sets. Determining the correct value for this configuration is non-trivial, but there are some guidelines. Usually, all languages in one Teletext stream will use the same charset set. If only one set can handle all the languages, it''s probably that one. Some of the sets roughly correspond to geopolitical divisions from the Cold War era: SET3 is roughly Yugoslavia plus Romania; SET4 is the rest of the former USSR/Warsaw Pact, including East Germany but excluding Poland; SET8 is Africa; SET10 is the Middle East. There does not seem to be any standard name for this configuration. The standard calls it ''the upper four bits of Triplet 1'', which is highly ambiguous and nonsensical outside of the context of that usage. The decoder ffmpeg uses calls it ''region'', but most of the sets cannot cleanly be described as any particular geographic region.'
                        enum:
                          - SET0
                          - SET1
                          - SET2
                          - SET3
                          - SET4
                          - SET6
                          - SET8
                          - SET10
                      language:
                        type: string
                        description: The three-letter language code declared in the Teletext descriptor in the source PMT. If the language is not found, the subtitles will be empty. language + type configuration is mutually exclusive with magazine + page configuration.
                        example: swe
                      magazine:
                        type: integer
                        description: The teletext magazine number where the subtitles are found. magazine + page configuration is mutually exclusive with language + type configuration.
                        format: int32
                        example: 1
                        minimum: 0
                      page:
                        type: integer
                        description: The teletext page number where the subtitles are found. magazine + page configuration is mutually exclusive with language + type configuration.
                        format: int32
                        example: 170
                        minimum: 0
                      page_type:
                        type: string
                        description: 'The Teletext page type declared in the Teletext descriptor in the source PMT. If this field is unset, it will be inferred from the ''usage'' field on the SubtitleEncoder using this table: SubtitleEncoder.CLOSED_CAPTIONS => TeletextSource.PAGE_TYPE_SUBTITLE_HEARING_IMPAIRED SubtitleEncoder.SUBTITLES => TeletextSource.PAGE_TYPE_SUBTITLE'
                        enum:
                          - PAGE_TYPE_INITIAL
                          - PAGE_TYPE_SUBTITLE
                          - PAGE_TYPE_ADDITIONAL_INFORMATION
                          - PAGE_TYPE_PROGRAMME_SCHEDULE
                          - PAGE_TYPE_SUBTITLE_HEARING_IMPAIRED
                    additionalProperties: false
                  usage:
                    type: string
                    description: Usage indicates how this encoder should be flagged in generated manifests.
                    enum:
                      - CLOSED_CAPTIONS
                      - SUBTITLES
                additionalProperties: false
            thumbnail_encoders:
              type: array
              description: Thumbnail encoders specify how to create image snapshots of the video stream.
              items:
                type: object
                properties:
                  height:
                    type: integer
                    description: Height specifies the thumbnail image height in pixels.
                    format: int32
                    example: 180
                    minimum: 0
                    exclusiveMinimum: true
                  id:
                    type: string
                    description: Encoder ID. IDs must be unique for all encoders. This ID is referenced when setting up playlist publishing.
                    minLength: 1
                  width:
                    type: integer
                    description: Width specifies the thumbnail image width in pixels.
                    format: int32
                    example: 320
                    minimum: 0
                    exclusiveMinimum: true
                additionalProperties: false
            video_encoders:
              type: array
              description: Video encoders specify video conversion settings, e.g. dimensions, codec, bitrate, etc.
              items:
                type: object
                properties:
                  bit_rate:
                    type: integer
                    description: Bit rate specifies the number in bits used per second. Higher values result in better video quality but bigger file sizes. For H.264 this value is the target of the constrained variable bit rate.
                    format: int32
                    example: 6000000
                    minimum: 1000
                    exclusiveMinimum: true
                  frame_rate:
                    type: string
                    description: Frame rate specifies the number of images that are shown per second when playing back the video. For the best quality playback, this should match or be a multiple of the input source video stream.
                    enum:
                      - FR_23_98
                      - FR_24
                      - FR_25
                      - FR_29_97
                      - FR_30
                      - FR_50
                      - FR_59_94
                      - FR_60
                    example: FR_60
                  h264:
                    type: object
                    description: Configure the encoder to use the H.264 codec. Only one of ['H264Settings', 'H265Settings'] may be set.
                    properties:
                      profile:
                        type: string
                        description: H.264 video profile, which defines various encoder features and settings. See https://en.wikipedia.org/wiki/Advanced_Video_Coding#Profiles for details.
                        enum:
                          - BASELINE
                          - MAIN
                          - HIGH
                          - HIGH_10
                          - HIGH_422
                    additionalProperties: false
                  h265:
                    type: object
                    description: Configure the encoder to use the H.265 codec. Only one of ['H264Settings', 'H265Settings'] may be set.
                    properties:
                      hdr:
                        type: object
                        description: Configure the HDR settings.
                        properties:
                          dolby_vision:
                            type: object
                            description: Only one of ['hdr10', 'dolby_vision'] may be set.
                            properties:
                              profile5:
                                type: object
                                description: Only one of ['profile5', 'profile81', 'profile84'] may be set.
                                additionalProperties: false
                              profile81:
                                type: object
                                description: Only one of ['profile5', 'profile81', 'profile84'] may be set.
                                properties:
                                  clli:
                                    type: object
                                    properties:
                                      max_cll:
                                        type: number
                                        description: Maximum Content Light Level (nits).
                                        format: double
                                        minimum: 0
                                        maximum: 10000
                                      max_fall:
                                        type: number
                                        description: Maximum Frame-Average Light Level (nits).
                                        format: double
                                        minimum: 0
                                        maximum: 10000
                                    additionalProperties: false
                                  level8:
                                    type: array
                                    description: Configures custom Level 8 metadata. Each target may be configured at most once. Unconfigured targets use the Dolby LDP SIDK defaults.
                                    items:
                                      type: object
                                      properties:
                                        clip_trim:
                                          type: number
                                          description: Control the clipping of whites. A positive value will clip highlights and bright whites less, while a negative value will clip more.
                                          format: double
                                          minimum: -1
                                          maximum: 1
                                        ms_weight_plus_one:
                                          type: number
                                          description: Amount of multiscale detail to apply. This is offset from the values used in Dolby documentation so that the Protobuf default of 0.0 corresponds to the Dolby default of -1.0. Values > 1.0 will retain more details when Dolby Vision is mapping down to a lower luminance. Values < 1.0 will lower detail contrast when Dolby Vision is mapping down to a lower luminance. The special value of 0.0 will disable multiscale detail.
                                          format: double
                                          minimum: 0
                                          maximum: 2
                                        target:
                                          type: string
                                          description: Identifies which Level 8 trim target is being configured.
                                          enum:
                                            - REC709_100NITS
                                            - BT2020_600NITS
                                            - BT2020_1000NITS
                                            - CUSTOM
                                        target_mid_contrast:
                                          type: number
                                          description: Controls the contrast of midtones. A positive value will increase the midtone contrast, while a negative value will decrease the midtone contrast.
                                          format: double
                                          minimum: -1
                                          maximum: 1
                                        trim_chroma_weight:
                                          type: number
                                          description: ChromaWeight to apply. Additional mapping for saturated colors. Higher value implies stronger effect.
                                          format: double
                                          minimum: -1
                                          maximum: 1
                                        trim_gain:
                                          type: number
                                          description: Gain to apply. This is a scaling factor for code values in a color component.
                                          format: double
                                          minimum: -1
                                          maximum: 1
                                        trim_gamma:
                                          type: number
                                          description: Gamma to apply. This is a power function in normalized code value in a color component.
                                          format: double
                                          minimum: -1
                                          maximum: 1
                                        trim_lift:
                                          type: number
                                          description: Lift to apply. This is an offset of code values in a color component.
                                          format: double
                                          minimum: -1
                                          maximum: 1
                                        trim_saturation_gain:
                                          type: number
                                          description: Saturation gain to apply. Gain on P and T components. Higher value implies stronger effect.
                                          format: double
                                          minimum: -1
                                          maximum: 1
                                      additionalProperties: false
                                  mdcv:
                                    type: object
                                    properties:
                                      color_profile:
                                        type: string
                                        description: Identifies color primaries and white point.
                                        enum:
                                          - BT2020
                                          - P3_D65
                                          - BT709
                                      max_dml:
                                        type: number
                                        description: Maximum display mastering luminance (nits). Must be greater than min_dml.
                                        format: double
                                        minimum: 0
                                        maximum: 10000
                                      min_dml:
                                        type: number
                                        description: Minimum display mastering luminance (nits).
                                        format: double
                                        minimum: 0
                                        maximum: 10000
                                    additionalProperties: false
                                additionalProperties: false
                              profile84:
                                type: object
                                description: Only one of ['profile5', 'profile81', 'profile84'] may be set.
                                additionalProperties: false
                            additionalProperties: false
                          hdr10:
                            type: object
                            description: Only one of ['hdr10', 'dolby_vision'] may be set.
                            properties:
                              clli:
                                type: object
                                properties:
                                  max_cll:
                                    type: number
                                    description: Maximum Content Light Level (nits).
                                    format: double
                                    minimum: 0
                                    maximum: 10000
                                  max_fall:
                                    type: number
                                    description: Maximum Frame-Average Light Level (nits).
                                    format: double
                                    minimum: 0
                                    maximum: 10000
                                additionalProperties: false
                              mdcv:
                                type: object
                                properties:
                                  color_profile:
                                    type: string
                                    description: Identifies color primaries and white point.
                                    enum:
                                      - BT2020
                                      - P3_D65
                                      - BT709
                                  max_dml:
                                    type: number
                                    description: Maximum display mastering luminance (nits). Must be greater than min_dml.
                                    format: double
                                    minimum: 0
                                    maximum: 10000
                                  min_dml:
                                    type: number
                                    description: Minimum display mastering luminance (nits).
                                    format: double
                                    minimum: 0
                                    maximum: 10000
                                additionalProperties: false
                            additionalProperties: false
                        additionalProperties: false
                      profile:
                        type: string
                        description: H.265 video profile, which defines various encoder features and settings. See https://en.wikipedia.org/wiki/High_Efficiency_Video_Coding#Profiles for details.
                        enum:
                          - MAIN
                          - MAIN_10
                    additionalProperties: false
                  height:
                    type: integer
                    description: 'Height specifies the video height in pixels. Must be a multiple of two. Valid resolution ranges, width x height are: H.264: 2x2 to 1920x1080 or 1080x1920 H.265: 130x34 to 3840x2160 or 2160x3840 The upper limit is dictated by the number of pixels.'
                    format: int32
                    example: 1080
                    minimum: 1
                    exclusiveMinimum: true
                  id:
                    type: string
                    description: Encoder ID. IDs must be unique for all encoders. This ID is referenced when setting up playlist publishing.
                    example: 1080p60
                    minLength: 1
                  resize_mode:
                    type: string
                    description: Indicates how to handle the case where the input aspect ratio does not match the aspect ratio of this VideoEncoder.
                    enum:
                      - STRETCH
                      - LETTERBOX
                      - CENTER_CROP
                  width:
                    type: integer
                    description: 'Width specifies the video width in pixels. Must be a multiple of two. Valid resolution ranges, width x height are: H.264: 2x2 to 1920x1080 or 1080x1920 H.265: 130x34 to 3840x2160 or 2160x3840 The upper limit is dictated by the number of pixels.'
                    format: int32
                    example: 1920
                    minimum: 1
                    exclusiveMinimum: true
                additionalProperties: false
              minItems: 1
          additionalProperties: false
      additionalProperties: false
      required:
        - ingest
  securitySchemes:
    authcode:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://sso.wbd.com/oauth2/aus125bl6q770za4g0x8/v1/authorize
          tokenUrl: https://sso.wbd.com/oauth2/aus125bl6q770za4g0x8/v1/token
    m2m:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://sso.wbd.com/oauth2/aus125bl6q770za4g0x8/v1/token
info:
  contact:
    name: ChannelAPI Support
    url: https://warnermedia.enterprise.slack.com/archives/C0648UND8SD
    email: live-control-plane-devs@wbd.com
  description: |
    This API provides a way to list, create, and run channels.

    Channels consist of inputs (ingest), transcoding settings like codecs and bitrates, and outputs (publishing).

    ## Quickstart

    You may use any HTTP client or [SDK](https://istreamlabs.github.io/docs/sdks/golang/) to talk to this API, but [Restish](https://rest.sh/) makes getting started easy via OpenAPI [auto-configuration extensions](https://rest.sh/#/openapi?id=autoconfiguration):

    ```bash
    # Install Restish
    $ brew install danielgtaylor/restish/restish

    # Configure Restish to talk to the API
    $ restish api configure isp https://api.istreamplanet.com

    # Get a list of orgs you can access
    $ restish isp list-orgs

    # Make a request to list channels
    $ restish isp list-org-channels $YOUR_ORG

    # Or, just use the URL. The API short name is allowed!
    $ restish isp/v2/$YOUR_ORG/channels

    # See available commands & details
    $ restish isp --help
    $ restish isp put-org-channel --help
    $ restish completion --help
    ```

    ### Example Channel

    You can create a basic example channel with defaults to get started quickly:

    ```bash
    # First, get and pick a source ID to use.
    $ restish isp list-sources

    # Now, create a basic example channel using that source!
    $ restish isp put-org-chanel $YOUR_ORG $CHANNEL_ID ingest.source.id: $YOUR_SOURCE_ID

    # Next, view the channel's full configuration
    $ restish isp get-org-channel $YOUR_ORG $CHANNEL_ID
    ```

    From there, you can start to edit the channel to change the encoding settings, publish points, etc to your liking:

    ```bash
    # Interactively edit the configuration using VS Code (with linting)
    $ export VISUAL="code --wait"
    $ restish edit -i isp/v2/$YOUR_ORG/channels/$CHANNEL_ID
    ```

    ### Templating

    Templating is handled client-side rather than at the server, which enables you to use whatever technology you prefer and manage your own templates and rendering process. For example, Restish can easily combine a file with command-line arguments for templated input:

    ```bash
    # Save an existing channel response body as a template file
    $ restish isp get-org-channel $YOUR_ORG $EXISTING_CHANNEL_ID -f body >template.json

    # Create a new channel with a different name, source, and publish point
    # using that saved template. The template is passed via STDIN while the
    # overrides/modifications are passed via arguments.
    $ restish isp put-org-channel $YOUR_ORG $NEW_CHANNEL_ID <template.json \
       ingest.source.id: $NEW_SOURCE, \
       publishing.publications[0].publish_points[0].http.publish_base_url: $NEW_PUB_URL
    ```

    ## General API Features

    ### OpenAPI

    The OpenAPI 3 spec for this API is avialable [here](./openapi.json).

    ### Authentication & Authorization

    Auth is handled via the WBD Okta offering using [RFC 7519](https://www.rfc-editor.org/rfc/rfc7519) JSON Web Tokens (JWT). Clients first make a request to the application's WBD Okta endpoint to get a token, and then provide that token in an `Authorization` header with each request to the API. Tokens are short lived and a new token must be fetched when the token expires.

    WBD Okta supports [RFC 6749](https://www.rfc-editor.org/rfc/rfc6749) OAuth 2.0, both the Authorization Code (with PKCE) and Client Credential grant flows. Use the following URLs:

    - https://sso.wbd.com/oauth2/aus125bl6q770za4g0x8/v1/authorize
    - https://sso.wbd.com/oauth2/aus125bl6q770za4g0x8/v1/token

    ### Errors

    Structured errors are returned using [RFC 7807](https://tools.ietf.org/html/rfc7807) Problem Details for HTTP APIs with an optional `errors` detail array that contains `message`, `location`, and `value` fields when relevant. The location is a path from the root of the request and can include `header`, `path`, `query`, or the `body`. Example error:

    ```json
    {
      "detail": "Error while processing input parameters",
      "errors": [
        {
          "location": "body.transcode.video_encoders.0.bit_rate",
          "message": "Must be greater than 0",
          "value": "0"
        }
      ],
      "status": 422,
      "title": "Unprocessable Entity"
    }
    ```

    ### Pagination & Links

    List calls use [RFC 5988](https://tools.ietf.org/html/rfc5988) Link relation headers. Clients *should* read this header and follow the `next` link to read all pages of results.

    Many resources have `self` links, which are URLs that can be followed to get details on the resource.

    Most resources have a `describedby` link, which links to a JSON Schema description of the resource.

    ### Content Negotiation

    Server-driven [content negotiation](https://developer.mozilla.org/en-US/docs/Web/HTTP/Content_negotiation) is supported for the following request headers:

    - `Accept-Encoding` content encoding: gzip ([RFC 1952](https://tools.ietf.org/html/rfc1952)) & Brotli ([RFC 7932](https://tools.ietf.org/html/rfc7932))
    - `Accept` content type: JSON ([RFC 8259](https://tools.ietf.org/html/rfc8259)), YAML, and CBOR ([RFC 8949](https://www.rfc-editor.org/rfc/rfc8949))

    ### Partial Updates

    HTTP patch support is available for partial updates using either [RFC 7386](https://www.rfc-editor.org/rfc/rfc7386) JSON Merge Patch or [RFC 6902](https://www.rfc-editor.org/rfc/rfc6902) JSON Patch. The `Content-Type` header you send determines which format will be used. If no content type is sent, then JSON Merge Patch is assumed.

    ### Distributed Writes & Conditional Requests

    [Conditional requests](https://developer.mozilla.org/en-US/docs/Web/HTTP/Conditional_requests) are supported, enabling you to only perform a write operation if the existing resource on the server matches the version or date you expect. This prevents one user/script/service from overwriting the changes of another. You may opt-in by setting the `If-Match` header to the resource's `ETag`, or the `If-Unmodified-Since` header to the resource's `Last-Modified` time.

    ### Rich Editing Support

    Resources in the API provide a `$schema` field which links to the JSON Schema describing the structure, field documentation, and basic validation rules of the resource. Many editors, such as [VS Code](https://code.visualstudio.com/docs/languages/json#_json-schemas-and-settings), use this to provide suggestions as you type, hover documentation, and document validation/linting.
  title: WBD Aventus Channels API
  version: 0.0.0
openapi: 3.0.3
paths:
  /cust/{customer-id}/prod/{product-id}/prog/{program-id}:
    get:
      deprecated: true
      description: |-
        <b>This route is deprecated and is subject to removal any time after `Thu, 06 Apr 2023 19:00:00 UTC`.</b>

        Get a program with an customer, product and program id. This API is deprecated, and it only returns
        the program from the west region.
      operationId: get-deprecated-program
      parameters:
        - name: customer-id
          description: Customer ID for a l2v request.  Used only for the deprecated legacy route support.
          in: path
          required: true
          schema:
            type: string
            description: Customer ID for a l2v request.  Used only for the deprecated legacy route support.
            pattern: ^([0-9]+)$
        - name: product-id
          description: Product ID for a l2v request
          in: path
          required: true
          schema:
            type: string
            description: Product ID for a l2v request
            pattern: ^([0-9]+)$
        - name: program-id
          description: Program ID for a l2v request.  Used only for the deprecated legacy route support.
          in: path
          required: true
          schema:
            type: string
            description: Program ID for a l2v request.  Used only for the deprecated legacy route support.
            maxLength: 60
            pattern: ^([a-zA-Z0-9]+(-*[a-zA-Z0-9]+)*)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeprecatedGetProgramResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get program
      tags:
        - Deprecated Live2VOD
  /cust/{customer-id}/prod/{product-id}/prog/{program-id}/vod:
    get:
      deprecated: true
      description: |-
        <b>This route is deprecated and is subject to removal any time after `Thu, 06 Apr 2023 19:00:00 UTC`. Use [list-org-vods](#get-/v2/-org-/channels/-channel-id-/vods) instead.</b>

        VODs can be listed after an appropriately configured channel is turned on for the first time.
        If a channel with existing VODs is turned off or deleted, the VODs will still be returned.
      operationId: list-deprecated-vods
      parameters:
        - name: customer-id
          description: Customer ID for a l2v request.  Used only for the deprecated legacy route support.
          in: path
          required: true
          schema:
            type: string
            description: Customer ID for a l2v request.  Used only for the deprecated legacy route support.
            pattern: ^([0-9]+)$
        - name: product-id
          description: Product ID for a l2v request
          in: path
          required: true
          schema:
            type: string
            description: Product ID for a l2v request
            pattern: ^([0-9]+)$
        - name: program-id
          description: Program ID for a l2v request.  Used only for the deprecated legacy route support.
          in: path
          required: true
          schema:
            type: string
            description: Program ID for a l2v request.  Used only for the deprecated legacy route support.
            maxLength: 60
            pattern: ^([a-zA-Z0-9]+(-*[a-zA-Z0-9]+)*)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeprecatedListVODsResponseList'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: List VODs
      tags:
        - Deprecated Live2VOD
  /cust/{customer-id}/prod/{product-id}/prog/{program-id}/vod/{vod_id}/clip:
    get:
      deprecated: true
      description: |-
        <b>This route is deprecated and is subject to removal any time after `Thu, 06 Apr 2023 19:00:00 UTC`. Use [list-org-clips](#get-/v2/-org-/channels/-channel-id-/clips) instead.</b>

        List all clips for the vod identified in the request.
      operationId: list-deprecated-clips
      parameters:
        - name: customer-id
          description: Customer ID for a l2v request.  Used only for the deprecated legacy route support.
          in: path
          required: true
          schema:
            type: string
            description: Customer ID for a l2v request.  Used only for the deprecated legacy route support.
            pattern: ^([0-9]+)$
        - name: product-id
          description: Product ID for a l2v request
          in: path
          required: true
          schema:
            type: string
            description: Product ID for a l2v request
            pattern: ^([0-9]+)$
        - name: program-id
          description: Program ID for a l2v request.  Used only for the deprecated legacy route support.
          in: path
          required: true
          schema:
            type: string
            description: Program ID for a l2v request.  Used only for the deprecated legacy route support.
            maxLength: 60
            pattern: ^([a-zA-Z0-9]+(-*[a-zA-Z0-9]+)*)$
        - name: vod_id
          description: ID for a VOD
          in: path
          required: true
          schema:
            type: string
            description: ID for a VOD
            pattern: ^([0-9]+)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeprecatedListClipsResponseList'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: List available clips
      tags:
        - Deprecated Live2VOD
  /cust/{customer-id}/prod/{product-id}/prog/{program-id}/vod/{vod_id}/clip/{clip-id}:
    get:
      deprecated: true
      description: |-
        <b>This route is deprecated and is subject to removal any time after `Thu, 06 Apr 2023 19:00:00 UTC`.</b>

        Get the clip with the clip id sent in the request.
      operationId: get-deprecated-clip
      parameters:
        - name: customer-id
          description: Customer ID for a l2v request.  Used only for the deprecated legacy route support.
          in: path
          required: true
          schema:
            type: string
            description: Customer ID for a l2v request.  Used only for the deprecated legacy route support.
            pattern: ^([0-9]+)$
        - name: product-id
          description: Product ID for a l2v request
          in: path
          required: true
          schema:
            type: string
            description: Product ID for a l2v request
            pattern: ^([0-9]+)$
        - name: program-id
          description: Program ID for a l2v request.  Used only for the deprecated legacy route support.
          in: path
          required: true
          schema:
            type: string
            description: Program ID for a l2v request.  Used only for the deprecated legacy route support.
            maxLength: 60
            pattern: ^([a-zA-Z0-9]+(-*[a-zA-Z0-9]+)*)$
        - name: vod_id
          description: ID for a VOD
          in: path
          required: true
          schema:
            type: string
            description: ID for a VOD
            pattern: ^([0-9]+)$
        - name: clip-id
          description: ID for a Clip
          in: path
          required: true
          schema:
            type: string
            description: ID for a Clip
            pattern: ^([0-9]+)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeprecatedGetClipResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get clip
      tags:
        - Deprecated Live2VOD
  /cust/{customer-id}/prod/{product-id}/prog/{program-id}/vod/{vod_id}/clip/{clip-id}/_makemp4:
    post:
      deprecated: true
      description: |-
        <b>This route is deprecated and is subject to removal any time after `Thu, 06 Apr 2023 19:00:00 UTC`. Use [post-org-make-mp4](#post-/v2/-org-/channels/-channel-id-/vods/-vod_id-/clips/-clip-id-/makemp4) instead.</b>

        Create a mp4 entity for the clip within a vod
      operationId: deprecated-clip-make-mp4
      parameters:
        - name: customer-id
          description: Customer ID for a l2v request.  Used only for the deprecated legacy route support.
          in: path
          required: true
          schema:
            type: string
            description: Customer ID for a l2v request.  Used only for the deprecated legacy route support.
            pattern: ^([0-9]+)$
        - name: product-id
          description: Product ID for a l2v request
          in: path
          required: true
          schema:
            type: string
            description: Product ID for a l2v request
            pattern: ^([0-9]+)$
        - name: program-id
          description: Program ID for a l2v request.  Used only for the deprecated legacy route support.
          in: path
          required: true
          schema:
            type: string
            description: Program ID for a l2v request.  Used only for the deprecated legacy route support.
            maxLength: 60
            pattern: ^([a-zA-Z0-9]+(-*[a-zA-Z0-9]+)*)$
        - name: vod_id
          description: ID for a VOD
          in: path
          required: true
          schema:
            type: string
            description: ID for a VOD
            pattern: ^([0-9]+)$
        - name: clip-id
          description: ID for a Clip
          in: path
          required: true
          schema:
            type: string
            description: ID for a Clip
            pattern: ^([0-9]+)$
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeprecatedMakeMP4Request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeprecatedMakeMP4Response'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "408":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Timeout
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Entity Too Large
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Create MP4 for Clip
      tags:
        - Deprecated Live2VOD
  /cust/{customer-id}/prod/{product-id}/prog/{program-id}/vod/{vod_id}/clip/{clip-id}/clipManifest:
    get:
      deprecated: true
      description: |-
        <b>This route is deprecated and is subject to removal any time after `Thu, 06 Apr 2023 19:00:00 UTC`.</b>

        Retrieve List of Manifests for a given Clip
      operationId: deprecated-get-clip-manifest
      parameters:
        - name: customer-id
          description: Customer ID for a l2v request.  Used only for the deprecated legacy route support.
          in: path
          required: true
          schema:
            type: string
            description: Customer ID for a l2v request.  Used only for the deprecated legacy route support.
            pattern: ^([0-9]+)$
        - name: product-id
          description: Product ID for a l2v request
          in: path
          required: true
          schema:
            type: string
            description: Product ID for a l2v request
            pattern: ^([0-9]+)$
        - name: program-id
          description: Program ID for a l2v request.  Used only for the deprecated legacy route support.
          in: path
          required: true
          schema:
            type: string
            description: Program ID for a l2v request.  Used only for the deprecated legacy route support.
            maxLength: 60
            pattern: ^([a-zA-Z0-9]+(-*[a-zA-Z0-9]+)*)$
        - name: vod_id
          description: ID for a VOD
          in: path
          required: true
          schema:
            type: string
            description: ID for a VOD
            pattern: ^([0-9]+)$
        - name: clip-id
          description: ID for a Clip
          in: path
          required: true
          schema:
            type: string
            description: ID for a Clip
            pattern: ^([0-9]+)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeprecatedGetClipManifestsResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get Manifests for Clip
      tags:
        - Deprecated Live2VOD
  /cust/{customer-id}/prod/{product-id}/prog/{program-id}/vod/{vod_id}/clip/{clip-id}/mp4url:
    get:
      deprecated: true
      description: |-
        <b>This route is deprecated and is subject to removal any time after `Thu, 06 Apr 2023 19:00:00 UTC`. Use [get-org-mp4-url](#get-/v2/-org-/channels/-channel-id-/vods/-vod_id-/clips/-clip-id-/mp4url) instead.</b>

        Retrieves a playback URL for the MP4 playback for a clip if available.
      operationId: deprecated-clip-get-mp4
      parameters:
        - name: customer-id
          description: Customer ID for a l2v request.  Used only for the deprecated legacy route support.
          in: path
          required: true
          schema:
            type: string
            description: Customer ID for a l2v request.  Used only for the deprecated legacy route support.
            pattern: ^([0-9]+)$
        - name: product-id
          description: Product ID for a l2v request
          in: path
          required: true
          schema:
            type: string
            description: Product ID for a l2v request
            pattern: ^([0-9]+)$
        - name: program-id
          description: Program ID for a l2v request.  Used only for the deprecated legacy route support.
          in: path
          required: true
          schema:
            type: string
            description: Program ID for a l2v request.  Used only for the deprecated legacy route support.
            maxLength: 60
            pattern: ^([a-zA-Z0-9]+(-*[a-zA-Z0-9]+)*)$
        - name: vod_id
          description: ID for a VOD
          in: path
          required: true
          schema:
            type: string
            description: ID for a VOD
            pattern: ^([0-9]+)$
        - name: clip-id
          description: ID for a Clip
          in: path
          required: true
          schema:
            type: string
            description: ID for a Clip
            pattern: ^([0-9]+)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeprecatedGetMp4UrlResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get MP4 URL
      tags:
        - Deprecated Live2VOD
  /cust/{customer-id}/prod/{product-id}/prog/{program-id}/vod/{vod_id}/clip/{clip-id}/programtime:
    get:
      deprecated: true
      description: |-
        <b>This route is deprecated and is subject to removal any time after `Thu, 06 Apr 2023 19:00:00 UTC`. Use [get-org-vod-clip-program-time](#get-/v2/-org-/channels/-channel-id-/vods/-vod_id-/clips/-clip-id-/programtime) instead.</b>

        Retrieves Program Time for a given Clip
      operationId: deprecated-clip-get-program-time
      parameters:
        - name: customer-id
          description: Customer ID for a l2v request.  Used only for the deprecated legacy route support.
          in: path
          required: true
          schema:
            type: string
            description: Customer ID for a l2v request.  Used only for the deprecated legacy route support.
            pattern: ^([0-9]+)$
        - name: product-id
          description: Product ID for a l2v request
          in: path
          required: true
          schema:
            type: string
            description: Product ID for a l2v request
            pattern: ^([0-9]+)$
        - name: program-id
          description: Program ID for a l2v request.  Used only for the deprecated legacy route support.
          in: path
          required: true
          schema:
            type: string
            description: Program ID for a l2v request.  Used only for the deprecated legacy route support.
            maxLength: 60
            pattern: ^([a-zA-Z0-9]+(-*[a-zA-Z0-9]+)*)$
        - name: vod_id
          description: ID for a VOD
          in: path
          required: true
          schema:
            type: string
            description: ID for a VOD
            pattern: ^([0-9]+)$
        - name: clip-id
          description: ID for a Clip
          in: path
          required: true
          schema:
            type: string
            description: ID for a Clip
            pattern: ^([0-9]+)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeprecatedGetProgramTimeResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Deprecation:
              description: Deprecation
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get Program Time
      tags:
        - Deprecated Live2VOD
  /v2/channels:
    get:
      description: Get a list of your channels.
      operationId: list-channels
      parameters:
        - name: cursor
          description: Current page cursor
          in: query
          schema:
            type: string
            description: Current page cursor
          explode: false
        - name: page_size
          description: Number of items to return
          in: query
          schema:
            type: integer
            description: Number of items to return
            format: int32
            default: 100
            minimum: 1
            maximum: 100
          explode: false
        - name: q
          description: Search query to match against for filtering a list of channels. This searches the channel ID, name, labels, and source ID.
          in: query
          schema:
            type: string
            description: Search query to match against for filtering a list of channels. This searches the channel ID, name, labels, and source ID.
            minLength: 3
            maxLength: 256
            pattern: ^[\w -]+$
          explode: false
          x-cli-name: query
        - name: desired_state
          description: List channels that are ON or OFF
          in: query
          schema:
            type: string
            description: List channels that are ON or OFF
            enum:
              - "ON"
              - "OFF"
          explode: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummaryList2'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: List channels
      tags:
        - Channels
  /v2/orgs:
    get:
      description: Get a list of organizations that you can access.
      operationId: list-orgs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSummaryList'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: List organizations
      tags:
        - Organizations
  /v2/tasks:
    get:
      description: List all L2V tasks.
      operationId: list-tasks
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTasksResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: List Tasks
      tags:
        - Live2VOD for Organization
  /v2/{org}/channels:
    get:
      description: Get a list of your channels.
      operationId: list-org-channels
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: cursor
          description: Current page cursor
          in: query
          schema:
            type: string
            description: Current page cursor
          explode: false
        - name: page_size
          description: Number of items to return
          in: query
          schema:
            type: integer
            description: Number of items to return
            format: int32
            default: 100
            minimum: 1
            maximum: 100
          explode: false
        - name: q
          description: Search query to match against for filtering a list of channels. This searches the channel ID, name, labels, and source ID.
          in: query
          schema:
            type: string
            description: Search query to match against for filtering a list of channels. This searches the channel ID, name, labels, and source ID.
            minLength: 3
            maxLength: 256
            pattern: ^[\w -]+$
          explode: false
          x-cli-name: query
        - name: desired_state
          description: List channels that are ON or OFF
          in: query
          schema:
            type: string
            description: List channels that are ON or OFF
            enum:
              - "ON"
              - "OFF"
          explode: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummaryList2'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: List channels
      tags:
        - Channels for Organization
  /v2/{org}/channels/{channel-id}:
    delete:
      description: |
        Delete a channel and stop publishing. This action is idempotent.

        End distributions are automatically sent when attempting to delete an `ON` channel. To delete a channel without sending end distribution:
        1. The channel's DesiredState must be updated to `OFF`See [put-org-channel-desired-state](#put-/v2/-org-/channels/-channel-id-/desired-state) for more details.
        2. Once the channel is `OFF`, the channel can be deleted with the flag`--end_playlist=false`.
      operationId: delete-org-channel
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: If-Match
          description: Succeeds if the server's resource matches one of the passed values.
          in: header
          schema:
            type: array
            description: Succeeds if the server's resource matches one of the passed values.
            items:
              type: string
        - name: If-None-Match
          description: Succeeds if the server's resource matches none of the passed values. On writes, the special value * may be used to match any existing value.
          in: header
          schema:
            type: array
            description: Succeeds if the server's resource matches none of the passed values. On writes, the special value * may be used to match any existing value.
            items:
              type: string
        - name: If-Modified-Since
          description: Succeeds if the server's resource date is more recent than the passed date.
          in: header
          schema:
            type: string
            description: Succeeds if the server's resource date is more recent than the passed date.
            format: date-time
        - name: If-Unmodified-Since
          description: Succeeds if the server's resource date is older or the same as the passed date.
          in: header
          schema:
            type: string
            description: Succeeds if the server's resource date is older or the same as the passed date.
            format: date-time
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "412":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Precondition Failed
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Delete channel
      tags:
        - Channels for Organization
    get:
      description: Get a channel's configuration
      operationId: get-org-channel
      parameters:
        - name: If-Match
          description: Succeeds if the server's resource matches one of the passed values.
          in: header
          schema:
            type: array
            description: Succeeds if the server's resource matches one of the passed values.
            items:
              type: string
        - name: If-None-Match
          description: Succeeds if the server's resource matches none of the passed values. On writes, the special value * may be used to match any existing value.
          in: header
          schema:
            type: array
            description: Succeeds if the server's resource matches none of the passed values. On writes, the special value * may be used to match any existing value.
            items:
              type: string
        - name: If-Modified-Since
          description: Succeeds if the server's resource date is more recent than the passed date.
          in: header
          schema:
            type: string
            description: Succeeds if the server's resource date is more recent than the passed date.
            format: date-time
        - name: If-Unmodified-Since
          description: Succeeds if the server's resource date is older or the same as the passed date.
          in: header
          schema:
            type: string
            description: Succeeds if the server's resource date is older or the same as the passed date.
            format: date-time
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: OK
          headers:
            Cache-Control:
              description: Cache-Control
              schema:
                type: string
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Last-Modified:
              description: Last-Modified
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
            Managed-By:
              description: Managed-By
              schema:
                type: string
        "304":
          description: Not Modified
          headers:
            Managed-By:
              description: Managed-By
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get Channel
      tags:
        - Channels for Organization
    patch:
      description: Partial update operation supporting both JSON Merge Patch & JSON Patch updates.
      operationId: patch-org-channel
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: validate_only
          description: Validate request but do not otherwise process it
          in: query
          schema:
            type: boolean
            description: Validate request but do not otherwise process it
          explode: false
        - name: If-Match
          description: Succeeds if the server's resource matches one of the passed values.
          in: header
          schema:
            type: array
            description: Succeeds if the server's resource matches one of the passed values.
            items:
              type: string
        - name: If-None-Match
          description: Succeeds if the server's resource matches none of the passed values. On writes, the special value * may be used to match any existing value.
          in: header
          schema:
            type: array
            description: Succeeds if the server's resource matches none of the passed values. On writes, the special value * may be used to match any existing value.
            items:
              type: string
        - name: If-Modified-Since
          description: Succeeds if the server's resource date is more recent than the passed date.
          in: header
          schema:
            type: string
            description: Succeeds if the server's resource date is more recent than the passed date.
            format: date-time
        - name: If-Unmodified-Since
          description: Succeeds if the server's resource date is older or the same as the passed date.
          in: header
          schema:
            type: string
            description: Succeeds if the server's resource date is older or the same as the passed date.
            format: date-time
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/patch-org-channel-request2'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/patch-org-channel-request'
      responses:
        "201":
          description: Created
          headers:
            ETag:
              description: ETag
              schema:
                type: string
            Last-Modified:
              description: Last-Modified
              schema:
                type: string
            Location:
              description: Location
              schema:
                type: string
        "204":
          description: No Content
          headers:
            ETag:
              description: ETag
              schema:
                type: string
            Last-Modified:
              description: Last-Modified
              schema:
                type: string
            Location:
              description: Location
              schema:
                type: string
        "304":
          description: Not Modified
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "408":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Timeout
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "412":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Precondition Failed
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Entity Too Large
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "415":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unsupported Media Type
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Patch org-channel
      tags:
        - Channels for Organization
    put:
      description: Create or update an existing channel configuration.
      operationId: put-org-channel
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: validate_only
          description: Validate request but do not otherwise process it
          in: query
          schema:
            type: boolean
            description: Validate request but do not otherwise process it
          explode: false
        - name: If-Match
          description: Succeeds if the server's resource matches one of the passed values.
          in: header
          schema:
            type: array
            description: Succeeds if the server's resource matches one of the passed values.
            items:
              type: string
        - name: If-None-Match
          description: Succeeds if the server's resource matches none of the passed values. On writes, the special value * may be used to match any existing value.
          in: header
          schema:
            type: array
            description: Succeeds if the server's resource matches none of the passed values. On writes, the special value * may be used to match any existing value.
            items:
              type: string
        - name: If-Modified-Since
          description: Succeeds if the server's resource date is more recent than the passed date.
          in: header
          schema:
            type: string
            description: Succeeds if the server's resource date is more recent than the passed date.
            format: date-time
        - name: If-Unmodified-Since
          description: Succeeds if the server's resource date is older or the same as the passed date.
          in: header
          schema:
            type: string
            description: Succeeds if the server's resource date is older or the same as the passed date.
            format: date-time
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/put-org-channel-request'
      responses:
        "201":
          description: Created
          headers:
            ETag:
              description: ETag
              schema:
                type: string
            Last-Modified:
              description: Last-Modified
              schema:
                type: string
            Location:
              description: Location
              schema:
                type: string
        "204":
          description: No Content
          headers:
            ETag:
              description: ETag
              schema:
                type: string
            Last-Modified:
              description: Last-Modified
              schema:
                type: string
            Location:
              description: Location
              schema:
                type: string
        "304":
          description: Not Modified
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "408":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Timeout
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "412":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Precondition Failed
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Entity Too Large
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Create/Update channel
      tags:
        - Channels for Organization
  /v2/{org}/channels/{channel-id}/beta/logs/signaling:
    get:
      description: |-
        Warning: This is deprecated beta functionality and is unstable and may change, break, or be removed in the future without notice.

        Returns the signalling history for a channel.
      operationId: get-org-signal-logs
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: from
          description: ISO 8601 UTC timestamp for start range of date filtering
          in: query
          schema:
            type: string
            description: ISO 8601 UTC timestamp for start range of date filtering
            format: date-time
          explode: false
        - name: to
          description: ISO 8601 UTC timestamp for end range of date filtering
          in: query
          schema:
            type: string
            description: ISO 8601 UTC timestamp for end range of date filtering
            format: date-time
          explode: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignalingLogList'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Acceptable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "424":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Failed Dependency
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Signal Logs
      tags:
        - Channel Operations for Organization
  /v2/{org}/channels/{channel-id}/clips:
    get:
      description: List all clips for all VODs of the channel identified in the request.
      operationId: list-org-clips
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClipsResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: List available clips
      tags:
        - Live2VOD for Organization
    post:
      description: Starts a job to create a clip for all VODs for the channel identified in the request.
      operationId: post-org-clip
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostClipRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostClipResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "408":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Timeout
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Entity Too Large
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Make a clip for all VODs
      tags:
        - Live2VOD for Organization
  /v2/{org}/channels/{channel-id}/clips/{clip-id}/archive:
    post:
      description: Uses archive settings configured in Live2VOD for the organization and on the channel.
      operationId: post-org-clip-archive
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: clip-id
          description: ID for a Clip
          in: path
          required: true
          schema:
            type: string
            description: ID for a Clip
            pattern: ^([0-9]+)$
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostClipArchiveRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostClipArchiveResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "408":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Timeout
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Entity Too Large
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Archive a clip
      tags:
        - Live2VOD for Organization
  /v2/{org}/channels/{channel-id}/clips/{clip-id}/playurl:
    get:
      description: Searches for an organization's VODs with a given ClipID and then returns a url for playback.
      operationId: get-org-clip-playurl
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: clip-id
          description: ID for a Clip
          in: path
          required: true
          schema:
            type: string
            description: ID for a Clip
            pattern: ^([0-9]+)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayURLResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get a playurl for a clip
      tags:
        - Live2VOD for Organization
  /v2/{org}/channels/{channel-id}/desired-state:
    put:
      operationId: put-org-channel-desired-state
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: end_playlist
          description: Deprecated, server ignores all values. Will be removed from API once all clients are confirmed to not break.
          in: query
          schema:
            type: boolean
            description: Deprecated, server ignores all values. Will be removed from API once all clients are confirmed to not break.
            default: true
          explode: false
        - name: If-Match
          description: Succeeds if the server's resource matches one of the passed values.
          in: header
          schema:
            type: array
            description: Succeeds if the server's resource matches one of the passed values.
            items:
              type: string
        - name: If-None-Match
          description: Succeeds if the server's resource matches none of the passed values. On writes, the special value * may be used to match any existing value.
          in: header
          schema:
            type: array
            description: Succeeds if the server's resource matches none of the passed values. On writes, the special value * may be used to match any existing value.
            items:
              type: string
        - name: If-Modified-Since
          description: Succeeds if the server's resource date is more recent than the passed date.
          in: header
          schema:
            type: string
            description: Succeeds if the server's resource date is more recent than the passed date.
            format: date-time
        - name: If-Unmodified-Since
          description: Succeeds if the server's resource date is older or the same as the passed date.
          in: header
          schema:
            type: string
            description: Succeeds if the server's resource date is older or the same as the passed date.
            format: date-time
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/desiredStateBody'
      responses:
        "204":
          description: No Content
          headers:
            ETag:
              description: ETag
              schema:
                type: string
            Last-Modified:
              description: Last-Modified
              schema:
                type: string
            Location:
              description: Location
              schema:
                type: string
        "304":
          description: Not Modified
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "408":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Timeout
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "412":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Precondition Failed
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Entity Too Large
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "429":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Too Many Requests
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Update Channel DesiredState to ON/OFF
      tags:
        - Channels for Organization
  /v2/{org}/channels/{channel-id}/dvr-window:
    delete:
      description: Clears the DVR window for the channel by removing all video segments in the manifest from before the request.  This sets the earliest time a player can rewind to this point.
      operationId: clear-org-dvr-window
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "424":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Failed Dependency
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Clear DVR Window
      tags:
        - Channel Operations for Organization
  /v2/{org}/channels/{channel-id}/fer:
    put:
      description: Uses archive settings from the request to archive a FER
      operationId: put-org-channel-fer
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchiveFERRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveFERResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "408":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Timeout
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Entity Too Large
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Archive a FER
      tags:
        - Live2VOD for Organization
  /v2/{org}/channels/{channel-id}/id3:
    post:
      description: Inserts the provided UTF-8 text metadata in the output stream embedded in a TXXX frame of a ID3 tag.
      operationId: insert-org-id3
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: Accept
          description: List of accepted Content-Type headers
          in: header
          schema:
            type: string
            description: List of accepted Content-Type headers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertMetadataRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsertMetadataResult'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "408":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Timeout
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Entity Too Large
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "424":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Failed Dependency
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Insert ID3
      tags:
        - Channel Operations for Organization
  /v2/{org}/channels/{channel-id}/ingest-pin:
    delete:
      description: |-
        Remove the preferrence for primary or secondary ingest feed from the channel's transcoder.
        Automated source failover based on feed quality will be resumed.
      operationId: org-unpin-ingest
      parameters:
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Acceptable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "424":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Failed Dependency
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Unpin Ingest
      tags:
        - Channel Operations for Organization
    put:
      description: |
        Pin the channel's transcoder to prefer either primary or secondary ingest feeds.
        Note that this will disable some automated ingest failover that is based on the quality of the feeds.
      operationId: org-pin-ingest
      parameters:
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinSourceRequest'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Acceptable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "408":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Timeout
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Entity Too Large
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "424":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Failed Dependency
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Pin Ingest
      tags:
        - Channel Operations for Organization
  /v2/{org}/channels/{channel-id}/playback:
    get:
      description: Get a channel's playback configuration
      operationId: get-org-playback-config
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelPlayback'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get Channel Playback Config
      tags:
        - Channels for Organization
  /v2/{org}/channels/{channel-id}/preview-image:
    get:
      description: 'Get a static image of what your channel is outputting.  Valid Accept headers are: image/jpeg'
      operationId: get-org-preview-image
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: Accept
          description: List of accepted Content-Type headers
          in: header
          schema:
            type: string
            description: List of accepted Content-Type headers
      responses:
        "200":
          description: OK
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Acceptable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "424":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Failed Dependency
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get Preview Image
      tags:
        - Channel Operations for Organization
  /v2/{org}/channels/{channel-id}/preview-streams:
    get:
      description: |-
        Get a default url that links to a preview of the channel. Additionally, all possible
        video and audio tracks are provided back and can be interchanged in the given url.
      operationId: org-preview-streams
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPreviewStreamsResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Acceptable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "424":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Failed Dependency
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get Preview Streams
      tags:
        - Channel Operations for Organization
  /v2/{org}/channels/{channel-id}/scte35:
    post:
      description: Inserts a SCTE-35 formatted binary payload into the channel.
      operationId: insert-org-scte35
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scte35'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "408":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Timeout
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Entity Too Large
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "424":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Failed Dependency
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Insert SCTE-35
      tags:
        - Channel Operations for Organization
  /v2/{org}/channels/{channel-id}/signals:
    get:
      description: Returns the active signals for a channel.
      operationId: get-org-signals
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentList'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Acceptable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "424":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Failed Dependency
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get Signals
      tags:
        - Channel Operations for Organization
    post:
      description: |+
        Inserts an out-of-band signal into a channel. A signal represents a program signal like chapter-start or ad-end. Signals operate on signaling segments. For example, a chapter-start will result in a new active Chapter segment, while a chapter-end with the same event_id will end it. Signals loosely map to SCTE-35 time_signals and splice_inserts.

        The breakaway and resumption signal types are only valid with program segments.

        The required event_id identifies the active signaling segment. Use the same event_id for both start and end to reference the same segment.

        ### Program Start

        Inserts a SCTE-35 program start message into the channel with the given event ID. Corresponding calls to end the program must use the same event ID.

        Example input body:

        ```json
        [
        	{
        		"event_id": 0,
        		"segment_type": "program",
        		"signal_type": "start"
        	}
        ]
        ```

        ### Program End

        Inserts a SCTE-35 program end message into the channel with the given event ID. The event ID must match the one given during program start.

        Example input body:

        ```json
        [
        	{
        		"event_id": 0,
        		"segment_type": "program",
        		"signal_type": "end"
        	}
        ]
        ```

        ### Slate In

        Replaces the current video source with a video slate. An optional duration may be passed to automatically remove the slate after some time, otherwise the slate will remain until removed via a slate out signal.


        The following table describes how video slates are supported and recommended attributes. Image slates are **NOT** supported.

        <table>
        	<tr>
        		<th>Attribute</td>
        		<th>Supported</td>
        		<th>Recommended</td>
        	</tr>
        	<tr>
        		<td>Max File Size</td>
        		<td>100MB (104,857,600 bytes)</td>
        		<td></td>
        	</tr>
        	<tr>
        		<td>Total Duration</td>
        		<td>Minimum: 3s</td>
        		<td>10-30s</td>
        	</tr>
        	<tr>
        		<td>Container</td>
        		<td>MPEG-TS</td>
        		<td></td>
        	</tr>
        	<tr>
        		<td>Resolution (Recommended)</td>
        		<td>Up to 4k (2160p)</td>
        		<td>720p</td>
        	</tr>
        	<tr>
        		<td>Framerate</td>
        		<td>25i, 25p, 29.97i, 30p, 60p</td>
        		<td>30p</td>
        	</tr>
        	<tr>
        		<td>Video Codec</td>
        		<td>
        			- H.264<br/>
        			- H.265<br/>
        			- MPEG2<br/>
        		</td>
        		<td>H.264 Main or High profile</td>
        	</tr>
        	<tr>
        		<td>Audio Codec</td>
        		<td>
        			- AAC-LC<br/>
        			- AC-3<br/>
        			- E-AC-3<br/>
        			- MPEG1|2 Audio<br/>
        		</td>
        		<td>48KHz AAC-LC</td>
        	</tr>
        </table>

        Additional slate requirements:
        <ul>
            <li>The slate MUST contain at least 3 seconds of supported audio and video.</li>
            <li>The delta between the duration of audio and video MUST be less than 3 seconds.</li>
            <li>The delta between the timestamps of the first audio and the first video samples MUST be less than 3 seconds.
        		<ul>
                	<li>Audio and video duration measurement begins after the first IDR in the file.</li>
        		</ul>
        	</li>
        	<li>The MPEG2TS PMT MUST NOT change for the duration of the file.
        		<ul>
                	<li>Ex. PIDs, audio codec, video codec, etc. must be the same throughout.</li>
        		</ul>
        	</li>
        </ul>

        Example input body:

        ```json
        [
        	{
        		"event_id": 0,
        		"segment_type": "slate",
        		"signal_type": "start",
        		"slate_uri": "https://example.com/slate.ts"
        	}
        ]
        ```
        	
        ### Slate Out

        Removes any active slate and shows the source video content.

        Example input body:

        ```json
        [
        	{
        		"event_id": 0,
        		"segment_type": "slate",
        		"signal_type": "end"
        	}
        ]
        ```

        ### Splice Insert Start

        Inserts a splice opportunity into the channel for a given duration. Can optionally include UPIDs and a slate URL to select the content to splice into the channel.

        Example input body:

        ```json
        [
        	{
        		"event_id": 0,
        		"segment_type": "splice_insert",
        		"signal_type": "start",
        		"duration": 25000,
        		"slate_uri": "https://example.com/slate.ts"
        	}
        ]
        ```

        ### Splice Insert End

        Removes an active splice signaling segment from the channel.

        Example input body:

        ```json
        [
        	{
        		"event_id": 0,
        		"segment_type": "splice_insert",
        		"signal_type": "end"
        	}
        ]
        ```

      operationId: post-org-signals
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericSignalList'
      responses:
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSignalResultList'
          description: Multi-status response; see body for details
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "408":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Timeout
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Entity Too Large
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "424":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Failed Dependency
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Generic Signal
      tags:
        - Channel Operations for Organization
  /v2/{org}/channels/{channel-id}/syndication:
    post:
      description: Uses archive settings from the request to archive syndication files (mp4/wav) files.
      operationId: post-org-channel-syndication
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicSyndicationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicSyndicationResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "408":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Timeout
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Entity Too Large
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Syndication (MP4's/WAV's) creation using Aventus Dynamic Manifest Origin.
      tags:
        - Live2VOD for Organization
  /v2/{org}/channels/{channel-id}/tasks:
    get:
      description: List all L2V tasks for the channel identified in the request.
      operationId: get-org-program-tasks
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: cursor
          description: Current page cursor
          in: query
          schema:
            type: string
            description: Current page cursor
          explode: false
        - name: page_size
          description: Number of items to return
          in: query
          schema:
            type: integer
            description: Number of items to return
            format: int32
            default: 100
            minimum: 1
            maximum: 100
          explode: false
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get Tasks for Program
      tags:
        - Live2VOD for Organization
  /v2/{org}/channels/{channel-id}/tasks/{task-id}:
    get:
      description: Get a L2V task with the taskID.
      operationId: get-org-task
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: task-id
          description: Task ID for a l2v request
          in: path
          required: true
          schema:
            type: string
            description: Task ID for a l2v request
            pattern: ^([a-zA-Z0-9_-]*)
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaskResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get Task
      tags:
        - Live2VOD for Organization
  /v2/{org}/channels/{channel-id}/tasks/{task-id}/cancel:
    post:
      description: Cancel a L2V task with the taskID
      operationId: post-org-task-cancel
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: task-id
          description: Task ID for a l2v request
          in: path
          required: true
          schema:
            type: string
            description: Task ID for a l2v request
            pattern: ^([a-zA-Z0-9_-]*)
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelTaskResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Cancel Task
      tags:
        - Live2VOD for Organization
  /v2/{org}/channels/{channel-id}/tasks/{task-id}/retry:
    post:
      description: Retry a L2V task with the taskID.
      operationId: post-org-task-retry
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: task-id
          description: Task ID for a l2v request
          in: path
          required: true
          schema:
            type: string
            description: Task ID for a l2v request
            pattern: ^([a-zA-Z0-9_-]*)
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryTaskResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Retry Task
      tags:
        - Live2VOD for Organization
  /v2/{org}/channels/{channel-id}/timeline:
    get:
      description: Returns up to twenty items from the event timeline for a channel, sorted in reverse-chronological order.
      operationId: get-org-channel-timeline
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: cursor
          description: Current page cursor
          in: query
          schema:
            type: string
            description: Current page cursor
          explode: false
        - name: page_size
          description: Number of items to return
          in: query
          schema:
            type: integer
            description: Number of items to return
            format: int32
            default: 100
            minimum: 1
            maximum: 100
          explode: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelTimelineEntryList'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get Channel Timeline
      tags:
        - Audit Operations for Organization
  /v2/{org}/channels/{channel-id}/transcoder-status:
    get:
      description: Get the current status for the live transcoder powering the channel.
      operationId: org-get-transcoder-status
      parameters:
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "424":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Failed Dependency
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get Transcoder Status
      tags:
        - Channel Operations for Organization
  /v2/{org}/channels/{channel-id}/vods:
    get:
      description: |-
        VODs can be listed after an appropriately configured channel is turned on for the first time.
        If a channel with existing VODs is turned off or deleted, the VODs will still be returned.
      operationId: list-org-vods
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVODsResponseList'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: List VODs
      tags:
        - Live2VOD for Organization
  /v2/{org}/channels/{channel-id}/vods/{vod_id}:
    get:
      description: Get a singular vod for a channel
      operationId: get-org-vod
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: vod_id
          description: ID for a VOD
          in: path
          required: true
          schema:
            type: string
            description: ID for a VOD
            pattern: ^([0-9]+)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVODResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get VOD
      tags:
        - Live2VOD for Organization
  /v2/{org}/channels/{channel-id}/vods/{vod_id}/clips:
    get:
      description: List all clips for a single VOD in the channel identified in the request.
      operationId: list-org-clips-vod
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: vod_id
          description: ID for a VOD
          in: path
          required: true
          schema:
            type: string
            description: ID for a VOD
            pattern: ^([0-9]+)$
        - name: cursor
          description: Current page cursor
          in: query
          schema:
            type: string
            description: Current page cursor
          explode: false
        - name: page_size
          description: Number of items to return
          in: query
          schema:
            type: integer
            description: Number of items to return
            format: int32
            default: 100
            minimum: 1
            maximum: 100
          explode: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClipsForVodResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: List available clips for a vod
      tags:
        - Live2VOD for Organization
    post:
      description: Starts a job to create a clip for a VOD on the channel identified in the request.
      operationId: post-org-vod-clip
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: vod_id
          description: ID for a VOD
          in: path
          required: true
          schema:
            type: string
            description: ID for a VOD
            pattern: ^([0-9]+)$
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MakeClipRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MakeClipResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "408":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Timeout
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Entity Too Large
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Make a clip for a single VOD
      tags:
        - Live2VOD for Organization
  /v2/{org}/channels/{channel-id}/vods/{vod_id}/clips/{clip-id}/copymp4:
    post:
      description: Starts a copy mp4 task in l2v to copy an MP4 to another preset storage location
      operationId: post-copy-mp4
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: vod_id
          description: ID for a VOD
          in: path
          required: true
          schema:
            type: string
            description: ID for a VOD
            pattern: ^([0-9]+)$
        - name: clip-id
          description: ID for a Clip
          in: path
          required: true
          schema:
            type: string
            description: ID for a Clip
            pattern: ^([0-9]+)$
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCopyMP4Request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCopyMP4Response'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "408":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Timeout
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Entity Too Large
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Copy mp4
      tags:
        - Live2VOD for Organization
  /v2/{org}/channels/{channel-id}/vods/{vod_id}/clips/{clip-id}/makemp4:
    post:
      description: Create a mp4 entity for the clip within a vod
      operationId: post-org-make-mp4
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: vod_id
          description: ID for a VOD
          in: path
          required: true
          schema:
            type: string
            description: ID for a VOD
            pattern: ^([0-9]+)$
        - name: clip-id
          description: ID for a Clip
          in: path
          required: true
          schema:
            type: string
            description: ID for a Clip
            pattern: ^([0-9]+)$
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMakeMP4Request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MakeMP4Response'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "408":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Timeout
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Entity Too Large
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Create MP4 for Clip
      tags:
        - Live2VOD for Organization
  /v2/{org}/channels/{channel-id}/vods/{vod_id}/clips/{clip-id}/manifests:
    get:
      operationId: get-org-clip-manifests
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: vod_id
          description: ID for a VOD
          in: path
          required: true
          schema:
            type: string
            description: ID for a VOD
            pattern: ^([0-9]+)$
        - name: clip-id
          description: ID for a Clip
          in: path
          required: true
          schema:
            type: string
            description: ID for a Clip
            pattern: ^([0-9]+)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClipManifestResponseList'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Retrieve the manifests for a given clip id
      tags:
        - Live2VOD for Organization
  /v2/{org}/channels/{channel-id}/vods/{vod_id}/clips/{clip-id}/mp4url:
    get:
      description: |-
        Get the mp4url for downloading a mp4 file for a clip
        Takes in a vodid and clipid and returns the url to download the mp4 asset.
      operationId: get-org-mp4-url
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: vod_id
          description: ID for a VOD
          in: path
          required: true
          schema:
            type: string
            description: ID for a VOD
            pattern: ^([0-9]+)$
        - name: clip-id
          description: ID for a Clip
          in: path
          required: true
          schema:
            type: string
            description: ID for a Clip
            pattern: ^([0-9]+)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MP4URLResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get Clip MP4 URL
      tags:
        - Live2VOD for Organization
  /v2/{org}/channels/{channel-id}/vods/{vod_id}/clips/{clip-id}/programtime:
    get:
      description: Get the program start and end times for a clip
      operationId: get-org-vod-clip-program-time
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: vod_id
          description: ID for a VOD
          in: path
          required: true
          schema:
            type: string
            description: ID for a VOD
            pattern: ^([0-9]+)$
        - name: clip-id
          description: ID for a Clip
          in: path
          required: true
          schema:
            type: string
            description: ID for a Clip
            pattern: ^([0-9]+)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClipProgramTimeResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get Clip Program Times
      tags:
        - Live2VOD for Organization
  /v2/{org}/channels/{channel-id}/vods/{vod_id}/clips/{clip-id}/scte35markers:
    get:
      description: Get the scte markers for a clip
      operationId: get-org-vod-clip-scte35-markers
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: vod_id
          description: ID for a VOD
          in: path
          required: true
          schema:
            type: string
            description: ID for a VOD
            pattern: ^([0-9]+)$
        - name: clip-id
          description: ID for a Clip
          in: path
          required: true
          schema:
            type: string
            description: ID for a Clip
            pattern: ^([0-9]+)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetScte35MarkerByClipIDResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get Scte 35 Markers By Clip
      tags:
        - Live2VOD for Organization
  /v2/{org}/channels/{channel-id}/vods/{vod_id}/collapse:
    post:
      description: A vod can be collapsed to a specific filter config
      operationId: collapse-vod
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: channel-id
          description: Unique channel identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique channel identifier
            maxLength: 60
            pattern: ^([a-z0-9]+(-*[a-z0-9]+)*)$
        - name: vod_id
          description: ID for a VOD
          in: path
          required: true
          schema:
            type: string
            description: ID for a VOD
            pattern: ^([0-9]+)$
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollapseVODRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollapseVODResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "408":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Timeout
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Entity Too Large
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Collapse Vod
      tags:
        - Live2VOD for Organization
  /v2/{org}/products:
    get:
      description: Get all the products for a specific organization across all regions
      operationId: list-org-products
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductsResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: List Products
      tags:
        - Live2VOD for Organization
  /v2/{org}/products/{product-id}:
    get:
      description: Get a product with an organization and product id. This will return one from each region if that product id is in multiple regions.
      operationId: get-org-product
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: product-id
          description: Product ID for a l2v request
          in: path
          required: true
          schema:
            type: string
            description: Product ID for a l2v request
            pattern: ^([0-9]+)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get product
      tags:
        - Live2VOD for Organization
  /v2/{org}/products/{product-id}/config:
    get:
      description: Get fields for product config
      operationId: get-org-product-config
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: product-id
          description: Product ID for a l2v request
          in: path
          required: true
          schema:
            type: string
            description: Product ID for a l2v request
            pattern: ^([0-9]+)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductConfigResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: 'Get product config '
      tags:
        - Live2VOD for Organization
    post:
      description: Update fields for product config
      operationId: post-org-product-config
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: product-id
          description: Product ID for a l2v request
          in: path
          required: true
          schema:
            type: string
            description: Product ID for a l2v request
            pattern: ^([0-9]+)$
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductConfigRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProductConfigResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "408":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Timeout
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Entity Too Large
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: 'Update config '
      tags:
        - Live2VOD for Organization
  /v2/{org}/products/{product-id}/programs:
    get:
      description: Get all the programs for a specific organization and product
      operationId: list-org-products-programs
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: product-id
          description: Product ID for a l2v request
          in: path
          required: true
          schema:
            type: string
            description: Product ID for a l2v request
            pattern: ^([0-9]+)$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProgramsResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: List Programs
      tags:
        - Live2VOD for Organization
  /v2/{org}/sources:
    get:
      description: Get a list of sources that are used to create channels.
      operationId: list-org-sources
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: cursor
          description: Current page cursor
          in: query
          schema:
            type: string
            description: Current page cursor
          explode: false
        - name: page_size
          description: Number of items to return
          in: query
          schema:
            type: integer
            description: Number of items to return
            format: int32
            default: 100
            minimum: 1
            maximum: 100
          explode: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummaryList'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: List Sources
      tags:
        - Available Sources
  /v2/{org}/sources/{source-id}:
    get:
      description: Get a source's configuration
      operationId: get-org-source
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: source-id
          description: Unique source identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique source identifier
            pattern: ^.*$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            ETag:
              description: ETag
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get Source
      tags:
        - Available Sources
  /v2/{org}/sources/{source-id}/preview:
    put:
      description: |
        Create Source Preview, if one does not already exist. This operation is idempotent and may be called multiple times.

        A response status code of 201 Created indicates the necessary Source Preview resources have been created. Once created, it may take up to 30 seconds before all resources to be running and available to provide Source Preview Streams information.

        A response status code of 204 NoContent indicates the requisite Source Preview resources have already been created.
      operationId: put-source-preview
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: source-id
          description: Unique source identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique source identifier
            pattern: ^.*$
      responses:
        "201":
          description: Created
        "204":
          description: No Content
        "304":
          description: Not Modified
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unauthorized
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Forbidden
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Conflict
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "412":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Precondition Failed
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Create Source Preview
      tags:
        - Source Previews
  /v2/{org}/sources/{source-id}/preview/ingest-pin:
    delete:
      description: |-
        Remove the preferrence for primary or secondary ingest feed from the Source Preview's transcoder.
        Automated source failover based on feed quality will be resumed.
      operationId: source-preview-unpin-ingest
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: source-id
          description: Unique source identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique source identifier
            pattern: ^.*$
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Acceptable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Unpin Ingest
      tags:
        - Source Previews
    put:
      description: |
        Pin the Source Preview's transcoder to prefer either primary or secondary ingest feeds.
        Note that this will disable some automated ingest failover that is based on the quality of the feeds.
      operationId: source-preview-pin-ingest
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: source-id
          description: Unique source identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique source identifier
            pattern: ^.*$
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinSourceRequest'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Acceptable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "408":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Timeout
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Request Entity Too Large
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Pin Ingest
      tags:
        - Source Previews
  /v2/{org}/sources/{source-id}/preview/stream:
    get:
      description: |-
        Gets the information required for the Low Latency Preview Player to enable playback.

        'PUT /v2/{org}/sources/{source-id}/preview' SHOULD be called prior to ensure that the necessary Source Preview resources have been created. Otherwise, the Source Preview Stream will not be available and this API route will never succeed.
      operationId: get-source-preview-stream
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: source-id
          description: Unique source identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique source identifier
            pattern: ^.*$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPreviewStreamsResponse'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Acceptable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get Source Preview Stream
      tags:
        - Source Previews
  /v2/{org}/sources/{source-id}/preview/transcoder-status:
    get:
      description: Get the current status for the live transcoder powering the Source Preview.
      operationId: get-source-preview-transcoder-status
      parameters:
        - name: org
          description: Organization name
          in: path
          required: true
          schema:
            type: string
            description: Organization name
        - name: source-id
          description: Unique source identifier
          in: path
          required: true
          schema:
            type: string
            description: Unique source identifier
            pattern: ^.*$
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: OK
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Bad Request
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Found
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "422":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Unprocessable Entity
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "499":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: ""
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Internal Server Error
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Not Implemented
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Service Unavailable
          headers:
            Content-Type:
              description: Content-Type
              schema:
                type: string
            Link:
              description: Link
              schema:
                type: string
      summary: Get Transcoder Status
      tags:
        - Source Previews
security:
  - authcode: []
  - m2m: []
servers:
  - url: https://api.istreamplanet.com
    description: prod
tags:
  - name: Organizations
  - name: Available Sources
  - name: Source Previews
  - name: Channels for Organization
  - name: Channel Operations for Organization
  - name: Live2VOD for Organization
  - name: Audit Operations for Organization
  - name: Sources
  - name: Channels
  - name: Channel Operations
  - name: Audit Operations
x-cli-config:
  security: authcode
  params:
    authorize_url: https://sso.wbd.com/oauth2/aus125bl6q770za4g0x8/v1/authorize
    client_id: 0oa125bj1lwLZRxjD0x8
    redirect_url: http://auth.rest.sh:8484
    scopes: offline_access,Groups
    state: non-empty
    token_url: https://sso.wbd.com/oauth2/aus125bl6q770za4g0x8/v1/token
