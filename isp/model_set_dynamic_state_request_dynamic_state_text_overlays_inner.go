/*
 * WBD Aventus Channels API
 *
 * API version: 0.0.0
 * Contact: live-control-plane-devs@wbd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the SetDynamicStateRequestDynamicStateTextOverlaysInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetDynamicStateRequestDynamicStateTextOverlaysInner{}

// SetDynamicStateRequestDynamicStateTextOverlaysInner struct for SetDynamicStateRequestDynamicStateTextOverlaysInner
type SetDynamicStateRequestDynamicStateTextOverlaysInner struct {
	// The background color and opacity given in RGBA hex format. Background applies to the background of both the text and the text padding.
	Background *string `json:"background,omitempty" minLength:"7" doc:"The background color and opacity given in RGBA hex format. Background applies to the background of both the text and the text padding."`
	// The font color to use for the text overlay. Given as an RGB hex string.
	FontColor *string `json:"font_color,omitempty" doc:"The font color to use for the text overlay. Given as an RGB hex string."`
	// The font height as a percentage of screen height.
	FontHeight *float32 `json:"font_height,omitempty" format:"float" exclusiveMinimum:"0" doc:"The font height as a percentage of screen height."`
	// The font resource id to use for the text overlay. This must reference a dynamic resource of type 'FONT'.
	FontResourceId *string `json:"font_resource_id,omitempty" minLength:"1" doc:"The font resource id to use for the text overlay. This must reference a dynamic resource of type 'FONT'."`
	Padding *SetDynamicStateRequestDynamicStateTextOverlaysInnerPadding `json:"padding,omitempty"`
	// The text to overlay on the video.
	Text *string `json:"text,omitempty" minLength:"1" doc:"The text to overlay on the video."`
	X *SetDynamicStateRequestDynamicStateTextOverlaysInnerX `json:"x,omitempty"`
	Y *SetDynamicStateRequestDynamicStateTextOverlaysInnerY `json:"y,omitempty"`
}

// NewSetDynamicStateRequestDynamicStateTextOverlaysInner instantiates a new SetDynamicStateRequestDynamicStateTextOverlaysInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetDynamicStateRequestDynamicStateTextOverlaysInner() *SetDynamicStateRequestDynamicStateTextOverlaysInner {
	this := SetDynamicStateRequestDynamicStateTextOverlaysInner{}
	return &this
}

// NewSetDynamicStateRequestDynamicStateTextOverlaysInnerWithDefaults instantiates a new SetDynamicStateRequestDynamicStateTextOverlaysInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetDynamicStateRequestDynamicStateTextOverlaysInnerWithDefaults() *SetDynamicStateRequestDynamicStateTextOverlaysInner {
	this := SetDynamicStateRequestDynamicStateTextOverlaysInner{}
	return &this
}

// GetBackground returns the Background field value if set, zero value otherwise.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) GetBackground() string {
	if o == nil || IsNil(o.Background) {
		var ret string
		return ret
	}
	return *o.Background
}

// GetBackgroundOk returns a tuple with the Background field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) GetBackgroundOk() (*string, bool) {
	if o == nil || IsNil(o.Background) {
		return nil, false
	}
	return o.Background, true
}

// HasBackground returns a boolean if a field has been set.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) HasBackground() bool {
	if o != nil && !IsNil(o.Background) {
		return true
	}

	return false
}

// SetBackground gets a reference to the given string and assigns it to the Background field.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) SetBackground(v string) {
	o.Background = &v
}

// GetFontColor returns the FontColor field value if set, zero value otherwise.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) GetFontColor() string {
	if o == nil || IsNil(o.FontColor) {
		var ret string
		return ret
	}
	return *o.FontColor
}

// GetFontColorOk returns a tuple with the FontColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) GetFontColorOk() (*string, bool) {
	if o == nil || IsNil(o.FontColor) {
		return nil, false
	}
	return o.FontColor, true
}

// HasFontColor returns a boolean if a field has been set.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) HasFontColor() bool {
	if o != nil && !IsNil(o.FontColor) {
		return true
	}

	return false
}

// SetFontColor gets a reference to the given string and assigns it to the FontColor field.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) SetFontColor(v string) {
	o.FontColor = &v
}

// GetFontHeight returns the FontHeight field value if set, zero value otherwise.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) GetFontHeight() float32 {
	if o == nil || IsNil(o.FontHeight) {
		var ret float32
		return ret
	}
	return *o.FontHeight
}

// GetFontHeightOk returns a tuple with the FontHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) GetFontHeightOk() (*float32, bool) {
	if o == nil || IsNil(o.FontHeight) {
		return nil, false
	}
	return o.FontHeight, true
}

// HasFontHeight returns a boolean if a field has been set.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) HasFontHeight() bool {
	if o != nil && !IsNil(o.FontHeight) {
		return true
	}

	return false
}

// SetFontHeight gets a reference to the given float32 and assigns it to the FontHeight field.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) SetFontHeight(v float32) {
	o.FontHeight = &v
}

// GetFontResourceId returns the FontResourceId field value if set, zero value otherwise.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) GetFontResourceId() string {
	if o == nil || IsNil(o.FontResourceId) {
		var ret string
		return ret
	}
	return *o.FontResourceId
}

// GetFontResourceIdOk returns a tuple with the FontResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) GetFontResourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.FontResourceId) {
		return nil, false
	}
	return o.FontResourceId, true
}

// HasFontResourceId returns a boolean if a field has been set.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) HasFontResourceId() bool {
	if o != nil && !IsNil(o.FontResourceId) {
		return true
	}

	return false
}

// SetFontResourceId gets a reference to the given string and assigns it to the FontResourceId field.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) SetFontResourceId(v string) {
	o.FontResourceId = &v
}

// GetPadding returns the Padding field value if set, zero value otherwise.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) GetPadding() SetDynamicStateRequestDynamicStateTextOverlaysInnerPadding {
	if o == nil || IsNil(o.Padding) {
		var ret SetDynamicStateRequestDynamicStateTextOverlaysInnerPadding
		return ret
	}
	return *o.Padding
}

// GetPaddingOk returns a tuple with the Padding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) GetPaddingOk() (*SetDynamicStateRequestDynamicStateTextOverlaysInnerPadding, bool) {
	if o == nil || IsNil(o.Padding) {
		return nil, false
	}
	return o.Padding, true
}

// HasPadding returns a boolean if a field has been set.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) HasPadding() bool {
	if o != nil && !IsNil(o.Padding) {
		return true
	}

	return false
}

// SetPadding gets a reference to the given SetDynamicStateRequestDynamicStateTextOverlaysInnerPadding and assigns it to the Padding field.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) SetPadding(v SetDynamicStateRequestDynamicStateTextOverlaysInnerPadding) {
	o.Padding = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) SetText(v string) {
	o.Text = &v
}

// GetX returns the X field value if set, zero value otherwise.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) GetX() SetDynamicStateRequestDynamicStateTextOverlaysInnerX {
	if o == nil || IsNil(o.X) {
		var ret SetDynamicStateRequestDynamicStateTextOverlaysInnerX
		return ret
	}
	return *o.X
}

// GetXOk returns a tuple with the X field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) GetXOk() (*SetDynamicStateRequestDynamicStateTextOverlaysInnerX, bool) {
	if o == nil || IsNil(o.X) {
		return nil, false
	}
	return o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) HasX() bool {
	if o != nil && !IsNil(o.X) {
		return true
	}

	return false
}

// SetX gets a reference to the given SetDynamicStateRequestDynamicStateTextOverlaysInnerX and assigns it to the X field.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) SetX(v SetDynamicStateRequestDynamicStateTextOverlaysInnerX) {
	o.X = &v
}

// GetY returns the Y field value if set, zero value otherwise.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) GetY() SetDynamicStateRequestDynamicStateTextOverlaysInnerY {
	if o == nil || IsNil(o.Y) {
		var ret SetDynamicStateRequestDynamicStateTextOverlaysInnerY
		return ret
	}
	return *o.Y
}

// GetYOk returns a tuple with the Y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) GetYOk() (*SetDynamicStateRequestDynamicStateTextOverlaysInnerY, bool) {
	if o == nil || IsNil(o.Y) {
		return nil, false
	}
	return o.Y, true
}

// HasY returns a boolean if a field has been set.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) HasY() bool {
	if o != nil && !IsNil(o.Y) {
		return true
	}

	return false
}

// SetY gets a reference to the given SetDynamicStateRequestDynamicStateTextOverlaysInnerY and assigns it to the Y field.
func (o *SetDynamicStateRequestDynamicStateTextOverlaysInner) SetY(v SetDynamicStateRequestDynamicStateTextOverlaysInnerY) {
	o.Y = &v
}

func (o SetDynamicStateRequestDynamicStateTextOverlaysInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetDynamicStateRequestDynamicStateTextOverlaysInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Background) {
		toSerialize["background"] = o.Background
	}
	if !IsNil(o.FontColor) {
		toSerialize["font_color"] = o.FontColor
	}
	if !IsNil(o.FontHeight) {
		toSerialize["font_height"] = o.FontHeight
	}
	if !IsNil(o.FontResourceId) {
		toSerialize["font_resource_id"] = o.FontResourceId
	}
	if !IsNil(o.Padding) {
		toSerialize["padding"] = o.Padding
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.X) {
		toSerialize["x"] = o.X
	}
	if !IsNil(o.Y) {
		toSerialize["y"] = o.Y
	}
	return toSerialize, nil
}

type NullableSetDynamicStateRequestDynamicStateTextOverlaysInner struct {
	value *SetDynamicStateRequestDynamicStateTextOverlaysInner
	isSet bool
}

func (v NullableSetDynamicStateRequestDynamicStateTextOverlaysInner) Get() *SetDynamicStateRequestDynamicStateTextOverlaysInner {
	return v.value
}

func (v *NullableSetDynamicStateRequestDynamicStateTextOverlaysInner) Set(val *SetDynamicStateRequestDynamicStateTextOverlaysInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSetDynamicStateRequestDynamicStateTextOverlaysInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSetDynamicStateRequestDynamicStateTextOverlaysInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetDynamicStateRequestDynamicStateTextOverlaysInner(val *SetDynamicStateRequestDynamicStateTextOverlaysInner) *NullableSetDynamicStateRequestDynamicStateTextOverlaysInner {
	return &NullableSetDynamicStateRequestDynamicStateTextOverlaysInner{value: val, isSet: true}
}

func (v NullableSetDynamicStateRequestDynamicStateTextOverlaysInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetDynamicStateRequestDynamicStateTextOverlaysInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


