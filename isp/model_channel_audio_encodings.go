/*
 * iStreamPlanet Channels API
 *
 * This API provides a way to list, create, and run channels.  Channels consist of inputs (ingest), transcoding settings like codecs and bitrates, and outputs (publishing).  List calls use cursor-based pagination with [RFC 5988](https://tools.ietf.org/html/rfc5988) Link headers. Clients *should* read this header and follow the next link to read all pages of results. 
 *
 * API version: 0.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// ChannelAudioEncodings struct for ChannelAudioEncodings
type ChannelAudioEncodings struct {
	// ID of Audio Source
	Audiosourceid string `json:"audiosourceid"`
	// Average bitrate in bits per second
	Bitrate int32 `json:"bitrate"`
	// Number of audio channels
	Channels int32 `json:"channels"`
	// Audio codec for encoding
	Codec string `json:"codec"`
	// Audio encoding unique identifier
	Id string `json:"id"`
	// Language code
	Language *string `json:"language,omitempty"`
	// Audio sampling rate in kHz
	SampleRate int32 `json:"sample_rate"`
	AdditionalProperties map[string]interface{}
}

type _ChannelAudioEncodings ChannelAudioEncodings

// NewChannelAudioEncodings instantiates a new ChannelAudioEncodings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelAudioEncodings(audiosourceid string, bitrate int32, channels int32, codec string, id string, sampleRate int32, ) *ChannelAudioEncodings {
	this := ChannelAudioEncodings{}
	this.Audiosourceid = audiosourceid
	this.Bitrate = bitrate
	this.Channels = channels
	this.Codec = codec
	this.Id = id
	this.SampleRate = sampleRate
	return &this
}

// NewChannelAudioEncodingsWithDefaults instantiates a new ChannelAudioEncodings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelAudioEncodingsWithDefaults() *ChannelAudioEncodings {
	this := ChannelAudioEncodings{}
	return &this
}

// GetAudiosourceid returns the Audiosourceid field value
func (o *ChannelAudioEncodings) GetAudiosourceid() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Audiosourceid
}

// GetAudiosourceidOk returns a tuple with the Audiosourceid field value
// and a boolean to check if the value has been set.
func (o *ChannelAudioEncodings) GetAudiosourceidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Audiosourceid, true
}

// SetAudiosourceid sets field value
func (o *ChannelAudioEncodings) SetAudiosourceid(v string) {
	o.Audiosourceid = v
}

// GetBitrate returns the Bitrate field value
func (o *ChannelAudioEncodings) GetBitrate() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Bitrate
}

// GetBitrateOk returns a tuple with the Bitrate field value
// and a boolean to check if the value has been set.
func (o *ChannelAudioEncodings) GetBitrateOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Bitrate, true
}

// SetBitrate sets field value
func (o *ChannelAudioEncodings) SetBitrate(v int32) {
	o.Bitrate = v
}

// GetChannels returns the Channels field value
func (o *ChannelAudioEncodings) GetChannels() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Channels
}

// GetChannelsOk returns a tuple with the Channels field value
// and a boolean to check if the value has been set.
func (o *ChannelAudioEncodings) GetChannelsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Channels, true
}

// SetChannels sets field value
func (o *ChannelAudioEncodings) SetChannels(v int32) {
	o.Channels = v
}

// GetCodec returns the Codec field value
func (o *ChannelAudioEncodings) GetCodec() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Codec
}

// GetCodecOk returns a tuple with the Codec field value
// and a boolean to check if the value has been set.
func (o *ChannelAudioEncodings) GetCodecOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Codec, true
}

// SetCodec sets field value
func (o *ChannelAudioEncodings) SetCodec(v string) {
	o.Codec = v
}

// GetId returns the Id field value
func (o *ChannelAudioEncodings) GetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ChannelAudioEncodings) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ChannelAudioEncodings) SetId(v string) {
	o.Id = v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *ChannelAudioEncodings) GetLanguage() string {
	if o == nil || o.Language == nil {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelAudioEncodings) GetLanguageOk() (*string, bool) {
	if o == nil || o.Language == nil {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *ChannelAudioEncodings) HasLanguage() bool {
	if o != nil && o.Language != nil {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *ChannelAudioEncodings) SetLanguage(v string) {
	o.Language = &v
}

// GetSampleRate returns the SampleRate field value
func (o *ChannelAudioEncodings) GetSampleRate() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.SampleRate
}

// GetSampleRateOk returns a tuple with the SampleRate field value
// and a boolean to check if the value has been set.
func (o *ChannelAudioEncodings) GetSampleRateOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SampleRate, true
}

// SetSampleRate sets field value
func (o *ChannelAudioEncodings) SetSampleRate(v int32) {
	o.SampleRate = v
}

func (o ChannelAudioEncodings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["audiosourceid"] = o.Audiosourceid
	}
	if true {
		toSerialize["bitrate"] = o.Bitrate
	}
	if true {
		toSerialize["channels"] = o.Channels
	}
	if true {
		toSerialize["codec"] = o.Codec
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Language != nil {
		toSerialize["language"] = o.Language
	}
	if true {
		toSerialize["sample_rate"] = o.SampleRate
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ChannelAudioEncodings) UnmarshalJSON(bytes []byte) (err error) {
	varChannelAudioEncodings := _ChannelAudioEncodings{}

	if err = json.Unmarshal(bytes, &varChannelAudioEncodings); err == nil {
		*o = ChannelAudioEncodings(varChannelAudioEncodings)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "audiosourceid")
		delete(additionalProperties, "bitrate")
		delete(additionalProperties, "channels")
		delete(additionalProperties, "codec")
		delete(additionalProperties, "id")
		delete(additionalProperties, "language")
		delete(additionalProperties, "sample_rate")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableChannelAudioEncodings struct {
	value *ChannelAudioEncodings
	isSet bool
}

func (v NullableChannelAudioEncodings) Get() *ChannelAudioEncodings {
	return v.value
}

func (v *NullableChannelAudioEncodings) Set(val *ChannelAudioEncodings) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelAudioEncodings) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelAudioEncodings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelAudioEncodings(val *ChannelAudioEncodings) *NullableChannelAudioEncodings {
	return &NullableChannelAudioEncodings{value: val, isSet: true}
}

func (v NullableChannelAudioEncodings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelAudioEncodings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


