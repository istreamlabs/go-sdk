/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// PutClipArchiveResponse struct for PutClipArchiveResponse
type PutClipArchiveResponse struct {
	// An optional URL to a JSON Schema document describing this resource
	Schema *string `json:"$schema,omitempty"`
	// Set if Live2VOD failed to start an archive task for any configured archive destination. Empty if all are successful
	TaskErrors []ErrorModelErrorsInner `json:"task_errors"`
	// Array of task ids for each archive destination task started by Live2VOD
	TaskIds []string `json:"task_ids"`
}

// NewPutClipArchiveResponse instantiates a new PutClipArchiveResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutClipArchiveResponse(taskErrors []ErrorModelErrorsInner, taskIds []string) *PutClipArchiveResponse {
	this := PutClipArchiveResponse{}
	this.TaskErrors = taskErrors
	this.TaskIds = taskIds
	return &this
}

// NewPutClipArchiveResponseWithDefaults instantiates a new PutClipArchiveResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutClipArchiveResponseWithDefaults() *PutClipArchiveResponse {
	this := PutClipArchiveResponse{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *PutClipArchiveResponse) GetSchema() string {
	if o == nil || o.Schema == nil {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutClipArchiveResponse) GetSchemaOk() (*string, bool) {
	if o == nil || o.Schema == nil {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *PutClipArchiveResponse) HasSchema() bool {
	if o != nil && o.Schema != nil {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *PutClipArchiveResponse) SetSchema(v string) {
	o.Schema = &v
}

// GetTaskErrors returns the TaskErrors field value
func (o *PutClipArchiveResponse) GetTaskErrors() []ErrorModelErrorsInner {
	if o == nil {
		var ret []ErrorModelErrorsInner
		return ret
	}

	return o.TaskErrors
}

// GetTaskErrorsOk returns a tuple with the TaskErrors field value
// and a boolean to check if the value has been set.
func (o *PutClipArchiveResponse) GetTaskErrorsOk() ([]ErrorModelErrorsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaskErrors, true
}

// SetTaskErrors sets field value
func (o *PutClipArchiveResponse) SetTaskErrors(v []ErrorModelErrorsInner) {
	o.TaskErrors = v
}

// GetTaskIds returns the TaskIds field value
func (o *PutClipArchiveResponse) GetTaskIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.TaskIds
}

// GetTaskIdsOk returns a tuple with the TaskIds field value
// and a boolean to check if the value has been set.
func (o *PutClipArchiveResponse) GetTaskIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaskIds, true
}

// SetTaskIds sets field value
func (o *PutClipArchiveResponse) SetTaskIds(v []string) {
	o.TaskIds = v
}

func (o PutClipArchiveResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Schema != nil {
		toSerialize["$schema"] = o.Schema
	}
	if true {
		toSerialize["task_errors"] = o.TaskErrors
	}
	if true {
		toSerialize["task_ids"] = o.TaskIds
	}
	return json.Marshal(toSerialize)
}

type NullablePutClipArchiveResponse struct {
	value *PutClipArchiveResponse
	isSet bool
}

func (v NullablePutClipArchiveResponse) Get() *PutClipArchiveResponse {
	return v.value
}

func (v *NullablePutClipArchiveResponse) Set(val *PutClipArchiveResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePutClipArchiveResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePutClipArchiveResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutClipArchiveResponse(val *PutClipArchiveResponse) *NullablePutClipArchiveResponse {
	return &NullablePutClipArchiveResponse{value: val, isSet: true}
}

func (v NullablePutClipArchiveResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutClipArchiveResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


