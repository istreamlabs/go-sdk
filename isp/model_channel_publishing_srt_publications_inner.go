/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the ChannelPublishingSrtPublicationsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelPublishingSrtPublicationsInner{}

// ChannelPublishingSrtPublicationsInner struct for ChannelPublishingSrtPublicationsInner
type ChannelPublishingSrtPublicationsInner struct {
	AudioEncoderIds []string `json:"audio_encoder_ids,omitempty"`
	Id *string `json:"id,omitempty"`
	Url *string `json:"url,omitempty"`
	VideoEncoderIds []string `json:"video_encoder_ids,omitempty"`
}

// NewChannelPublishingSrtPublicationsInner instantiates a new ChannelPublishingSrtPublicationsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelPublishingSrtPublicationsInner() *ChannelPublishingSrtPublicationsInner {
	this := ChannelPublishingSrtPublicationsInner{}
	return &this
}

// NewChannelPublishingSrtPublicationsInnerWithDefaults instantiates a new ChannelPublishingSrtPublicationsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelPublishingSrtPublicationsInnerWithDefaults() *ChannelPublishingSrtPublicationsInner {
	this := ChannelPublishingSrtPublicationsInner{}
	return &this
}

// GetAudioEncoderIds returns the AudioEncoderIds field value if set, zero value otherwise.
func (o *ChannelPublishingSrtPublicationsInner) GetAudioEncoderIds() []string {
	if o == nil || IsNil(o.AudioEncoderIds) {
		var ret []string
		return ret
	}
	return o.AudioEncoderIds
}

// GetAudioEncoderIdsOk returns a tuple with the AudioEncoderIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPublishingSrtPublicationsInner) GetAudioEncoderIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AudioEncoderIds) {
		return nil, false
	}
	return o.AudioEncoderIds, true
}

// HasAudioEncoderIds returns a boolean if a field has been set.
func (o *ChannelPublishingSrtPublicationsInner) HasAudioEncoderIds() bool {
	if o != nil && !IsNil(o.AudioEncoderIds) {
		return true
	}

	return false
}

// SetAudioEncoderIds gets a reference to the given []string and assigns it to the AudioEncoderIds field.
func (o *ChannelPublishingSrtPublicationsInner) SetAudioEncoderIds(v []string) {
	o.AudioEncoderIds = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ChannelPublishingSrtPublicationsInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPublishingSrtPublicationsInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ChannelPublishingSrtPublicationsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ChannelPublishingSrtPublicationsInner) SetId(v string) {
	o.Id = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ChannelPublishingSrtPublicationsInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPublishingSrtPublicationsInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ChannelPublishingSrtPublicationsInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ChannelPublishingSrtPublicationsInner) SetUrl(v string) {
	o.Url = &v
}

// GetVideoEncoderIds returns the VideoEncoderIds field value if set, zero value otherwise.
func (o *ChannelPublishingSrtPublicationsInner) GetVideoEncoderIds() []string {
	if o == nil || IsNil(o.VideoEncoderIds) {
		var ret []string
		return ret
	}
	return o.VideoEncoderIds
}

// GetVideoEncoderIdsOk returns a tuple with the VideoEncoderIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPublishingSrtPublicationsInner) GetVideoEncoderIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.VideoEncoderIds) {
		return nil, false
	}
	return o.VideoEncoderIds, true
}

// HasVideoEncoderIds returns a boolean if a field has been set.
func (o *ChannelPublishingSrtPublicationsInner) HasVideoEncoderIds() bool {
	if o != nil && !IsNil(o.VideoEncoderIds) {
		return true
	}

	return false
}

// SetVideoEncoderIds gets a reference to the given []string and assigns it to the VideoEncoderIds field.
func (o *ChannelPublishingSrtPublicationsInner) SetVideoEncoderIds(v []string) {
	o.VideoEncoderIds = v
}

func (o ChannelPublishingSrtPublicationsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelPublishingSrtPublicationsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AudioEncoderIds) {
		toSerialize["audio_encoder_ids"] = o.AudioEncoderIds
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.VideoEncoderIds) {
		toSerialize["video_encoder_ids"] = o.VideoEncoderIds
	}
	return toSerialize, nil
}

type NullableChannelPublishingSrtPublicationsInner struct {
	value *ChannelPublishingSrtPublicationsInner
	isSet bool
}

func (v NullableChannelPublishingSrtPublicationsInner) Get() *ChannelPublishingSrtPublicationsInner {
	return v.value
}

func (v *NullableChannelPublishingSrtPublicationsInner) Set(val *ChannelPublishingSrtPublicationsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelPublishingSrtPublicationsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelPublishingSrtPublicationsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelPublishingSrtPublicationsInner(val *ChannelPublishingSrtPublicationsInner) *NullableChannelPublishingSrtPublicationsInner {
	return &NullableChannelPublishingSrtPublicationsInner{value: val, isSet: true}
}

func (v NullableChannelPublishingSrtPublicationsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelPublishingSrtPublicationsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


