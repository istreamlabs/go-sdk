/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the ChannelTranscodeAudioEncodersInnerLoudness type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelTranscodeAudioEncodersInnerLoudness{}

// ChannelTranscodeAudioEncodersInnerLoudness Loudness normalization settings.
type ChannelTranscodeAudioEncodersInnerLoudness struct {
	// Enable Dialog Intelligence. Only supported for (E)AC-3 encoders.
	DialogIntel *bool `json:"dialog_intel,omitempty" doc:"Enable Dialog Intelligence. Only supported for (E)AC-3 encoders."`
	// Loudness normalization LKFS setting. Default value is -24.
	Lkfs *int32 `json:"lkfs,omitempty" format:"int32" minimum:"-31" maximum:"-10" doc:"Loudness normalization LKFS setting. Default value is -24."`
	// Loudness Range. Only supported for non-(E)AC-3 encoders. Default value is 7.0.
	Lra *float32 `json:"lra,omitempty" format:"float" doc:"Loudness Range. Only supported for non-(E)AC-3 encoders. Default value is 7.0."`
	// Peak Limit. Default value is -2.0.
	PeakLimit *float32 `json:"peak_limit,omitempty" format:"float" minimum:"-8" maximum:"-0.1" doc:"Peak Limit. Default value is -2.0."`
}

// NewChannelTranscodeAudioEncodersInnerLoudness instantiates a new ChannelTranscodeAudioEncodersInnerLoudness object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelTranscodeAudioEncodersInnerLoudness() *ChannelTranscodeAudioEncodersInnerLoudness {
	this := ChannelTranscodeAudioEncodersInnerLoudness{}
	return &this
}

// NewChannelTranscodeAudioEncodersInnerLoudnessWithDefaults instantiates a new ChannelTranscodeAudioEncodersInnerLoudness object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelTranscodeAudioEncodersInnerLoudnessWithDefaults() *ChannelTranscodeAudioEncodersInnerLoudness {
	this := ChannelTranscodeAudioEncodersInnerLoudness{}
	return &this
}

// GetDialogIntel returns the DialogIntel field value if set, zero value otherwise.
func (o *ChannelTranscodeAudioEncodersInnerLoudness) GetDialogIntel() bool {
	if o == nil || IsNil(o.DialogIntel) {
		var ret bool
		return ret
	}
	return *o.DialogIntel
}

// GetDialogIntelOk returns a tuple with the DialogIntel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelTranscodeAudioEncodersInnerLoudness) GetDialogIntelOk() (*bool, bool) {
	if o == nil || IsNil(o.DialogIntel) {
		return nil, false
	}
	return o.DialogIntel, true
}

// HasDialogIntel returns a boolean if a field has been set.
func (o *ChannelTranscodeAudioEncodersInnerLoudness) HasDialogIntel() bool {
	if o != nil && !IsNil(o.DialogIntel) {
		return true
	}

	return false
}

// SetDialogIntel gets a reference to the given bool and assigns it to the DialogIntel field.
func (o *ChannelTranscodeAudioEncodersInnerLoudness) SetDialogIntel(v bool) {
	o.DialogIntel = &v
}

// GetLkfs returns the Lkfs field value if set, zero value otherwise.
func (o *ChannelTranscodeAudioEncodersInnerLoudness) GetLkfs() int32 {
	if o == nil || IsNil(o.Lkfs) {
		var ret int32
		return ret
	}
	return *o.Lkfs
}

// GetLkfsOk returns a tuple with the Lkfs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelTranscodeAudioEncodersInnerLoudness) GetLkfsOk() (*int32, bool) {
	if o == nil || IsNil(o.Lkfs) {
		return nil, false
	}
	return o.Lkfs, true
}

// HasLkfs returns a boolean if a field has been set.
func (o *ChannelTranscodeAudioEncodersInnerLoudness) HasLkfs() bool {
	if o != nil && !IsNil(o.Lkfs) {
		return true
	}

	return false
}

// SetLkfs gets a reference to the given int32 and assigns it to the Lkfs field.
func (o *ChannelTranscodeAudioEncodersInnerLoudness) SetLkfs(v int32) {
	o.Lkfs = &v
}

// GetLra returns the Lra field value if set, zero value otherwise.
func (o *ChannelTranscodeAudioEncodersInnerLoudness) GetLra() float32 {
	if o == nil || IsNil(o.Lra) {
		var ret float32
		return ret
	}
	return *o.Lra
}

// GetLraOk returns a tuple with the Lra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelTranscodeAudioEncodersInnerLoudness) GetLraOk() (*float32, bool) {
	if o == nil || IsNil(o.Lra) {
		return nil, false
	}
	return o.Lra, true
}

// HasLra returns a boolean if a field has been set.
func (o *ChannelTranscodeAudioEncodersInnerLoudness) HasLra() bool {
	if o != nil && !IsNil(o.Lra) {
		return true
	}

	return false
}

// SetLra gets a reference to the given float32 and assigns it to the Lra field.
func (o *ChannelTranscodeAudioEncodersInnerLoudness) SetLra(v float32) {
	o.Lra = &v
}

// GetPeakLimit returns the PeakLimit field value if set, zero value otherwise.
func (o *ChannelTranscodeAudioEncodersInnerLoudness) GetPeakLimit() float32 {
	if o == nil || IsNil(o.PeakLimit) {
		var ret float32
		return ret
	}
	return *o.PeakLimit
}

// GetPeakLimitOk returns a tuple with the PeakLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelTranscodeAudioEncodersInnerLoudness) GetPeakLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.PeakLimit) {
		return nil, false
	}
	return o.PeakLimit, true
}

// HasPeakLimit returns a boolean if a field has been set.
func (o *ChannelTranscodeAudioEncodersInnerLoudness) HasPeakLimit() bool {
	if o != nil && !IsNil(o.PeakLimit) {
		return true
	}

	return false
}

// SetPeakLimit gets a reference to the given float32 and assigns it to the PeakLimit field.
func (o *ChannelTranscodeAudioEncodersInnerLoudness) SetPeakLimit(v float32) {
	o.PeakLimit = &v
}

func (o ChannelTranscodeAudioEncodersInnerLoudness) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelTranscodeAudioEncodersInnerLoudness) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DialogIntel) {
		toSerialize["dialog_intel"] = o.DialogIntel
	}
	if !IsNil(o.Lkfs) {
		toSerialize["lkfs"] = o.Lkfs
	}
	if !IsNil(o.Lra) {
		toSerialize["lra"] = o.Lra
	}
	if !IsNil(o.PeakLimit) {
		toSerialize["peak_limit"] = o.PeakLimit
	}
	return toSerialize, nil
}

type NullableChannelTranscodeAudioEncodersInnerLoudness struct {
	value *ChannelTranscodeAudioEncodersInnerLoudness
	isSet bool
}

func (v NullableChannelTranscodeAudioEncodersInnerLoudness) Get() *ChannelTranscodeAudioEncodersInnerLoudness {
	return v.value
}

func (v *NullableChannelTranscodeAudioEncodersInnerLoudness) Set(val *ChannelTranscodeAudioEncodersInnerLoudness) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelTranscodeAudioEncodersInnerLoudness) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelTranscodeAudioEncodersInnerLoudness) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelTranscodeAudioEncodersInnerLoudness(val *ChannelTranscodeAudioEncodersInnerLoudness) *NullableChannelTranscodeAudioEncodersInnerLoudness {
	return &NullableChannelTranscodeAudioEncodersInnerLoudness{value: val, isSet: true}
}

func (v NullableChannelTranscodeAudioEncodersInnerLoudness) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelTranscodeAudioEncodersInnerLoudness) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


