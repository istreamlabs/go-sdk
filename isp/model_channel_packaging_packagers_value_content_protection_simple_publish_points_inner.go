/*
 * WBD Aventus Channels API
 *
 * API version: 0.0.0
 * Contact: live-control-plane-devs@wbd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner{}

// ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner struct for ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner
type ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner struct {
	BasicAuth *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInnerBasicAuth `json:"basic_auth,omitempty"`
	// Configures whether or not (and how) to compress manifests being published to the origin. If not specified, manifests will not be compressed.
	Compression *string `json:"compression,omitempty" enum:"NONE,GZIP" doc:"Configures whether or not (and how) to compress manifests being published to the origin. If not specified, manifests will not be compressed."`
	// (Optional) Specifies if this pubpoint should not be monitored by PLM.
	DoNotMonitor *bool `json:"do_not_monitor,omitempty" doc:"(Optional) Specifies if this pubpoint should not be monitored by PLM."`
	// Allows custom HTTP headers to be set via configuration for all HTTP requests.
	Headers *map[string]string `json:"headers,omitempty" doc:"Allows custom HTTP headers to be set via configuration for all HTTP requests."`
	// Method overrides what HTTP method to specify in requests to the Publish Point. If not specified the service will default to POST.
	Method *string `json:"method,omitempty" doc:"Method overrides what HTTP method to specify in requests to the Publish Point. If not specified the service will default to POST."`
	// The base URL where published playlists will be able to be obtained. This is often different than the publish_base_url for CDN publishing workflows.
	PlaybackBaseUrl *string `json:"playback_base_url,omitempty" format:"uri-reference" doc:"The base URL where published playlists will be able to be obtained. This is often different than the publish_base_url for CDN publishing workflows."`
	// Specifies any query parameters that will be added to playback urls. Should not include the initial '?' Example: 'foo=bar&q=golang'
	PlaybackQueryParams *string `json:"playback_query_params,omitempty" doc:"Specifies any query parameters that will be added to playback urls. Should not include the initial '?' Example: 'foo=bar&q=golang'"`
	// The base URL where generated playlists will be sent/published. Each publish point requires a unique 'publish_base_url'.
	PublishBaseUrl *string `json:"publish_base_url,omitempty" format:"uri-reference" doc:"The base URL where generated playlists will be sent/published. Each publish point requires a unique 'publish_base_url'."`
	SecureHeaderAuth *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInnerSecureHeaderAuth `json:"secure_header_auth,omitempty"`
}

// NewChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner instantiates a new ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner() *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner {
	this := ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner{}
	return &this
}

// NewChannelPackagingPackagersValueContentProtectionSimplePublishPointsInnerWithDefaults instantiates a new ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelPackagingPackagersValueContentProtectionSimplePublishPointsInnerWithDefaults() *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner {
	this := ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner{}
	return &this
}

// GetBasicAuth returns the BasicAuth field value if set, zero value otherwise.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) GetBasicAuth() ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInnerBasicAuth {
	if o == nil || IsNil(o.BasicAuth) {
		var ret ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInnerBasicAuth
		return ret
	}
	return *o.BasicAuth
}

// GetBasicAuthOk returns a tuple with the BasicAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) GetBasicAuthOk() (*ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInnerBasicAuth, bool) {
	if o == nil || IsNil(o.BasicAuth) {
		return nil, false
	}
	return o.BasicAuth, true
}

// HasBasicAuth returns a boolean if a field has been set.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) HasBasicAuth() bool {
	if o != nil && !IsNil(o.BasicAuth) {
		return true
	}

	return false
}

// SetBasicAuth gets a reference to the given ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInnerBasicAuth and assigns it to the BasicAuth field.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) SetBasicAuth(v ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInnerBasicAuth) {
	o.BasicAuth = &v
}

// GetCompression returns the Compression field value if set, zero value otherwise.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) GetCompression() string {
	if o == nil || IsNil(o.Compression) {
		var ret string
		return ret
	}
	return *o.Compression
}

// GetCompressionOk returns a tuple with the Compression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) GetCompressionOk() (*string, bool) {
	if o == nil || IsNil(o.Compression) {
		return nil, false
	}
	return o.Compression, true
}

// HasCompression returns a boolean if a field has been set.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) HasCompression() bool {
	if o != nil && !IsNil(o.Compression) {
		return true
	}

	return false
}

// SetCompression gets a reference to the given string and assigns it to the Compression field.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) SetCompression(v string) {
	o.Compression = &v
}

// GetDoNotMonitor returns the DoNotMonitor field value if set, zero value otherwise.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) GetDoNotMonitor() bool {
	if o == nil || IsNil(o.DoNotMonitor) {
		var ret bool
		return ret
	}
	return *o.DoNotMonitor
}

// GetDoNotMonitorOk returns a tuple with the DoNotMonitor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) GetDoNotMonitorOk() (*bool, bool) {
	if o == nil || IsNil(o.DoNotMonitor) {
		return nil, false
	}
	return o.DoNotMonitor, true
}

// HasDoNotMonitor returns a boolean if a field has been set.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) HasDoNotMonitor() bool {
	if o != nil && !IsNil(o.DoNotMonitor) {
		return true
	}

	return false
}

// SetDoNotMonitor gets a reference to the given bool and assigns it to the DoNotMonitor field.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) SetDoNotMonitor(v bool) {
	o.DoNotMonitor = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) GetHeaders() map[string]string {
	if o == nil || IsNil(o.Headers) {
		var ret map[string]string
		return ret
	}
	return *o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) GetHeadersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Headers) {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]string and assigns it to the Headers field.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) SetHeaders(v map[string]string) {
	o.Headers = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) GetMethod() string {
	if o == nil || IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) GetMethodOk() (*string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) SetMethod(v string) {
	o.Method = &v
}

// GetPlaybackBaseUrl returns the PlaybackBaseUrl field value if set, zero value otherwise.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) GetPlaybackBaseUrl() string {
	if o == nil || IsNil(o.PlaybackBaseUrl) {
		var ret string
		return ret
	}
	return *o.PlaybackBaseUrl
}

// GetPlaybackBaseUrlOk returns a tuple with the PlaybackBaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) GetPlaybackBaseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PlaybackBaseUrl) {
		return nil, false
	}
	return o.PlaybackBaseUrl, true
}

// HasPlaybackBaseUrl returns a boolean if a field has been set.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) HasPlaybackBaseUrl() bool {
	if o != nil && !IsNil(o.PlaybackBaseUrl) {
		return true
	}

	return false
}

// SetPlaybackBaseUrl gets a reference to the given string and assigns it to the PlaybackBaseUrl field.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) SetPlaybackBaseUrl(v string) {
	o.PlaybackBaseUrl = &v
}

// GetPlaybackQueryParams returns the PlaybackQueryParams field value if set, zero value otherwise.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) GetPlaybackQueryParams() string {
	if o == nil || IsNil(o.PlaybackQueryParams) {
		var ret string
		return ret
	}
	return *o.PlaybackQueryParams
}

// GetPlaybackQueryParamsOk returns a tuple with the PlaybackQueryParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) GetPlaybackQueryParamsOk() (*string, bool) {
	if o == nil || IsNil(o.PlaybackQueryParams) {
		return nil, false
	}
	return o.PlaybackQueryParams, true
}

// HasPlaybackQueryParams returns a boolean if a field has been set.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) HasPlaybackQueryParams() bool {
	if o != nil && !IsNil(o.PlaybackQueryParams) {
		return true
	}

	return false
}

// SetPlaybackQueryParams gets a reference to the given string and assigns it to the PlaybackQueryParams field.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) SetPlaybackQueryParams(v string) {
	o.PlaybackQueryParams = &v
}

// GetPublishBaseUrl returns the PublishBaseUrl field value if set, zero value otherwise.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) GetPublishBaseUrl() string {
	if o == nil || IsNil(o.PublishBaseUrl) {
		var ret string
		return ret
	}
	return *o.PublishBaseUrl
}

// GetPublishBaseUrlOk returns a tuple with the PublishBaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) GetPublishBaseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PublishBaseUrl) {
		return nil, false
	}
	return o.PublishBaseUrl, true
}

// HasPublishBaseUrl returns a boolean if a field has been set.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) HasPublishBaseUrl() bool {
	if o != nil && !IsNil(o.PublishBaseUrl) {
		return true
	}

	return false
}

// SetPublishBaseUrl gets a reference to the given string and assigns it to the PublishBaseUrl field.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) SetPublishBaseUrl(v string) {
	o.PublishBaseUrl = &v
}

// GetSecureHeaderAuth returns the SecureHeaderAuth field value if set, zero value otherwise.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) GetSecureHeaderAuth() ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInnerSecureHeaderAuth {
	if o == nil || IsNil(o.SecureHeaderAuth) {
		var ret ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInnerSecureHeaderAuth
		return ret
	}
	return *o.SecureHeaderAuth
}

// GetSecureHeaderAuthOk returns a tuple with the SecureHeaderAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) GetSecureHeaderAuthOk() (*ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInnerSecureHeaderAuth, bool) {
	if o == nil || IsNil(o.SecureHeaderAuth) {
		return nil, false
	}
	return o.SecureHeaderAuth, true
}

// HasSecureHeaderAuth returns a boolean if a field has been set.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) HasSecureHeaderAuth() bool {
	if o != nil && !IsNil(o.SecureHeaderAuth) {
		return true
	}

	return false
}

// SetSecureHeaderAuth gets a reference to the given ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInnerSecureHeaderAuth and assigns it to the SecureHeaderAuth field.
func (o *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) SetSecureHeaderAuth(v ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInnerSecureHeaderAuth) {
	o.SecureHeaderAuth = &v
}

func (o ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BasicAuth) {
		toSerialize["basic_auth"] = o.BasicAuth
	}
	if !IsNil(o.Compression) {
		toSerialize["compression"] = o.Compression
	}
	if !IsNil(o.DoNotMonitor) {
		toSerialize["do_not_monitor"] = o.DoNotMonitor
	}
	if !IsNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !IsNil(o.PlaybackBaseUrl) {
		toSerialize["playback_base_url"] = o.PlaybackBaseUrl
	}
	if !IsNil(o.PlaybackQueryParams) {
		toSerialize["playback_query_params"] = o.PlaybackQueryParams
	}
	if !IsNil(o.PublishBaseUrl) {
		toSerialize["publish_base_url"] = o.PublishBaseUrl
	}
	if !IsNil(o.SecureHeaderAuth) {
		toSerialize["secure_header_auth"] = o.SecureHeaderAuth
	}
	return toSerialize, nil
}

type NullableChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner struct {
	value *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner
	isSet bool
}

func (v NullableChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) Get() *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner {
	return v.value
}

func (v *NullableChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) Set(val *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner(val *ChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) *NullableChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner {
	return &NullableChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner{value: val, isSet: true}
}

func (v NullableChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelPackagingPackagersValueContentProtectionSimplePublishPointsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


