/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the ChannelTranscodeVideoEncodersInnerH264 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelTranscodeVideoEncodersInnerH264{}

// ChannelTranscodeVideoEncodersInnerH264 Configure the encoder to use the H.264 codec. Only one of ['H264Settings', 'H265Settings'] may be set.
type ChannelTranscodeVideoEncodersInnerH264 struct {
	// H.264 video profile, which defines various encoder features and settings. See https://en.wikipedia.org/wiki/Advanced_Video_Coding#Profiles for details.
	Profile *string `json:"profile,omitempty" enum:"BASELINE,MAIN,HIGH,HIGH_10,HIGH_422" doc:"H.264 video profile, which defines various encoder features and settings. See https://en.wikipedia.org/wiki/Advanced_Video_Coding#Profiles for details."`
}

// NewChannelTranscodeVideoEncodersInnerH264 instantiates a new ChannelTranscodeVideoEncodersInnerH264 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelTranscodeVideoEncodersInnerH264() *ChannelTranscodeVideoEncodersInnerH264 {
	this := ChannelTranscodeVideoEncodersInnerH264{}
	return &this
}

// NewChannelTranscodeVideoEncodersInnerH264WithDefaults instantiates a new ChannelTranscodeVideoEncodersInnerH264 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelTranscodeVideoEncodersInnerH264WithDefaults() *ChannelTranscodeVideoEncodersInnerH264 {
	this := ChannelTranscodeVideoEncodersInnerH264{}
	return &this
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *ChannelTranscodeVideoEncodersInnerH264) GetProfile() string {
	if o == nil || IsNil(o.Profile) {
		var ret string
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelTranscodeVideoEncodersInnerH264) GetProfileOk() (*string, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *ChannelTranscodeVideoEncodersInnerH264) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given string and assigns it to the Profile field.
func (o *ChannelTranscodeVideoEncodersInnerH264) SetProfile(v string) {
	o.Profile = &v
}

func (o ChannelTranscodeVideoEncodersInnerH264) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelTranscodeVideoEncodersInnerH264) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Profile) {
		toSerialize["profile"] = o.Profile
	}
	return toSerialize, nil
}

type NullableChannelTranscodeVideoEncodersInnerH264 struct {
	value *ChannelTranscodeVideoEncodersInnerH264
	isSet bool
}

func (v NullableChannelTranscodeVideoEncodersInnerH264) Get() *ChannelTranscodeVideoEncodersInnerH264 {
	return v.value
}

func (v *NullableChannelTranscodeVideoEncodersInnerH264) Set(val *ChannelTranscodeVideoEncodersInnerH264) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelTranscodeVideoEncodersInnerH264) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelTranscodeVideoEncodersInnerH264) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelTranscodeVideoEncodersInnerH264(val *ChannelTranscodeVideoEncodersInnerH264) *NullableChannelTranscodeVideoEncodersInnerH264 {
	return &NullableChannelTranscodeVideoEncodersInnerH264{value: val, isSet: true}
}

func (v NullableChannelTranscodeVideoEncodersInnerH264) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelTranscodeVideoEncodersInnerH264) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


