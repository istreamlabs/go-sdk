/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the ArchiveFERRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArchiveFERRequest{}

// ArchiveFERRequest struct for ArchiveFERRequest
type ArchiveFERRequest struct {
	// An optional URL to a JSON Schema document describing this resource
	Schema *string `json:"$schema,omitempty" format:"uri" doc:"An optional URL to a JSON Schema document describing this resource"`
	Archive ArchiveFERRequestArchive `json:"archive"`
	// Correlation ID for this FER archive request
	CorrelationId string `json:"correlation_id" doc:"Correlation ID for this FER archive request"`
	// Global query params
	GlobalParams string `json:"global_params" doc:"Global query params"`
	Notification ArchiveFERRequestNotification `json:"notification"`
	// Playback base URL for the FER
	PlaybackBaseUrl string `json:"playback_base_url" doc:"Playback base URL for the FER"`
	// Publications for fer archival
	Publications []ArchiveFERRequestPublicationsInner `json:"publications" doc:"Publications for fer archival"`
}

// NewArchiveFERRequest instantiates a new ArchiveFERRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArchiveFERRequest(archive ArchiveFERRequestArchive, correlationId string, globalParams string, notification ArchiveFERRequestNotification, playbackBaseUrl string, publications []ArchiveFERRequestPublicationsInner) *ArchiveFERRequest {
	this := ArchiveFERRequest{}
	this.Archive = archive
	this.CorrelationId = correlationId
	this.GlobalParams = globalParams
	this.Notification = notification
	this.PlaybackBaseUrl = playbackBaseUrl
	this.Publications = publications
	return &this
}

// NewArchiveFERRequestWithDefaults instantiates a new ArchiveFERRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArchiveFERRequestWithDefaults() *ArchiveFERRequest {
	this := ArchiveFERRequest{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *ArchiveFERRequest) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArchiveFERRequest) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *ArchiveFERRequest) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *ArchiveFERRequest) SetSchema(v string) {
	o.Schema = &v
}

// GetArchive returns the Archive field value
func (o *ArchiveFERRequest) GetArchive() ArchiveFERRequestArchive {
	if o == nil {
		var ret ArchiveFERRequestArchive
		return ret
	}

	return o.Archive
}

// GetArchiveOk returns a tuple with the Archive field value
// and a boolean to check if the value has been set.
func (o *ArchiveFERRequest) GetArchiveOk() (*ArchiveFERRequestArchive, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Archive, true
}

// SetArchive sets field value
func (o *ArchiveFERRequest) SetArchive(v ArchiveFERRequestArchive) {
	o.Archive = v
}

// GetCorrelationId returns the CorrelationId field value
func (o *ArchiveFERRequest) GetCorrelationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CorrelationId
}

// GetCorrelationIdOk returns a tuple with the CorrelationId field value
// and a boolean to check if the value has been set.
func (o *ArchiveFERRequest) GetCorrelationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CorrelationId, true
}

// SetCorrelationId sets field value
func (o *ArchiveFERRequest) SetCorrelationId(v string) {
	o.CorrelationId = v
}

// GetGlobalParams returns the GlobalParams field value
func (o *ArchiveFERRequest) GetGlobalParams() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GlobalParams
}

// GetGlobalParamsOk returns a tuple with the GlobalParams field value
// and a boolean to check if the value has been set.
func (o *ArchiveFERRequest) GetGlobalParamsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GlobalParams, true
}

// SetGlobalParams sets field value
func (o *ArchiveFERRequest) SetGlobalParams(v string) {
	o.GlobalParams = v
}

// GetNotification returns the Notification field value
func (o *ArchiveFERRequest) GetNotification() ArchiveFERRequestNotification {
	if o == nil {
		var ret ArchiveFERRequestNotification
		return ret
	}

	return o.Notification
}

// GetNotificationOk returns a tuple with the Notification field value
// and a boolean to check if the value has been set.
func (o *ArchiveFERRequest) GetNotificationOk() (*ArchiveFERRequestNotification, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Notification, true
}

// SetNotification sets field value
func (o *ArchiveFERRequest) SetNotification(v ArchiveFERRequestNotification) {
	o.Notification = v
}

// GetPlaybackBaseUrl returns the PlaybackBaseUrl field value
func (o *ArchiveFERRequest) GetPlaybackBaseUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlaybackBaseUrl
}

// GetPlaybackBaseUrlOk returns a tuple with the PlaybackBaseUrl field value
// and a boolean to check if the value has been set.
func (o *ArchiveFERRequest) GetPlaybackBaseUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlaybackBaseUrl, true
}

// SetPlaybackBaseUrl sets field value
func (o *ArchiveFERRequest) SetPlaybackBaseUrl(v string) {
	o.PlaybackBaseUrl = v
}

// GetPublications returns the Publications field value
func (o *ArchiveFERRequest) GetPublications() []ArchiveFERRequestPublicationsInner {
	if o == nil {
		var ret []ArchiveFERRequestPublicationsInner
		return ret
	}

	return o.Publications
}

// GetPublicationsOk returns a tuple with the Publications field value
// and a boolean to check if the value has been set.
func (o *ArchiveFERRequest) GetPublicationsOk() ([]ArchiveFERRequestPublicationsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Publications, true
}

// SetPublications sets field value
func (o *ArchiveFERRequest) SetPublications(v []ArchiveFERRequestPublicationsInner) {
	o.Publications = v
}

func (o ArchiveFERRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArchiveFERRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schema) {
		toSerialize["$schema"] = o.Schema
	}
	toSerialize["archive"] = o.Archive
	toSerialize["correlation_id"] = o.CorrelationId
	toSerialize["global_params"] = o.GlobalParams
	toSerialize["notification"] = o.Notification
	toSerialize["playback_base_url"] = o.PlaybackBaseUrl
	toSerialize["publications"] = o.Publications
	return toSerialize, nil
}

type NullableArchiveFERRequest struct {
	value *ArchiveFERRequest
	isSet bool
}

func (v NullableArchiveFERRequest) Get() *ArchiveFERRequest {
	return v.value
}

func (v *NullableArchiveFERRequest) Set(val *ArchiveFERRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableArchiveFERRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableArchiveFERRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArchiveFERRequest(val *ArchiveFERRequest) *NullableArchiveFERRequest {
	return &NullableArchiveFERRequest{value: val, isSet: true}
}

func (v NullableArchiveFERRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArchiveFERRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


