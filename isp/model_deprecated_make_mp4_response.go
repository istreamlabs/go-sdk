/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the DeprecatedMakeMP4Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeprecatedMakeMP4Response{}

// DeprecatedMakeMP4Response struct for DeprecatedMakeMP4Response
type DeprecatedMakeMP4Response struct {
	// An optional URL to a JSON Schema document describing this resource
	Schema *string `json:"$schema,omitempty" format:"uri" doc:"An optional URL to a JSON Schema document describing this resource"`
	// task id of the makemp4 task that has been created.
	Taskid string `json:"taskid" doc:"task id of the makemp4 task that has been created."`
}

// NewDeprecatedMakeMP4Response instantiates a new DeprecatedMakeMP4Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeprecatedMakeMP4Response(taskid string) *DeprecatedMakeMP4Response {
	this := DeprecatedMakeMP4Response{}
	this.Taskid = taskid
	return &this
}

// NewDeprecatedMakeMP4ResponseWithDefaults instantiates a new DeprecatedMakeMP4Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeprecatedMakeMP4ResponseWithDefaults() *DeprecatedMakeMP4Response {
	this := DeprecatedMakeMP4Response{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *DeprecatedMakeMP4Response) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeprecatedMakeMP4Response) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *DeprecatedMakeMP4Response) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *DeprecatedMakeMP4Response) SetSchema(v string) {
	o.Schema = &v
}

// GetTaskid returns the Taskid field value
func (o *DeprecatedMakeMP4Response) GetTaskid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Taskid
}

// GetTaskidOk returns a tuple with the Taskid field value
// and a boolean to check if the value has been set.
func (o *DeprecatedMakeMP4Response) GetTaskidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Taskid, true
}

// SetTaskid sets field value
func (o *DeprecatedMakeMP4Response) SetTaskid(v string) {
	o.Taskid = v
}

func (o DeprecatedMakeMP4Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeprecatedMakeMP4Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schema) {
		toSerialize["$schema"] = o.Schema
	}
	toSerialize["taskid"] = o.Taskid
	return toSerialize, nil
}

type NullableDeprecatedMakeMP4Response struct {
	value *DeprecatedMakeMP4Response
	isSet bool
}

func (v NullableDeprecatedMakeMP4Response) Get() *DeprecatedMakeMP4Response {
	return v.value
}

func (v *NullableDeprecatedMakeMP4Response) Set(val *DeprecatedMakeMP4Response) {
	v.value = val
	v.isSet = true
}

func (v NullableDeprecatedMakeMP4Response) IsSet() bool {
	return v.isSet
}

func (v *NullableDeprecatedMakeMP4Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeprecatedMakeMP4Response(val *DeprecatedMakeMP4Response) *NullableDeprecatedMakeMP4Response {
	return &NullableDeprecatedMakeMP4Response{value: val, isSet: true}
}

func (v NullableDeprecatedMakeMP4Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeprecatedMakeMP4Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


