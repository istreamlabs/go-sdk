/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// PinSourceRequest struct for PinSourceRequest
type PinSourceRequest struct {
	// An optional URL to a JSON Schema document describing this resource
	Schema *string `json:"$schema,omitempty"`
	// Which ingest origin to pin the transcoder to.
	IngestOrigin *string `json:"ingest_origin,omitempty"`
}

// NewPinSourceRequest instantiates a new PinSourceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPinSourceRequest() *PinSourceRequest {
	this := PinSourceRequest{}
	return &this
}

// NewPinSourceRequestWithDefaults instantiates a new PinSourceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPinSourceRequestWithDefaults() *PinSourceRequest {
	this := PinSourceRequest{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *PinSourceRequest) GetSchema() string {
	if o == nil || o.Schema == nil {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinSourceRequest) GetSchemaOk() (*string, bool) {
	if o == nil || o.Schema == nil {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *PinSourceRequest) HasSchema() bool {
	if o != nil && o.Schema != nil {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *PinSourceRequest) SetSchema(v string) {
	o.Schema = &v
}

// GetIngestOrigin returns the IngestOrigin field value if set, zero value otherwise.
func (o *PinSourceRequest) GetIngestOrigin() string {
	if o == nil || o.IngestOrigin == nil {
		var ret string
		return ret
	}
	return *o.IngestOrigin
}

// GetIngestOriginOk returns a tuple with the IngestOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PinSourceRequest) GetIngestOriginOk() (*string, bool) {
	if o == nil || o.IngestOrigin == nil {
		return nil, false
	}
	return o.IngestOrigin, true
}

// HasIngestOrigin returns a boolean if a field has been set.
func (o *PinSourceRequest) HasIngestOrigin() bool {
	if o != nil && o.IngestOrigin != nil {
		return true
	}

	return false
}

// SetIngestOrigin gets a reference to the given string and assigns it to the IngestOrigin field.
func (o *PinSourceRequest) SetIngestOrigin(v string) {
	o.IngestOrigin = &v
}

func (o PinSourceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Schema != nil {
		toSerialize["$schema"] = o.Schema
	}
	if o.IngestOrigin != nil {
		toSerialize["ingest_origin"] = o.IngestOrigin
	}
	return json.Marshal(toSerialize)
}

type NullablePinSourceRequest struct {
	value *PinSourceRequest
	isSet bool
}

func (v NullablePinSourceRequest) Get() *PinSourceRequest {
	return v.value
}

func (v *NullablePinSourceRequest) Set(val *PinSourceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePinSourceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePinSourceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePinSourceRequest(val *PinSourceRequest) *NullablePinSourceRequest {
	return &NullablePinSourceRequest{value: val, isSet: true}
}

func (v NullablePinSourceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePinSourceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


