/*
 * WBD Aventus Channels API
 *
 * API version: v1.19.22
 * Contact: live-control-plane-devs@wbd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the ChannelPlaybackOriginInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelPlaybackOriginInner{}

// ChannelPlaybackOriginInner struct for ChannelPlaybackOriginInner
type ChannelPlaybackOriginInner struct {
	Dash *ChannelPlaybackOriginInnerDash `json:"dash,omitempty"`
	FallbackManifestDefaults *ChannelPlaybackOriginInnerFallbackManifestDefaults `json:"fallback_manifest_defaults,omitempty"`
	Hls *ChannelPlaybackOriginInnerHls `json:"hls,omitempty"`
	PackagerConfig *ChannelPackagingPackagersValue `json:"packager_config,omitempty"`
	// packager_id is the ID used to identify the packager_config within the channel configuration.
	PackagerId *string `json:"packager_id,omitempty" doc:"packager_id is the ID used to identify the packager_config within the channel configuration."`
	PrimaryManifestDefaults *ChannelPlaybackOriginInnerFallbackManifestDefaults `json:"primary_manifest_defaults,omitempty"`
}

// NewChannelPlaybackOriginInner instantiates a new ChannelPlaybackOriginInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelPlaybackOriginInner() *ChannelPlaybackOriginInner {
	this := ChannelPlaybackOriginInner{}
	return &this
}

// NewChannelPlaybackOriginInnerWithDefaults instantiates a new ChannelPlaybackOriginInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelPlaybackOriginInnerWithDefaults() *ChannelPlaybackOriginInner {
	this := ChannelPlaybackOriginInner{}
	return &this
}

// GetDash returns the Dash field value if set, zero value otherwise.
func (o *ChannelPlaybackOriginInner) GetDash() ChannelPlaybackOriginInnerDash {
	if o == nil || IsNil(o.Dash) {
		var ret ChannelPlaybackOriginInnerDash
		return ret
	}
	return *o.Dash
}

// GetDashOk returns a tuple with the Dash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPlaybackOriginInner) GetDashOk() (*ChannelPlaybackOriginInnerDash, bool) {
	if o == nil || IsNil(o.Dash) {
		return nil, false
	}
	return o.Dash, true
}

// HasDash returns a boolean if a field has been set.
func (o *ChannelPlaybackOriginInner) HasDash() bool {
	if o != nil && !IsNil(o.Dash) {
		return true
	}

	return false
}

// SetDash gets a reference to the given ChannelPlaybackOriginInnerDash and assigns it to the Dash field.
func (o *ChannelPlaybackOriginInner) SetDash(v ChannelPlaybackOriginInnerDash) {
	o.Dash = &v
}

// GetFallbackManifestDefaults returns the FallbackManifestDefaults field value if set, zero value otherwise.
func (o *ChannelPlaybackOriginInner) GetFallbackManifestDefaults() ChannelPlaybackOriginInnerFallbackManifestDefaults {
	if o == nil || IsNil(o.FallbackManifestDefaults) {
		var ret ChannelPlaybackOriginInnerFallbackManifestDefaults
		return ret
	}
	return *o.FallbackManifestDefaults
}

// GetFallbackManifestDefaultsOk returns a tuple with the FallbackManifestDefaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPlaybackOriginInner) GetFallbackManifestDefaultsOk() (*ChannelPlaybackOriginInnerFallbackManifestDefaults, bool) {
	if o == nil || IsNil(o.FallbackManifestDefaults) {
		return nil, false
	}
	return o.FallbackManifestDefaults, true
}

// HasFallbackManifestDefaults returns a boolean if a field has been set.
func (o *ChannelPlaybackOriginInner) HasFallbackManifestDefaults() bool {
	if o != nil && !IsNil(o.FallbackManifestDefaults) {
		return true
	}

	return false
}

// SetFallbackManifestDefaults gets a reference to the given ChannelPlaybackOriginInnerFallbackManifestDefaults and assigns it to the FallbackManifestDefaults field.
func (o *ChannelPlaybackOriginInner) SetFallbackManifestDefaults(v ChannelPlaybackOriginInnerFallbackManifestDefaults) {
	o.FallbackManifestDefaults = &v
}

// GetHls returns the Hls field value if set, zero value otherwise.
func (o *ChannelPlaybackOriginInner) GetHls() ChannelPlaybackOriginInnerHls {
	if o == nil || IsNil(o.Hls) {
		var ret ChannelPlaybackOriginInnerHls
		return ret
	}
	return *o.Hls
}

// GetHlsOk returns a tuple with the Hls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPlaybackOriginInner) GetHlsOk() (*ChannelPlaybackOriginInnerHls, bool) {
	if o == nil || IsNil(o.Hls) {
		return nil, false
	}
	return o.Hls, true
}

// HasHls returns a boolean if a field has been set.
func (o *ChannelPlaybackOriginInner) HasHls() bool {
	if o != nil && !IsNil(o.Hls) {
		return true
	}

	return false
}

// SetHls gets a reference to the given ChannelPlaybackOriginInnerHls and assigns it to the Hls field.
func (o *ChannelPlaybackOriginInner) SetHls(v ChannelPlaybackOriginInnerHls) {
	o.Hls = &v
}

// GetPackagerConfig returns the PackagerConfig field value if set, zero value otherwise.
func (o *ChannelPlaybackOriginInner) GetPackagerConfig() ChannelPackagingPackagersValue {
	if o == nil || IsNil(o.PackagerConfig) {
		var ret ChannelPackagingPackagersValue
		return ret
	}
	return *o.PackagerConfig
}

// GetPackagerConfigOk returns a tuple with the PackagerConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPlaybackOriginInner) GetPackagerConfigOk() (*ChannelPackagingPackagersValue, bool) {
	if o == nil || IsNil(o.PackagerConfig) {
		return nil, false
	}
	return o.PackagerConfig, true
}

// HasPackagerConfig returns a boolean if a field has been set.
func (o *ChannelPlaybackOriginInner) HasPackagerConfig() bool {
	if o != nil && !IsNil(o.PackagerConfig) {
		return true
	}

	return false
}

// SetPackagerConfig gets a reference to the given ChannelPackagingPackagersValue and assigns it to the PackagerConfig field.
func (o *ChannelPlaybackOriginInner) SetPackagerConfig(v ChannelPackagingPackagersValue) {
	o.PackagerConfig = &v
}

// GetPackagerId returns the PackagerId field value if set, zero value otherwise.
func (o *ChannelPlaybackOriginInner) GetPackagerId() string {
	if o == nil || IsNil(o.PackagerId) {
		var ret string
		return ret
	}
	return *o.PackagerId
}

// GetPackagerIdOk returns a tuple with the PackagerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPlaybackOriginInner) GetPackagerIdOk() (*string, bool) {
	if o == nil || IsNil(o.PackagerId) {
		return nil, false
	}
	return o.PackagerId, true
}

// HasPackagerId returns a boolean if a field has been set.
func (o *ChannelPlaybackOriginInner) HasPackagerId() bool {
	if o != nil && !IsNil(o.PackagerId) {
		return true
	}

	return false
}

// SetPackagerId gets a reference to the given string and assigns it to the PackagerId field.
func (o *ChannelPlaybackOriginInner) SetPackagerId(v string) {
	o.PackagerId = &v
}

// GetPrimaryManifestDefaults returns the PrimaryManifestDefaults field value if set, zero value otherwise.
func (o *ChannelPlaybackOriginInner) GetPrimaryManifestDefaults() ChannelPlaybackOriginInnerFallbackManifestDefaults {
	if o == nil || IsNil(o.PrimaryManifestDefaults) {
		var ret ChannelPlaybackOriginInnerFallbackManifestDefaults
		return ret
	}
	return *o.PrimaryManifestDefaults
}

// GetPrimaryManifestDefaultsOk returns a tuple with the PrimaryManifestDefaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPlaybackOriginInner) GetPrimaryManifestDefaultsOk() (*ChannelPlaybackOriginInnerFallbackManifestDefaults, bool) {
	if o == nil || IsNil(o.PrimaryManifestDefaults) {
		return nil, false
	}
	return o.PrimaryManifestDefaults, true
}

// HasPrimaryManifestDefaults returns a boolean if a field has been set.
func (o *ChannelPlaybackOriginInner) HasPrimaryManifestDefaults() bool {
	if o != nil && !IsNil(o.PrimaryManifestDefaults) {
		return true
	}

	return false
}

// SetPrimaryManifestDefaults gets a reference to the given ChannelPlaybackOriginInnerFallbackManifestDefaults and assigns it to the PrimaryManifestDefaults field.
func (o *ChannelPlaybackOriginInner) SetPrimaryManifestDefaults(v ChannelPlaybackOriginInnerFallbackManifestDefaults) {
	o.PrimaryManifestDefaults = &v
}

func (o ChannelPlaybackOriginInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelPlaybackOriginInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Dash) {
		toSerialize["dash"] = o.Dash
	}
	if !IsNil(o.FallbackManifestDefaults) {
		toSerialize["fallback_manifest_defaults"] = o.FallbackManifestDefaults
	}
	if !IsNil(o.Hls) {
		toSerialize["hls"] = o.Hls
	}
	if !IsNil(o.PackagerConfig) {
		toSerialize["packager_config"] = o.PackagerConfig
	}
	if !IsNil(o.PackagerId) {
		toSerialize["packager_id"] = o.PackagerId
	}
	if !IsNil(o.PrimaryManifestDefaults) {
		toSerialize["primary_manifest_defaults"] = o.PrimaryManifestDefaults
	}
	return toSerialize, nil
}

type NullableChannelPlaybackOriginInner struct {
	value *ChannelPlaybackOriginInner
	isSet bool
}

func (v NullableChannelPlaybackOriginInner) Get() *ChannelPlaybackOriginInner {
	return v.value
}

func (v *NullableChannelPlaybackOriginInner) Set(val *ChannelPlaybackOriginInner) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelPlaybackOriginInner) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelPlaybackOriginInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelPlaybackOriginInner(val *ChannelPlaybackOriginInner) *NullableChannelPlaybackOriginInner {
	return &NullableChannelPlaybackOriginInner{value: val, isSet: true}
}

func (v NullableChannelPlaybackOriginInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelPlaybackOriginInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


