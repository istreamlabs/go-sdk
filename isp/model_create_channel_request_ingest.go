/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// CreateChannelRequestIngest Ingest configures inputs for the transcoder.
type CreateChannelRequestIngest struct {
	Slate *ChannelIngestSlate `json:"slate,omitempty"`
	Source CreateChannelRequestIngestSource `json:"source"`
	AdditionalProperties map[string]interface{}
}

type _CreateChannelRequestIngest CreateChannelRequestIngest

// NewCreateChannelRequestIngest instantiates a new CreateChannelRequestIngest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateChannelRequestIngest(source CreateChannelRequestIngestSource, ) *CreateChannelRequestIngest {
	this := CreateChannelRequestIngest{}
	this.Source = source
	return &this
}

// NewCreateChannelRequestIngestWithDefaults instantiates a new CreateChannelRequestIngest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateChannelRequestIngestWithDefaults() *CreateChannelRequestIngest {
	this := CreateChannelRequestIngest{}
	return &this
}

// GetSlate returns the Slate field value if set, zero value otherwise.
func (o *CreateChannelRequestIngest) GetSlate() ChannelIngestSlate {
	if o == nil || o.Slate == nil {
		var ret ChannelIngestSlate
		return ret
	}
	return *o.Slate
}

// GetSlateOk returns a tuple with the Slate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateChannelRequestIngest) GetSlateOk() (*ChannelIngestSlate, bool) {
	if o == nil || o.Slate == nil {
		return nil, false
	}
	return o.Slate, true
}

// HasSlate returns a boolean if a field has been set.
func (o *CreateChannelRequestIngest) HasSlate() bool {
	if o != nil && o.Slate != nil {
		return true
	}

	return false
}

// SetSlate gets a reference to the given ChannelIngestSlate and assigns it to the Slate field.
func (o *CreateChannelRequestIngest) SetSlate(v ChannelIngestSlate) {
	o.Slate = &v
}

// GetSource returns the Source field value
func (o *CreateChannelRequestIngest) GetSource() CreateChannelRequestIngestSource {
	if o == nil  {
		var ret CreateChannelRequestIngestSource
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *CreateChannelRequestIngest) GetSourceOk() (*CreateChannelRequestIngestSource, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *CreateChannelRequestIngest) SetSource(v CreateChannelRequestIngestSource) {
	o.Source = v
}

func (o CreateChannelRequestIngest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Slate != nil {
		toSerialize["slate"] = o.Slate
	}
	if true {
		toSerialize["source"] = o.Source
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CreateChannelRequestIngest) UnmarshalJSON(bytes []byte) (err error) {
	varCreateChannelRequestIngest := _CreateChannelRequestIngest{}

	if err = json.Unmarshal(bytes, &varCreateChannelRequestIngest); err == nil {
		*o = CreateChannelRequestIngest(varCreateChannelRequestIngest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "slate")
		delete(additionalProperties, "source")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateChannelRequestIngest struct {
	value *CreateChannelRequestIngest
	isSet bool
}

func (v NullableCreateChannelRequestIngest) Get() *CreateChannelRequestIngest {
	return v.value
}

func (v *NullableCreateChannelRequestIngest) Set(val *CreateChannelRequestIngest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateChannelRequestIngest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateChannelRequestIngest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateChannelRequestIngest(val *CreateChannelRequestIngest) *NullableCreateChannelRequestIngest {
	return &NullableCreateChannelRequestIngest{value: val, isSet: true}
}

func (v NullableCreateChannelRequestIngest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateChannelRequestIngest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


