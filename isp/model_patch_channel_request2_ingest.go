/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// PatchChannelRequest2Ingest Ingest configures inputs for the transcoder.
type PatchChannelRequest2Ingest struct {
	Slate *ChannelIngestSlate `json:"slate,omitempty"`
	Source *ChannelIngestSource `json:"source,omitempty"`
}

// NewPatchChannelRequest2Ingest instantiates a new PatchChannelRequest2Ingest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchChannelRequest2Ingest() *PatchChannelRequest2Ingest {
	this := PatchChannelRequest2Ingest{}
	return &this
}

// NewPatchChannelRequest2IngestWithDefaults instantiates a new PatchChannelRequest2Ingest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchChannelRequest2IngestWithDefaults() *PatchChannelRequest2Ingest {
	this := PatchChannelRequest2Ingest{}
	return &this
}

// GetSlate returns the Slate field value if set, zero value otherwise.
func (o *PatchChannelRequest2Ingest) GetSlate() ChannelIngestSlate {
	if o == nil || o.Slate == nil {
		var ret ChannelIngestSlate
		return ret
	}
	return *o.Slate
}

// GetSlateOk returns a tuple with the Slate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchChannelRequest2Ingest) GetSlateOk() (*ChannelIngestSlate, bool) {
	if o == nil || o.Slate == nil {
		return nil, false
	}
	return o.Slate, true
}

// HasSlate returns a boolean if a field has been set.
func (o *PatchChannelRequest2Ingest) HasSlate() bool {
	if o != nil && o.Slate != nil {
		return true
	}

	return false
}

// SetSlate gets a reference to the given ChannelIngestSlate and assigns it to the Slate field.
func (o *PatchChannelRequest2Ingest) SetSlate(v ChannelIngestSlate) {
	o.Slate = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *PatchChannelRequest2Ingest) GetSource() ChannelIngestSource {
	if o == nil || o.Source == nil {
		var ret ChannelIngestSource
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchChannelRequest2Ingest) GetSourceOk() (*ChannelIngestSource, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *PatchChannelRequest2Ingest) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given ChannelIngestSource and assigns it to the Source field.
func (o *PatchChannelRequest2Ingest) SetSource(v ChannelIngestSource) {
	o.Source = &v
}

func (o PatchChannelRequest2Ingest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Slate != nil {
		toSerialize["slate"] = o.Slate
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	return json.Marshal(toSerialize)
}

type NullablePatchChannelRequest2Ingest struct {
	value *PatchChannelRequest2Ingest
	isSet bool
}

func (v NullablePatchChannelRequest2Ingest) Get() *PatchChannelRequest2Ingest {
	return v.value
}

func (v *NullablePatchChannelRequest2Ingest) Set(val *PatchChannelRequest2Ingest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchChannelRequest2Ingest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchChannelRequest2Ingest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchChannelRequest2Ingest(val *PatchChannelRequest2Ingest) *NullablePatchChannelRequest2Ingest {
	return &NullablePatchChannelRequest2Ingest{value: val, isSet: true}
}

func (v NullablePatchChannelRequest2Ingest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchChannelRequest2Ingest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


