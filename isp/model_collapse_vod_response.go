/*
 * WBD Aventus Channels API
 *
 * API version: v1.19.22
 * Contact: live-control-plane-devs@wbd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the CollapseVODResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CollapseVODResponse{}

// CollapseVODResponse struct for CollapseVODResponse
type CollapseVODResponse struct {
	// An optional URL to a JSON Schema document describing this resource
	Schema *string `json:"$schema,omitempty" format:"uri" doc:"An optional URL to a JSON Schema document describing this resource"`
	// New Clip ID for collapsed vod
	ClipId int64 `json:"clip_id" format:"int64" doc:"New Clip ID for collapsed vod"`
	// Identifies collapse task id
	TaskId string `json:"task_id" doc:"Identifies collapse task id"`
}

// NewCollapseVODResponse instantiates a new CollapseVODResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollapseVODResponse(clipId int64, taskId string) *CollapseVODResponse {
	this := CollapseVODResponse{}
	this.ClipId = clipId
	this.TaskId = taskId
	return &this
}

// NewCollapseVODResponseWithDefaults instantiates a new CollapseVODResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollapseVODResponseWithDefaults() *CollapseVODResponse {
	this := CollapseVODResponse{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *CollapseVODResponse) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollapseVODResponse) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *CollapseVODResponse) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *CollapseVODResponse) SetSchema(v string) {
	o.Schema = &v
}

// GetClipId returns the ClipId field value
func (o *CollapseVODResponse) GetClipId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ClipId
}

// GetClipIdOk returns a tuple with the ClipId field value
// and a boolean to check if the value has been set.
func (o *CollapseVODResponse) GetClipIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClipId, true
}

// SetClipId sets field value
func (o *CollapseVODResponse) SetClipId(v int64) {
	o.ClipId = v
}

// GetTaskId returns the TaskId field value
func (o *CollapseVODResponse) GetTaskId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value
// and a boolean to check if the value has been set.
func (o *CollapseVODResponse) GetTaskIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TaskId, true
}

// SetTaskId sets field value
func (o *CollapseVODResponse) SetTaskId(v string) {
	o.TaskId = v
}

func (o CollapseVODResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CollapseVODResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schema) {
		toSerialize["$schema"] = o.Schema
	}
	toSerialize["clip_id"] = o.ClipId
	toSerialize["task_id"] = o.TaskId
	return toSerialize, nil
}

type NullableCollapseVODResponse struct {
	value *CollapseVODResponse
	isSet bool
}

func (v NullableCollapseVODResponse) Get() *CollapseVODResponse {
	return v.value
}

func (v *NullableCollapseVODResponse) Set(val *CollapseVODResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCollapseVODResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCollapseVODResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollapseVODResponse(val *CollapseVODResponse) *NullableCollapseVODResponse {
	return &NullableCollapseVODResponse{value: val, isSet: true}
}

func (v NullableCollapseVODResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollapseVODResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


