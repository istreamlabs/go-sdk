/*
 * WBD Aventus Channels API
 *
 * API version: 0.0.0
 * Contact: live-control-plane-devs@wbd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the SetDynamicStateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetDynamicStateRequest{}

// SetDynamicStateRequest struct for SetDynamicStateRequest
type SetDynamicStateRequest struct {
	// An optional URL to a JSON Schema document describing this resource
	Schema *string `json:"$schema,omitempty" format:"uri" doc:"An optional URL to a JSON Schema document describing this resource"`
	// The channel's internal id.
	ChannelUrn *string `json:"channel_urn,omitempty" doc:"The channel's internal id."`
	DynamicState SetDynamicStateRequestDynamicState `json:"dynamic_state"`
	// DynamicStateFields specifies the fields to update in the dynamic state. Any fields not specified will be ignored.
	DynamicStateFields []string `json:"dynamic_state_fields,omitempty" minItems:"1" enum:"TEXT_OVERLAYS,GRAPHIC_OVERLAYS,AUDIO_MUTES" doc:"DynamicStateFields specifies the fields to update in the dynamic state. Any fields not specified will be ignored."`
	// The channel's user provided id.
	ExternalId *string `json:"external_id,omitempty" doc:"The channel's user provided id."`
	// The channel's organization.
	Organization *string `json:"organization,omitempty" doc:"The channel's organization."`
}

// NewSetDynamicStateRequest instantiates a new SetDynamicStateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetDynamicStateRequest(dynamicState SetDynamicStateRequestDynamicState) *SetDynamicStateRequest {
	this := SetDynamicStateRequest{}
	this.DynamicState = dynamicState
	return &this
}

// NewSetDynamicStateRequestWithDefaults instantiates a new SetDynamicStateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetDynamicStateRequestWithDefaults() *SetDynamicStateRequest {
	this := SetDynamicStateRequest{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *SetDynamicStateRequest) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetDynamicStateRequest) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *SetDynamicStateRequest) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *SetDynamicStateRequest) SetSchema(v string) {
	o.Schema = &v
}

// GetChannelUrn returns the ChannelUrn field value if set, zero value otherwise.
func (o *SetDynamicStateRequest) GetChannelUrn() string {
	if o == nil || IsNil(o.ChannelUrn) {
		var ret string
		return ret
	}
	return *o.ChannelUrn
}

// GetChannelUrnOk returns a tuple with the ChannelUrn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetDynamicStateRequest) GetChannelUrnOk() (*string, bool) {
	if o == nil || IsNil(o.ChannelUrn) {
		return nil, false
	}
	return o.ChannelUrn, true
}

// HasChannelUrn returns a boolean if a field has been set.
func (o *SetDynamicStateRequest) HasChannelUrn() bool {
	if o != nil && !IsNil(o.ChannelUrn) {
		return true
	}

	return false
}

// SetChannelUrn gets a reference to the given string and assigns it to the ChannelUrn field.
func (o *SetDynamicStateRequest) SetChannelUrn(v string) {
	o.ChannelUrn = &v
}

// GetDynamicState returns the DynamicState field value
func (o *SetDynamicStateRequest) GetDynamicState() SetDynamicStateRequestDynamicState {
	if o == nil {
		var ret SetDynamicStateRequestDynamicState
		return ret
	}

	return o.DynamicState
}

// GetDynamicStateOk returns a tuple with the DynamicState field value
// and a boolean to check if the value has been set.
func (o *SetDynamicStateRequest) GetDynamicStateOk() (*SetDynamicStateRequestDynamicState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DynamicState, true
}

// SetDynamicState sets field value
func (o *SetDynamicStateRequest) SetDynamicState(v SetDynamicStateRequestDynamicState) {
	o.DynamicState = v
}

// GetDynamicStateFields returns the DynamicStateFields field value if set, zero value otherwise.
func (o *SetDynamicStateRequest) GetDynamicStateFields() []string {
	if o == nil || IsNil(o.DynamicStateFields) {
		var ret []string
		return ret
	}
	return o.DynamicStateFields
}

// GetDynamicStateFieldsOk returns a tuple with the DynamicStateFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetDynamicStateRequest) GetDynamicStateFieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.DynamicStateFields) {
		return nil, false
	}
	return o.DynamicStateFields, true
}

// HasDynamicStateFields returns a boolean if a field has been set.
func (o *SetDynamicStateRequest) HasDynamicStateFields() bool {
	if o != nil && !IsNil(o.DynamicStateFields) {
		return true
	}

	return false
}

// SetDynamicStateFields gets a reference to the given []string and assigns it to the DynamicStateFields field.
func (o *SetDynamicStateRequest) SetDynamicStateFields(v []string) {
	o.DynamicStateFields = v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *SetDynamicStateRequest) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetDynamicStateRequest) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *SetDynamicStateRequest) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *SetDynamicStateRequest) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *SetDynamicStateRequest) GetOrganization() string {
	if o == nil || IsNil(o.Organization) {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetDynamicStateRequest) GetOrganizationOk() (*string, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *SetDynamicStateRequest) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *SetDynamicStateRequest) SetOrganization(v string) {
	o.Organization = &v
}

func (o SetDynamicStateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetDynamicStateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schema) {
		toSerialize["$schema"] = o.Schema
	}
	if !IsNil(o.ChannelUrn) {
		toSerialize["channel_urn"] = o.ChannelUrn
	}
	toSerialize["dynamic_state"] = o.DynamicState
	if !IsNil(o.DynamicStateFields) {
		toSerialize["dynamic_state_fields"] = o.DynamicStateFields
	}
	if !IsNil(o.ExternalId) {
		toSerialize["external_id"] = o.ExternalId
	}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	return toSerialize, nil
}

type NullableSetDynamicStateRequest struct {
	value *SetDynamicStateRequest
	isSet bool
}

func (v NullableSetDynamicStateRequest) Get() *SetDynamicStateRequest {
	return v.value
}

func (v *NullableSetDynamicStateRequest) Set(val *SetDynamicStateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetDynamicStateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetDynamicStateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetDynamicStateRequest(val *SetDynamicStateRequest) *NullableSetDynamicStateRequest {
	return &NullableSetDynamicStateRequest{value: val, isSet: true}
}

func (v NullableSetDynamicStateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetDynamicStateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


