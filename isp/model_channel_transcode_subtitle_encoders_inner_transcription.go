/*
 * WBD Aventus Channels API
 *
 * API version: 0.0.0
 * Contact: live-control-plane-devs@wbd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the ChannelTranscodeSubtitleEncodersInnerTranscription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelTranscodeSubtitleEncodersInnerTranscription{}

// ChannelTranscodeSubtitleEncodersInnerTranscription Generate subtitles via automatic transcription of an audio source. Only one of ['teletext', 'atsc_captions', 'transcription'] may be set.
type ChannelTranscodeSubtitleEncodersInnerTranscription struct {
	// Identifies the 'AudioSource' to be transcribed.
	AudioSourceId *string `json:"audio_source_id,omitempty" minLength:"1" doc:"Identifies the 'AudioSource' to be transcribed."`
}

// NewChannelTranscodeSubtitleEncodersInnerTranscription instantiates a new ChannelTranscodeSubtitleEncodersInnerTranscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelTranscodeSubtitleEncodersInnerTranscription() *ChannelTranscodeSubtitleEncodersInnerTranscription {
	this := ChannelTranscodeSubtitleEncodersInnerTranscription{}
	return &this
}

// NewChannelTranscodeSubtitleEncodersInnerTranscriptionWithDefaults instantiates a new ChannelTranscodeSubtitleEncodersInnerTranscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelTranscodeSubtitleEncodersInnerTranscriptionWithDefaults() *ChannelTranscodeSubtitleEncodersInnerTranscription {
	this := ChannelTranscodeSubtitleEncodersInnerTranscription{}
	return &this
}

// GetAudioSourceId returns the AudioSourceId field value if set, zero value otherwise.
func (o *ChannelTranscodeSubtitleEncodersInnerTranscription) GetAudioSourceId() string {
	if o == nil || IsNil(o.AudioSourceId) {
		var ret string
		return ret
	}
	return *o.AudioSourceId
}

// GetAudioSourceIdOk returns a tuple with the AudioSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelTranscodeSubtitleEncodersInnerTranscription) GetAudioSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.AudioSourceId) {
		return nil, false
	}
	return o.AudioSourceId, true
}

// HasAudioSourceId returns a boolean if a field has been set.
func (o *ChannelTranscodeSubtitleEncodersInnerTranscription) HasAudioSourceId() bool {
	if o != nil && !IsNil(o.AudioSourceId) {
		return true
	}

	return false
}

// SetAudioSourceId gets a reference to the given string and assigns it to the AudioSourceId field.
func (o *ChannelTranscodeSubtitleEncodersInnerTranscription) SetAudioSourceId(v string) {
	o.AudioSourceId = &v
}

func (o ChannelTranscodeSubtitleEncodersInnerTranscription) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelTranscodeSubtitleEncodersInnerTranscription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AudioSourceId) {
		toSerialize["audio_source_id"] = o.AudioSourceId
	}
	return toSerialize, nil
}

type NullableChannelTranscodeSubtitleEncodersInnerTranscription struct {
	value *ChannelTranscodeSubtitleEncodersInnerTranscription
	isSet bool
}

func (v NullableChannelTranscodeSubtitleEncodersInnerTranscription) Get() *ChannelTranscodeSubtitleEncodersInnerTranscription {
	return v.value
}

func (v *NullableChannelTranscodeSubtitleEncodersInnerTranscription) Set(val *ChannelTranscodeSubtitleEncodersInnerTranscription) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelTranscodeSubtitleEncodersInnerTranscription) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelTranscodeSubtitleEncodersInnerTranscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelTranscodeSubtitleEncodersInnerTranscription(val *ChannelTranscodeSubtitleEncodersInnerTranscription) *NullableChannelTranscodeSubtitleEncodersInnerTranscription {
	return &NullableChannelTranscodeSubtitleEncodersInnerTranscription{value: val, isSet: true}
}

func (v NullableChannelTranscodeSubtitleEncodersInnerTranscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelTranscodeSubtitleEncodersInnerTranscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


