/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// ChannelPlaybackContentProtection Content Protection settings
type ChannelPlaybackContentProtection struct {
	Atlas *ChannelPackagingContentProtectionAtlas `json:"atlas,omitempty"`
	BulkFile *ChannelPackagingContentProtectionBulkFile `json:"bulk_file,omitempty"`
	Common *ChannelPackagingContentProtectionCommon `json:"common,omitempty"`
	Cpix *ChannelPackagingContentProtectionCpix `json:"cpix,omitempty"`
	KeyRotation *ChannelPackagingContentProtectionKeyRotation `json:"key_rotation,omitempty"`
	// Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
	SampleAes *map[string]interface{} `json:"sample_aes,omitempty"`
	Simple *ChannelPackagingContentProtectionSimple `json:"simple,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ChannelPlaybackContentProtection ChannelPlaybackContentProtection

// NewChannelPlaybackContentProtection instantiates a new ChannelPlaybackContentProtection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelPlaybackContentProtection() *ChannelPlaybackContentProtection {
	this := ChannelPlaybackContentProtection{}
	return &this
}

// NewChannelPlaybackContentProtectionWithDefaults instantiates a new ChannelPlaybackContentProtection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelPlaybackContentProtectionWithDefaults() *ChannelPlaybackContentProtection {
	this := ChannelPlaybackContentProtection{}
	return &this
}

// GetAtlas returns the Atlas field value if set, zero value otherwise.
func (o *ChannelPlaybackContentProtection) GetAtlas() ChannelPackagingContentProtectionAtlas {
	if o == nil || o.Atlas == nil {
		var ret ChannelPackagingContentProtectionAtlas
		return ret
	}
	return *o.Atlas
}

// GetAtlasOk returns a tuple with the Atlas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPlaybackContentProtection) GetAtlasOk() (*ChannelPackagingContentProtectionAtlas, bool) {
	if o == nil || o.Atlas == nil {
		return nil, false
	}
	return o.Atlas, true
}

// HasAtlas returns a boolean if a field has been set.
func (o *ChannelPlaybackContentProtection) HasAtlas() bool {
	if o != nil && o.Atlas != nil {
		return true
	}

	return false
}

// SetAtlas gets a reference to the given ChannelPackagingContentProtectionAtlas and assigns it to the Atlas field.
func (o *ChannelPlaybackContentProtection) SetAtlas(v ChannelPackagingContentProtectionAtlas) {
	o.Atlas = &v
}

// GetBulkFile returns the BulkFile field value if set, zero value otherwise.
func (o *ChannelPlaybackContentProtection) GetBulkFile() ChannelPackagingContentProtectionBulkFile {
	if o == nil || o.BulkFile == nil {
		var ret ChannelPackagingContentProtectionBulkFile
		return ret
	}
	return *o.BulkFile
}

// GetBulkFileOk returns a tuple with the BulkFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPlaybackContentProtection) GetBulkFileOk() (*ChannelPackagingContentProtectionBulkFile, bool) {
	if o == nil || o.BulkFile == nil {
		return nil, false
	}
	return o.BulkFile, true
}

// HasBulkFile returns a boolean if a field has been set.
func (o *ChannelPlaybackContentProtection) HasBulkFile() bool {
	if o != nil && o.BulkFile != nil {
		return true
	}

	return false
}

// SetBulkFile gets a reference to the given ChannelPackagingContentProtectionBulkFile and assigns it to the BulkFile field.
func (o *ChannelPlaybackContentProtection) SetBulkFile(v ChannelPackagingContentProtectionBulkFile) {
	o.BulkFile = &v
}

// GetCommon returns the Common field value if set, zero value otherwise.
func (o *ChannelPlaybackContentProtection) GetCommon() ChannelPackagingContentProtectionCommon {
	if o == nil || o.Common == nil {
		var ret ChannelPackagingContentProtectionCommon
		return ret
	}
	return *o.Common
}

// GetCommonOk returns a tuple with the Common field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPlaybackContentProtection) GetCommonOk() (*ChannelPackagingContentProtectionCommon, bool) {
	if o == nil || o.Common == nil {
		return nil, false
	}
	return o.Common, true
}

// HasCommon returns a boolean if a field has been set.
func (o *ChannelPlaybackContentProtection) HasCommon() bool {
	if o != nil && o.Common != nil {
		return true
	}

	return false
}

// SetCommon gets a reference to the given ChannelPackagingContentProtectionCommon and assigns it to the Common field.
func (o *ChannelPlaybackContentProtection) SetCommon(v ChannelPackagingContentProtectionCommon) {
	o.Common = &v
}

// GetCpix returns the Cpix field value if set, zero value otherwise.
func (o *ChannelPlaybackContentProtection) GetCpix() ChannelPackagingContentProtectionCpix {
	if o == nil || o.Cpix == nil {
		var ret ChannelPackagingContentProtectionCpix
		return ret
	}
	return *o.Cpix
}

// GetCpixOk returns a tuple with the Cpix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPlaybackContentProtection) GetCpixOk() (*ChannelPackagingContentProtectionCpix, bool) {
	if o == nil || o.Cpix == nil {
		return nil, false
	}
	return o.Cpix, true
}

// HasCpix returns a boolean if a field has been set.
func (o *ChannelPlaybackContentProtection) HasCpix() bool {
	if o != nil && o.Cpix != nil {
		return true
	}

	return false
}

// SetCpix gets a reference to the given ChannelPackagingContentProtectionCpix and assigns it to the Cpix field.
func (o *ChannelPlaybackContentProtection) SetCpix(v ChannelPackagingContentProtectionCpix) {
	o.Cpix = &v
}

// GetKeyRotation returns the KeyRotation field value if set, zero value otherwise.
func (o *ChannelPlaybackContentProtection) GetKeyRotation() ChannelPackagingContentProtectionKeyRotation {
	if o == nil || o.KeyRotation == nil {
		var ret ChannelPackagingContentProtectionKeyRotation
		return ret
	}
	return *o.KeyRotation
}

// GetKeyRotationOk returns a tuple with the KeyRotation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPlaybackContentProtection) GetKeyRotationOk() (*ChannelPackagingContentProtectionKeyRotation, bool) {
	if o == nil || o.KeyRotation == nil {
		return nil, false
	}
	return o.KeyRotation, true
}

// HasKeyRotation returns a boolean if a field has been set.
func (o *ChannelPlaybackContentProtection) HasKeyRotation() bool {
	if o != nil && o.KeyRotation != nil {
		return true
	}

	return false
}

// SetKeyRotation gets a reference to the given ChannelPackagingContentProtectionKeyRotation and assigns it to the KeyRotation field.
func (o *ChannelPlaybackContentProtection) SetKeyRotation(v ChannelPackagingContentProtectionKeyRotation) {
	o.KeyRotation = &v
}

// GetSampleAes returns the SampleAes field value if set, zero value otherwise.
func (o *ChannelPlaybackContentProtection) GetSampleAes() map[string]interface{} {
	if o == nil || o.SampleAes == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.SampleAes
}

// GetSampleAesOk returns a tuple with the SampleAes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPlaybackContentProtection) GetSampleAesOk() (*map[string]interface{}, bool) {
	if o == nil || o.SampleAes == nil {
		return nil, false
	}
	return o.SampleAes, true
}

// HasSampleAes returns a boolean if a field has been set.
func (o *ChannelPlaybackContentProtection) HasSampleAes() bool {
	if o != nil && o.SampleAes != nil {
		return true
	}

	return false
}

// SetSampleAes gets a reference to the given map[string]interface{} and assigns it to the SampleAes field.
func (o *ChannelPlaybackContentProtection) SetSampleAes(v map[string]interface{}) {
	o.SampleAes = &v
}

// GetSimple returns the Simple field value if set, zero value otherwise.
func (o *ChannelPlaybackContentProtection) GetSimple() ChannelPackagingContentProtectionSimple {
	if o == nil || o.Simple == nil {
		var ret ChannelPackagingContentProtectionSimple
		return ret
	}
	return *o.Simple
}

// GetSimpleOk returns a tuple with the Simple field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPlaybackContentProtection) GetSimpleOk() (*ChannelPackagingContentProtectionSimple, bool) {
	if o == nil || o.Simple == nil {
		return nil, false
	}
	return o.Simple, true
}

// HasSimple returns a boolean if a field has been set.
func (o *ChannelPlaybackContentProtection) HasSimple() bool {
	if o != nil && o.Simple != nil {
		return true
	}

	return false
}

// SetSimple gets a reference to the given ChannelPackagingContentProtectionSimple and assigns it to the Simple field.
func (o *ChannelPlaybackContentProtection) SetSimple(v ChannelPackagingContentProtectionSimple) {
	o.Simple = &v
}

func (o ChannelPlaybackContentProtection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Atlas != nil {
		toSerialize["atlas"] = o.Atlas
	}
	if o.BulkFile != nil {
		toSerialize["bulk_file"] = o.BulkFile
	}
	if o.Common != nil {
		toSerialize["common"] = o.Common
	}
	if o.Cpix != nil {
		toSerialize["cpix"] = o.Cpix
	}
	if o.KeyRotation != nil {
		toSerialize["key_rotation"] = o.KeyRotation
	}
	if o.SampleAes != nil {
		toSerialize["sample_aes"] = o.SampleAes
	}
	if o.Simple != nil {
		toSerialize["simple"] = o.Simple
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ChannelPlaybackContentProtection) UnmarshalJSON(bytes []byte) (err error) {
	varChannelPlaybackContentProtection := _ChannelPlaybackContentProtection{}

	if err = json.Unmarshal(bytes, &varChannelPlaybackContentProtection); err == nil {
		*o = ChannelPlaybackContentProtection(varChannelPlaybackContentProtection)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "atlas")
		delete(additionalProperties, "bulk_file")
		delete(additionalProperties, "common")
		delete(additionalProperties, "cpix")
		delete(additionalProperties, "key_rotation")
		delete(additionalProperties, "sample_aes")
		delete(additionalProperties, "simple")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableChannelPlaybackContentProtection struct {
	value *ChannelPlaybackContentProtection
	isSet bool
}

func (v NullableChannelPlaybackContentProtection) Get() *ChannelPlaybackContentProtection {
	return v.value
}

func (v *NullableChannelPlaybackContentProtection) Set(val *ChannelPlaybackContentProtection) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelPlaybackContentProtection) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelPlaybackContentProtection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelPlaybackContentProtection(val *ChannelPlaybackContentProtection) *NullableChannelPlaybackContentProtection {
	return &NullableChannelPlaybackContentProtection{value: val, isSet: true}
}

func (v NullableChannelPlaybackContentProtection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelPlaybackContentProtection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


