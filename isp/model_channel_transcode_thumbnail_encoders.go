/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// ChannelTranscodeThumbnailEncoders struct for ChannelTranscodeThumbnailEncoders
type ChannelTranscodeThumbnailEncoders struct {
	// Height specifies the thumbnail image height in pixels.
	Height *int32 `json:"height,omitempty"`
	// Encoder ID. IDs must be unique for all video and thumbnail encoders. This ID is referenced when setting up playlist publishing.
	Id *string `json:"id,omitempty"`
	// Width specifies the thumbnail image width in pixels.
	Width *int32 `json:"width,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ChannelTranscodeThumbnailEncoders ChannelTranscodeThumbnailEncoders

// NewChannelTranscodeThumbnailEncoders instantiates a new ChannelTranscodeThumbnailEncoders object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelTranscodeThumbnailEncoders() *ChannelTranscodeThumbnailEncoders {
	this := ChannelTranscodeThumbnailEncoders{}
	return &this
}

// NewChannelTranscodeThumbnailEncodersWithDefaults instantiates a new ChannelTranscodeThumbnailEncoders object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelTranscodeThumbnailEncodersWithDefaults() *ChannelTranscodeThumbnailEncoders {
	this := ChannelTranscodeThumbnailEncoders{}
	return &this
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *ChannelTranscodeThumbnailEncoders) GetHeight() int32 {
	if o == nil || o.Height == nil {
		var ret int32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelTranscodeThumbnailEncoders) GetHeightOk() (*int32, bool) {
	if o == nil || o.Height == nil {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *ChannelTranscodeThumbnailEncoders) HasHeight() bool {
	if o != nil && o.Height != nil {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int32 and assigns it to the Height field.
func (o *ChannelTranscodeThumbnailEncoders) SetHeight(v int32) {
	o.Height = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ChannelTranscodeThumbnailEncoders) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelTranscodeThumbnailEncoders) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ChannelTranscodeThumbnailEncoders) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ChannelTranscodeThumbnailEncoders) SetId(v string) {
	o.Id = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *ChannelTranscodeThumbnailEncoders) GetWidth() int32 {
	if o == nil || o.Width == nil {
		var ret int32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelTranscodeThumbnailEncoders) GetWidthOk() (*int32, bool) {
	if o == nil || o.Width == nil {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *ChannelTranscodeThumbnailEncoders) HasWidth() bool {
	if o != nil && o.Width != nil {
		return true
	}

	return false
}

// SetWidth gets a reference to the given int32 and assigns it to the Width field.
func (o *ChannelTranscodeThumbnailEncoders) SetWidth(v int32) {
	o.Width = &v
}

func (o ChannelTranscodeThumbnailEncoders) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Height != nil {
		toSerialize["height"] = o.Height
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Width != nil {
		toSerialize["width"] = o.Width
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ChannelTranscodeThumbnailEncoders) UnmarshalJSON(bytes []byte) (err error) {
	varChannelTranscodeThumbnailEncoders := _ChannelTranscodeThumbnailEncoders{}

	if err = json.Unmarshal(bytes, &varChannelTranscodeThumbnailEncoders); err == nil {
		*o = ChannelTranscodeThumbnailEncoders(varChannelTranscodeThumbnailEncoders)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "height")
		delete(additionalProperties, "id")
		delete(additionalProperties, "width")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableChannelTranscodeThumbnailEncoders struct {
	value *ChannelTranscodeThumbnailEncoders
	isSet bool
}

func (v NullableChannelTranscodeThumbnailEncoders) Get() *ChannelTranscodeThumbnailEncoders {
	return v.value
}

func (v *NullableChannelTranscodeThumbnailEncoders) Set(val *ChannelTranscodeThumbnailEncoders) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelTranscodeThumbnailEncoders) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelTranscodeThumbnailEncoders) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelTranscodeThumbnailEncoders(val *ChannelTranscodeThumbnailEncoders) *NullableChannelTranscodeThumbnailEncoders {
	return &NullableChannelTranscodeThumbnailEncoders{value: val, isSet: true}
}

func (v NullableChannelTranscodeThumbnailEncoders) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelTranscodeThumbnailEncoders) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


