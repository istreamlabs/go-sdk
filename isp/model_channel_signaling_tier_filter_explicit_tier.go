/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// ChannelSignalingTierFilterExplicitTier Only one of ['explicit_tier'] may be set.
type ChannelSignalingTierFilterExplicitTier struct {
	Values *[]int32 `json:"values,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ChannelSignalingTierFilterExplicitTier ChannelSignalingTierFilterExplicitTier

// NewChannelSignalingTierFilterExplicitTier instantiates a new ChannelSignalingTierFilterExplicitTier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelSignalingTierFilterExplicitTier() *ChannelSignalingTierFilterExplicitTier {
	this := ChannelSignalingTierFilterExplicitTier{}
	return &this
}

// NewChannelSignalingTierFilterExplicitTierWithDefaults instantiates a new ChannelSignalingTierFilterExplicitTier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelSignalingTierFilterExplicitTierWithDefaults() *ChannelSignalingTierFilterExplicitTier {
	this := ChannelSignalingTierFilterExplicitTier{}
	return &this
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *ChannelSignalingTierFilterExplicitTier) GetValues() []int32 {
	if o == nil || o.Values == nil {
		var ret []int32
		return ret
	}
	return *o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelSignalingTierFilterExplicitTier) GetValuesOk() (*[]int32, bool) {
	if o == nil || o.Values == nil {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *ChannelSignalingTierFilterExplicitTier) HasValues() bool {
	if o != nil && o.Values != nil {
		return true
	}

	return false
}

// SetValues gets a reference to the given []int32 and assigns it to the Values field.
func (o *ChannelSignalingTierFilterExplicitTier) SetValues(v []int32) {
	o.Values = &v
}

func (o ChannelSignalingTierFilterExplicitTier) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ChannelSignalingTierFilterExplicitTier) UnmarshalJSON(bytes []byte) (err error) {
	varChannelSignalingTierFilterExplicitTier := _ChannelSignalingTierFilterExplicitTier{}

	if err = json.Unmarshal(bytes, &varChannelSignalingTierFilterExplicitTier); err == nil {
		*o = ChannelSignalingTierFilterExplicitTier(varChannelSignalingTierFilterExplicitTier)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "values")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableChannelSignalingTierFilterExplicitTier struct {
	value *ChannelSignalingTierFilterExplicitTier
	isSet bool
}

func (v NullableChannelSignalingTierFilterExplicitTier) Get() *ChannelSignalingTierFilterExplicitTier {
	return v.value
}

func (v *NullableChannelSignalingTierFilterExplicitTier) Set(val *ChannelSignalingTierFilterExplicitTier) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelSignalingTierFilterExplicitTier) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelSignalingTierFilterExplicitTier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelSignalingTierFilterExplicitTier(val *ChannelSignalingTierFilterExplicitTier) *NullableChannelSignalingTierFilterExplicitTier {
	return &NullableChannelSignalingTierFilterExplicitTier{value: val, isSet: true}
}

func (v NullableChannelSignalingTierFilterExplicitTier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelSignalingTierFilterExplicitTier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


