/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// Channel struct for Channel
type Channel struct {
	// Audio encoder settings for each audio track
	AudioEncodings *[]ChannelAudioEncodings `json:"audio_encodings,omitempty"`
	// Channel source
	AudioSources *[]ChannelAudioSources `json:"audio_sources,omitempty"`
	// Unique channel ID
	Id *string `json:"id,omitempty"`
	// Channel name
	Name *string `json:"name,omitempty"`
	Segmenter *ChannelSegmenter `json:"segmenter,omitempty"`
	// Link to this resource
	Self *string `json:"self,omitempty"`
	Source ChannelSource `json:"source"`
	// Video encoder settings for each video layer
	VideoEncodings *[]ChannelVideoEncodings `json:"video_encodings,omitempty"`
}

// NewChannel instantiates a new Channel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannel(source ChannelSource, ) *Channel {
	this := Channel{}
	this.Source = source
	return &this
}

// NewChannelWithDefaults instantiates a new Channel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelWithDefaults() *Channel {
	this := Channel{}
	return &this
}

// GetAudioEncodings returns the AudioEncodings field value if set, zero value otherwise.
func (o *Channel) GetAudioEncodings() []ChannelAudioEncodings {
	if o == nil || o.AudioEncodings == nil {
		var ret []ChannelAudioEncodings
		return ret
	}
	return *o.AudioEncodings
}

// GetAudioEncodingsOk returns a tuple with the AudioEncodings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetAudioEncodingsOk() (*[]ChannelAudioEncodings, bool) {
	if o == nil || o.AudioEncodings == nil {
		return nil, false
	}
	return o.AudioEncodings, true
}

// HasAudioEncodings returns a boolean if a field has been set.
func (o *Channel) HasAudioEncodings() bool {
	if o != nil && o.AudioEncodings != nil {
		return true
	}

	return false
}

// SetAudioEncodings gets a reference to the given []ChannelAudioEncodings and assigns it to the AudioEncodings field.
func (o *Channel) SetAudioEncodings(v []ChannelAudioEncodings) {
	o.AudioEncodings = &v
}

// GetAudioSources returns the AudioSources field value if set, zero value otherwise.
func (o *Channel) GetAudioSources() []ChannelAudioSources {
	if o == nil || o.AudioSources == nil {
		var ret []ChannelAudioSources
		return ret
	}
	return *o.AudioSources
}

// GetAudioSourcesOk returns a tuple with the AudioSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetAudioSourcesOk() (*[]ChannelAudioSources, bool) {
	if o == nil || o.AudioSources == nil {
		return nil, false
	}
	return o.AudioSources, true
}

// HasAudioSources returns a boolean if a field has been set.
func (o *Channel) HasAudioSources() bool {
	if o != nil && o.AudioSources != nil {
		return true
	}

	return false
}

// SetAudioSources gets a reference to the given []ChannelAudioSources and assigns it to the AudioSources field.
func (o *Channel) SetAudioSources(v []ChannelAudioSources) {
	o.AudioSources = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Channel) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Channel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Channel) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Channel) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Channel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Channel) SetName(v string) {
	o.Name = &v
}

// GetSegmenter returns the Segmenter field value if set, zero value otherwise.
func (o *Channel) GetSegmenter() ChannelSegmenter {
	if o == nil || o.Segmenter == nil {
		var ret ChannelSegmenter
		return ret
	}
	return *o.Segmenter
}

// GetSegmenterOk returns a tuple with the Segmenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetSegmenterOk() (*ChannelSegmenter, bool) {
	if o == nil || o.Segmenter == nil {
		return nil, false
	}
	return o.Segmenter, true
}

// HasSegmenter returns a boolean if a field has been set.
func (o *Channel) HasSegmenter() bool {
	if o != nil && o.Segmenter != nil {
		return true
	}

	return false
}

// SetSegmenter gets a reference to the given ChannelSegmenter and assigns it to the Segmenter field.
func (o *Channel) SetSegmenter(v ChannelSegmenter) {
	o.Segmenter = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *Channel) GetSelf() string {
	if o == nil || o.Self == nil {
		var ret string
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetSelfOk() (*string, bool) {
	if o == nil || o.Self == nil {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *Channel) HasSelf() bool {
	if o != nil && o.Self != nil {
		return true
	}

	return false
}

// SetSelf gets a reference to the given string and assigns it to the Self field.
func (o *Channel) SetSelf(v string) {
	o.Self = &v
}

// GetSource returns the Source field value
func (o *Channel) GetSource() ChannelSource {
	if o == nil  {
		var ret ChannelSource
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *Channel) GetSourceOk() (*ChannelSource, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *Channel) SetSource(v ChannelSource) {
	o.Source = v
}

// GetVideoEncodings returns the VideoEncodings field value if set, zero value otherwise.
func (o *Channel) GetVideoEncodings() []ChannelVideoEncodings {
	if o == nil || o.VideoEncodings == nil {
		var ret []ChannelVideoEncodings
		return ret
	}
	return *o.VideoEncodings
}

// GetVideoEncodingsOk returns a tuple with the VideoEncodings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Channel) GetVideoEncodingsOk() (*[]ChannelVideoEncodings, bool) {
	if o == nil || o.VideoEncodings == nil {
		return nil, false
	}
	return o.VideoEncodings, true
}

// HasVideoEncodings returns a boolean if a field has been set.
func (o *Channel) HasVideoEncodings() bool {
	if o != nil && o.VideoEncodings != nil {
		return true
	}

	return false
}

// SetVideoEncodings gets a reference to the given []ChannelVideoEncodings and assigns it to the VideoEncodings field.
func (o *Channel) SetVideoEncodings(v []ChannelVideoEncodings) {
	o.VideoEncodings = &v
}

func (o Channel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AudioEncodings != nil {
		toSerialize["audio_encodings"] = o.AudioEncodings
	}
	if o.AudioSources != nil {
		toSerialize["audio_sources"] = o.AudioSources
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Segmenter != nil {
		toSerialize["segmenter"] = o.Segmenter
	}
	if o.Self != nil {
		toSerialize["self"] = o.Self
	}
	if true {
		toSerialize["source"] = o.Source
	}
	if o.VideoEncodings != nil {
		toSerialize["video_encodings"] = o.VideoEncodings
	}
	return json.Marshal(toSerialize)
}

type NullableChannel struct {
	value *Channel
	isSet bool
}

func (v NullableChannel) Get() *Channel {
	return v.value
}

func (v *NullableChannel) Set(val *Channel) {
	v.value = val
	v.isSet = true
}

func (v NullableChannel) IsSet() bool {
	return v.isSet
}

func (v *NullableChannel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannel(val *Channel) *NullableChannel {
	return &NullableChannel{value: val, isSet: true}
}

func (v NullableChannel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


