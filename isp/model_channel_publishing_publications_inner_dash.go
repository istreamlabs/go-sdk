/*
 * WBD Aventus Channels API
 *
 * API version: 0.0.0
 * Contact: live-control-plane-devs@wbd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the ChannelPublishingPublicationsInnerDash type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelPublishingPublicationsInnerDash{}

// ChannelPublishingPublicationsInnerDash DASH configures publication settings. Only one of HLS or DASH can be set.
type ChannelPublishingPublicationsInnerDash struct {
	// Sets the minimumUpdatePeriod field in MPD to be this value. If set to 0 (default), segment duration is used. The value shall not exceed the 'suggested_presentation_delay_secs'.
	MinimumUpdatePeriodSecs *int32 `json:"minimum_update_period_secs,omitempty" format:"int32" doc:"Sets the minimumUpdatePeriod field in MPD to be this value. If set to 0 (default), segment duration is used. The value shall not exceed the 'suggested_presentation_delay_secs'."`
	// Signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering playlists.
	SignalingFormats []string `json:"signaling_formats,omitempty" uniqueItems:"true" enum:"SCTE35_SPLICE_INFO_SECTION,SCTE35_BIN" doc:"Signaling formats specifies which SCTE-35 timeline marker formatting to use when rendering playlists."`
	// The suggested amount of time (in seconds) the player should be behind the live stream. This value must be greater or equal to 'minimum_update_period_secs'.
	SuggestedPresentationDelaySecs *int32 `json:"suggested_presentation_delay_secs,omitempty" format:"int32" minimum:"0" doc:"The suggested amount of time (in seconds) the player should be behind the live stream. This value must be greater or equal to 'minimum_update_period_secs'."`
	// If set to 'URL_TYPE_UNDEFINED' playlist generation will use 'RELATIVE'.
	UrlType *string `json:"url_type,omitempty" enum:"RELATIVE,ABSOLUTE,HOST_RELATIVE" doc:"If set to 'URL_TYPE_UNDEFINED' playlist generation will use 'RELATIVE'."`
}

// NewChannelPublishingPublicationsInnerDash instantiates a new ChannelPublishingPublicationsInnerDash object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelPublishingPublicationsInnerDash() *ChannelPublishingPublicationsInnerDash {
	this := ChannelPublishingPublicationsInnerDash{}
	return &this
}

// NewChannelPublishingPublicationsInnerDashWithDefaults instantiates a new ChannelPublishingPublicationsInnerDash object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelPublishingPublicationsInnerDashWithDefaults() *ChannelPublishingPublicationsInnerDash {
	this := ChannelPublishingPublicationsInnerDash{}
	return &this
}

// GetMinimumUpdatePeriodSecs returns the MinimumUpdatePeriodSecs field value if set, zero value otherwise.
func (o *ChannelPublishingPublicationsInnerDash) GetMinimumUpdatePeriodSecs() int32 {
	if o == nil || IsNil(o.MinimumUpdatePeriodSecs) {
		var ret int32
		return ret
	}
	return *o.MinimumUpdatePeriodSecs
}

// GetMinimumUpdatePeriodSecsOk returns a tuple with the MinimumUpdatePeriodSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPublishingPublicationsInnerDash) GetMinimumUpdatePeriodSecsOk() (*int32, bool) {
	if o == nil || IsNil(o.MinimumUpdatePeriodSecs) {
		return nil, false
	}
	return o.MinimumUpdatePeriodSecs, true
}

// HasMinimumUpdatePeriodSecs returns a boolean if a field has been set.
func (o *ChannelPublishingPublicationsInnerDash) HasMinimumUpdatePeriodSecs() bool {
	if o != nil && !IsNil(o.MinimumUpdatePeriodSecs) {
		return true
	}

	return false
}

// SetMinimumUpdatePeriodSecs gets a reference to the given int32 and assigns it to the MinimumUpdatePeriodSecs field.
func (o *ChannelPublishingPublicationsInnerDash) SetMinimumUpdatePeriodSecs(v int32) {
	o.MinimumUpdatePeriodSecs = &v
}

// GetSignalingFormats returns the SignalingFormats field value if set, zero value otherwise.
func (o *ChannelPublishingPublicationsInnerDash) GetSignalingFormats() []string {
	if o == nil || IsNil(o.SignalingFormats) {
		var ret []string
		return ret
	}
	return o.SignalingFormats
}

// GetSignalingFormatsOk returns a tuple with the SignalingFormats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPublishingPublicationsInnerDash) GetSignalingFormatsOk() ([]string, bool) {
	if o == nil || IsNil(o.SignalingFormats) {
		return nil, false
	}
	return o.SignalingFormats, true
}

// HasSignalingFormats returns a boolean if a field has been set.
func (o *ChannelPublishingPublicationsInnerDash) HasSignalingFormats() bool {
	if o != nil && !IsNil(o.SignalingFormats) {
		return true
	}

	return false
}

// SetSignalingFormats gets a reference to the given []string and assigns it to the SignalingFormats field.
func (o *ChannelPublishingPublicationsInnerDash) SetSignalingFormats(v []string) {
	o.SignalingFormats = v
}

// GetSuggestedPresentationDelaySecs returns the SuggestedPresentationDelaySecs field value if set, zero value otherwise.
func (o *ChannelPublishingPublicationsInnerDash) GetSuggestedPresentationDelaySecs() int32 {
	if o == nil || IsNil(o.SuggestedPresentationDelaySecs) {
		var ret int32
		return ret
	}
	return *o.SuggestedPresentationDelaySecs
}

// GetSuggestedPresentationDelaySecsOk returns a tuple with the SuggestedPresentationDelaySecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPublishingPublicationsInnerDash) GetSuggestedPresentationDelaySecsOk() (*int32, bool) {
	if o == nil || IsNil(o.SuggestedPresentationDelaySecs) {
		return nil, false
	}
	return o.SuggestedPresentationDelaySecs, true
}

// HasSuggestedPresentationDelaySecs returns a boolean if a field has been set.
func (o *ChannelPublishingPublicationsInnerDash) HasSuggestedPresentationDelaySecs() bool {
	if o != nil && !IsNil(o.SuggestedPresentationDelaySecs) {
		return true
	}

	return false
}

// SetSuggestedPresentationDelaySecs gets a reference to the given int32 and assigns it to the SuggestedPresentationDelaySecs field.
func (o *ChannelPublishingPublicationsInnerDash) SetSuggestedPresentationDelaySecs(v int32) {
	o.SuggestedPresentationDelaySecs = &v
}

// GetUrlType returns the UrlType field value if set, zero value otherwise.
func (o *ChannelPublishingPublicationsInnerDash) GetUrlType() string {
	if o == nil || IsNil(o.UrlType) {
		var ret string
		return ret
	}
	return *o.UrlType
}

// GetUrlTypeOk returns a tuple with the UrlType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPublishingPublicationsInnerDash) GetUrlTypeOk() (*string, bool) {
	if o == nil || IsNil(o.UrlType) {
		return nil, false
	}
	return o.UrlType, true
}

// HasUrlType returns a boolean if a field has been set.
func (o *ChannelPublishingPublicationsInnerDash) HasUrlType() bool {
	if o != nil && !IsNil(o.UrlType) {
		return true
	}

	return false
}

// SetUrlType gets a reference to the given string and assigns it to the UrlType field.
func (o *ChannelPublishingPublicationsInnerDash) SetUrlType(v string) {
	o.UrlType = &v
}

func (o ChannelPublishingPublicationsInnerDash) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelPublishingPublicationsInnerDash) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MinimumUpdatePeriodSecs) {
		toSerialize["minimum_update_period_secs"] = o.MinimumUpdatePeriodSecs
	}
	if !IsNil(o.SignalingFormats) {
		toSerialize["signaling_formats"] = o.SignalingFormats
	}
	if !IsNil(o.SuggestedPresentationDelaySecs) {
		toSerialize["suggested_presentation_delay_secs"] = o.SuggestedPresentationDelaySecs
	}
	if !IsNil(o.UrlType) {
		toSerialize["url_type"] = o.UrlType
	}
	return toSerialize, nil
}

type NullableChannelPublishingPublicationsInnerDash struct {
	value *ChannelPublishingPublicationsInnerDash
	isSet bool
}

func (v NullableChannelPublishingPublicationsInnerDash) Get() *ChannelPublishingPublicationsInnerDash {
	return v.value
}

func (v *NullableChannelPublishingPublicationsInnerDash) Set(val *ChannelPublishingPublicationsInnerDash) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelPublishingPublicationsInnerDash) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelPublishingPublicationsInnerDash) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelPublishingPublicationsInnerDash(val *ChannelPublishingPublicationsInnerDash) *NullableChannelPublishingPublicationsInnerDash {
	return &NullableChannelPublishingPublicationsInnerDash{value: val, isSet: true}
}

func (v NullableChannelPublishingPublicationsInnerDash) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelPublishingPublicationsInnerDash) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


