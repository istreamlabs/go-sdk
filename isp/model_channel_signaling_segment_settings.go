/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// ChannelSignalingSegmentSettings struct for ChannelSignalingSegmentSettings
type ChannelSignalingSegmentSettings struct {
	// Specifies the duration of a segment when the in-band SCTE-35 that initiates it (e.g. Distributor Placement Opportunity Start) is missing an explicit duration. N.B. for program and ad types, this also affects 'Simple Program' and 'Simple Ad' markers, respectively.
	DefaultDurationSecs *int32 `json:"default_duration_secs,omitempty"`
	// Determines whether to include the default duration in the output SCTE-35 messages when the input SCTE-35 message did not specify a duration.
	EmitDefaultDuration *bool `json:"emit_default_duration,omitempty"`
	// Specifies a 'correction' to the splice_time of in-band SCTE-35 in milliseconds.
	OffsetMillis *int32 `json:"offset_millis,omitempty"`
	// Determines which Segment End signaling mode to use for the provided segments. If unspecified, defaults to MATCH_END_EVENT_ID.
	SegmentEndMode *string `json:"segment_end_mode,omitempty"`
	// Specifies the list of which segment types this setting applies to. Any segment type defined here _must_ also be present in the parent signaling configuration.
	Segments *[]string `json:"segments,omitempty"`
	TierFilter *ChannelSignalingTierFilter `json:"tier_filter,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ChannelSignalingSegmentSettings ChannelSignalingSegmentSettings

// NewChannelSignalingSegmentSettings instantiates a new ChannelSignalingSegmentSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelSignalingSegmentSettings() *ChannelSignalingSegmentSettings {
	this := ChannelSignalingSegmentSettings{}
	return &this
}

// NewChannelSignalingSegmentSettingsWithDefaults instantiates a new ChannelSignalingSegmentSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelSignalingSegmentSettingsWithDefaults() *ChannelSignalingSegmentSettings {
	this := ChannelSignalingSegmentSettings{}
	return &this
}

// GetDefaultDurationSecs returns the DefaultDurationSecs field value if set, zero value otherwise.
func (o *ChannelSignalingSegmentSettings) GetDefaultDurationSecs() int32 {
	if o == nil || o.DefaultDurationSecs == nil {
		var ret int32
		return ret
	}
	return *o.DefaultDurationSecs
}

// GetDefaultDurationSecsOk returns a tuple with the DefaultDurationSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelSignalingSegmentSettings) GetDefaultDurationSecsOk() (*int32, bool) {
	if o == nil || o.DefaultDurationSecs == nil {
		return nil, false
	}
	return o.DefaultDurationSecs, true
}

// HasDefaultDurationSecs returns a boolean if a field has been set.
func (o *ChannelSignalingSegmentSettings) HasDefaultDurationSecs() bool {
	if o != nil && o.DefaultDurationSecs != nil {
		return true
	}

	return false
}

// SetDefaultDurationSecs gets a reference to the given int32 and assigns it to the DefaultDurationSecs field.
func (o *ChannelSignalingSegmentSettings) SetDefaultDurationSecs(v int32) {
	o.DefaultDurationSecs = &v
}

// GetEmitDefaultDuration returns the EmitDefaultDuration field value if set, zero value otherwise.
func (o *ChannelSignalingSegmentSettings) GetEmitDefaultDuration() bool {
	if o == nil || o.EmitDefaultDuration == nil {
		var ret bool
		return ret
	}
	return *o.EmitDefaultDuration
}

// GetEmitDefaultDurationOk returns a tuple with the EmitDefaultDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelSignalingSegmentSettings) GetEmitDefaultDurationOk() (*bool, bool) {
	if o == nil || o.EmitDefaultDuration == nil {
		return nil, false
	}
	return o.EmitDefaultDuration, true
}

// HasEmitDefaultDuration returns a boolean if a field has been set.
func (o *ChannelSignalingSegmentSettings) HasEmitDefaultDuration() bool {
	if o != nil && o.EmitDefaultDuration != nil {
		return true
	}

	return false
}

// SetEmitDefaultDuration gets a reference to the given bool and assigns it to the EmitDefaultDuration field.
func (o *ChannelSignalingSegmentSettings) SetEmitDefaultDuration(v bool) {
	o.EmitDefaultDuration = &v
}

// GetOffsetMillis returns the OffsetMillis field value if set, zero value otherwise.
func (o *ChannelSignalingSegmentSettings) GetOffsetMillis() int32 {
	if o == nil || o.OffsetMillis == nil {
		var ret int32
		return ret
	}
	return *o.OffsetMillis
}

// GetOffsetMillisOk returns a tuple with the OffsetMillis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelSignalingSegmentSettings) GetOffsetMillisOk() (*int32, bool) {
	if o == nil || o.OffsetMillis == nil {
		return nil, false
	}
	return o.OffsetMillis, true
}

// HasOffsetMillis returns a boolean if a field has been set.
func (o *ChannelSignalingSegmentSettings) HasOffsetMillis() bool {
	if o != nil && o.OffsetMillis != nil {
		return true
	}

	return false
}

// SetOffsetMillis gets a reference to the given int32 and assigns it to the OffsetMillis field.
func (o *ChannelSignalingSegmentSettings) SetOffsetMillis(v int32) {
	o.OffsetMillis = &v
}

// GetSegmentEndMode returns the SegmentEndMode field value if set, zero value otherwise.
func (o *ChannelSignalingSegmentSettings) GetSegmentEndMode() string {
	if o == nil || o.SegmentEndMode == nil {
		var ret string
		return ret
	}
	return *o.SegmentEndMode
}

// GetSegmentEndModeOk returns a tuple with the SegmentEndMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelSignalingSegmentSettings) GetSegmentEndModeOk() (*string, bool) {
	if o == nil || o.SegmentEndMode == nil {
		return nil, false
	}
	return o.SegmentEndMode, true
}

// HasSegmentEndMode returns a boolean if a field has been set.
func (o *ChannelSignalingSegmentSettings) HasSegmentEndMode() bool {
	if o != nil && o.SegmentEndMode != nil {
		return true
	}

	return false
}

// SetSegmentEndMode gets a reference to the given string and assigns it to the SegmentEndMode field.
func (o *ChannelSignalingSegmentSettings) SetSegmentEndMode(v string) {
	o.SegmentEndMode = &v
}

// GetSegments returns the Segments field value if set, zero value otherwise.
func (o *ChannelSignalingSegmentSettings) GetSegments() []string {
	if o == nil || o.Segments == nil {
		var ret []string
		return ret
	}
	return *o.Segments
}

// GetSegmentsOk returns a tuple with the Segments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelSignalingSegmentSettings) GetSegmentsOk() (*[]string, bool) {
	if o == nil || o.Segments == nil {
		return nil, false
	}
	return o.Segments, true
}

// HasSegments returns a boolean if a field has been set.
func (o *ChannelSignalingSegmentSettings) HasSegments() bool {
	if o != nil && o.Segments != nil {
		return true
	}

	return false
}

// SetSegments gets a reference to the given []string and assigns it to the Segments field.
func (o *ChannelSignalingSegmentSettings) SetSegments(v []string) {
	o.Segments = &v
}

// GetTierFilter returns the TierFilter field value if set, zero value otherwise.
func (o *ChannelSignalingSegmentSettings) GetTierFilter() ChannelSignalingTierFilter {
	if o == nil || o.TierFilter == nil {
		var ret ChannelSignalingTierFilter
		return ret
	}
	return *o.TierFilter
}

// GetTierFilterOk returns a tuple with the TierFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelSignalingSegmentSettings) GetTierFilterOk() (*ChannelSignalingTierFilter, bool) {
	if o == nil || o.TierFilter == nil {
		return nil, false
	}
	return o.TierFilter, true
}

// HasTierFilter returns a boolean if a field has been set.
func (o *ChannelSignalingSegmentSettings) HasTierFilter() bool {
	if o != nil && o.TierFilter != nil {
		return true
	}

	return false
}

// SetTierFilter gets a reference to the given ChannelSignalingTierFilter and assigns it to the TierFilter field.
func (o *ChannelSignalingSegmentSettings) SetTierFilter(v ChannelSignalingTierFilter) {
	o.TierFilter = &v
}

func (o ChannelSignalingSegmentSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DefaultDurationSecs != nil {
		toSerialize["default_duration_secs"] = o.DefaultDurationSecs
	}
	if o.EmitDefaultDuration != nil {
		toSerialize["emit_default_duration"] = o.EmitDefaultDuration
	}
	if o.OffsetMillis != nil {
		toSerialize["offset_millis"] = o.OffsetMillis
	}
	if o.SegmentEndMode != nil {
		toSerialize["segment_end_mode"] = o.SegmentEndMode
	}
	if o.Segments != nil {
		toSerialize["segments"] = o.Segments
	}
	if o.TierFilter != nil {
		toSerialize["tier_filter"] = o.TierFilter
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ChannelSignalingSegmentSettings) UnmarshalJSON(bytes []byte) (err error) {
	varChannelSignalingSegmentSettings := _ChannelSignalingSegmentSettings{}

	if err = json.Unmarshal(bytes, &varChannelSignalingSegmentSettings); err == nil {
		*o = ChannelSignalingSegmentSettings(varChannelSignalingSegmentSettings)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "default_duration_secs")
		delete(additionalProperties, "emit_default_duration")
		delete(additionalProperties, "offset_millis")
		delete(additionalProperties, "segment_end_mode")
		delete(additionalProperties, "segments")
		delete(additionalProperties, "tier_filter")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableChannelSignalingSegmentSettings struct {
	value *ChannelSignalingSegmentSettings
	isSet bool
}

func (v NullableChannelSignalingSegmentSettings) Get() *ChannelSignalingSegmentSettings {
	return v.value
}

func (v *NullableChannelSignalingSegmentSettings) Set(val *ChannelSignalingSegmentSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelSignalingSegmentSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelSignalingSegmentSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelSignalingSegmentSettings(val *ChannelSignalingSegmentSettings) *NullableChannelSignalingSegmentSettings {
	return &NullableChannelSignalingSegmentSettings{value: val, isSet: true}
}

func (v NullableChannelSignalingSegmentSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelSignalingSegmentSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


