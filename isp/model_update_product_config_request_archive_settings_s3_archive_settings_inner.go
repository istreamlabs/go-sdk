/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner{}

// UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner struct for UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner
type UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner struct {
	AccessKeyId *string `json:"access_key_id,omitempty"`
	ArchiveTargetTypes []string `json:"archive_target_types,omitempty"`
	AutoArchive bool `json:"auto_archive"`
	AutoArchiveOnCollapseTypes []string `json:"auto_archive_on_collapse_types,omitempty"`
	Bucket string `json:"bucket"`
	Endpoint *string `json:"endpoint,omitempty"`
	Prefix string `json:"prefix"`
	Region string `json:"region"`
	SecretAccessKey *string `json:"secret_access_key,omitempty"`
}

// NewUpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner instantiates a new UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner(autoArchive bool, bucket string, prefix string, region string) *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner {
	this := UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner{}
	this.AutoArchive = autoArchive
	this.Bucket = bucket
	this.Prefix = prefix
	this.Region = region
	return &this
}

// NewUpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInnerWithDefaults instantiates a new UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInnerWithDefaults() *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner {
	this := UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner{}
	return &this
}

// GetAccessKeyId returns the AccessKeyId field value if set, zero value otherwise.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) GetAccessKeyId() string {
	if o == nil || IsNil(o.AccessKeyId) {
		var ret string
		return ret
	}
	return *o.AccessKeyId
}

// GetAccessKeyIdOk returns a tuple with the AccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) GetAccessKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccessKeyId) {
		return nil, false
	}
	return o.AccessKeyId, true
}

// HasAccessKeyId returns a boolean if a field has been set.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) HasAccessKeyId() bool {
	if o != nil && !IsNil(o.AccessKeyId) {
		return true
	}

	return false
}

// SetAccessKeyId gets a reference to the given string and assigns it to the AccessKeyId field.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) SetAccessKeyId(v string) {
	o.AccessKeyId = &v
}

// GetArchiveTargetTypes returns the ArchiveTargetTypes field value if set, zero value otherwise.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) GetArchiveTargetTypes() []string {
	if o == nil || IsNil(o.ArchiveTargetTypes) {
		var ret []string
		return ret
	}
	return o.ArchiveTargetTypes
}

// GetArchiveTargetTypesOk returns a tuple with the ArchiveTargetTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) GetArchiveTargetTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.ArchiveTargetTypes) {
		return nil, false
	}
	return o.ArchiveTargetTypes, true
}

// HasArchiveTargetTypes returns a boolean if a field has been set.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) HasArchiveTargetTypes() bool {
	if o != nil && !IsNil(o.ArchiveTargetTypes) {
		return true
	}

	return false
}

// SetArchiveTargetTypes gets a reference to the given []string and assigns it to the ArchiveTargetTypes field.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) SetArchiveTargetTypes(v []string) {
	o.ArchiveTargetTypes = v
}

// GetAutoArchive returns the AutoArchive field value
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) GetAutoArchive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoArchive
}

// GetAutoArchiveOk returns a tuple with the AutoArchive field value
// and a boolean to check if the value has been set.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) GetAutoArchiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoArchive, true
}

// SetAutoArchive sets field value
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) SetAutoArchive(v bool) {
	o.AutoArchive = v
}

// GetAutoArchiveOnCollapseTypes returns the AutoArchiveOnCollapseTypes field value if set, zero value otherwise.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) GetAutoArchiveOnCollapseTypes() []string {
	if o == nil || IsNil(o.AutoArchiveOnCollapseTypes) {
		var ret []string
		return ret
	}
	return o.AutoArchiveOnCollapseTypes
}

// GetAutoArchiveOnCollapseTypesOk returns a tuple with the AutoArchiveOnCollapseTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) GetAutoArchiveOnCollapseTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.AutoArchiveOnCollapseTypes) {
		return nil, false
	}
	return o.AutoArchiveOnCollapseTypes, true
}

// HasAutoArchiveOnCollapseTypes returns a boolean if a field has been set.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) HasAutoArchiveOnCollapseTypes() bool {
	if o != nil && !IsNil(o.AutoArchiveOnCollapseTypes) {
		return true
	}

	return false
}

// SetAutoArchiveOnCollapseTypes gets a reference to the given []string and assigns it to the AutoArchiveOnCollapseTypes field.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) SetAutoArchiveOnCollapseTypes(v []string) {
	o.AutoArchiveOnCollapseTypes = v
}

// GetBucket returns the Bucket field value
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) GetBucket() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value
// and a boolean to check if the value has been set.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) GetBucketOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bucket, true
}

// SetBucket sets field value
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) SetBucket(v string) {
	o.Bucket = v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) GetEndpoint() string {
	if o == nil || IsNil(o.Endpoint) {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) GetEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.Endpoint) {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) HasEndpoint() bool {
	if o != nil && !IsNil(o.Endpoint) {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetPrefix returns the Prefix field value
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) GetPrefix() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value
// and a boolean to check if the value has been set.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) GetPrefixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Prefix, true
}

// SetPrefix sets field value
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) SetPrefix(v string) {
	o.Prefix = v
}

// GetRegion returns the Region field value
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) SetRegion(v string) {
	o.Region = v
}

// GetSecretAccessKey returns the SecretAccessKey field value if set, zero value otherwise.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) GetSecretAccessKey() string {
	if o == nil || IsNil(o.SecretAccessKey) {
		var ret string
		return ret
	}
	return *o.SecretAccessKey
}

// GetSecretAccessKeyOk returns a tuple with the SecretAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) GetSecretAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecretAccessKey) {
		return nil, false
	}
	return o.SecretAccessKey, true
}

// HasSecretAccessKey returns a boolean if a field has been set.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) HasSecretAccessKey() bool {
	if o != nil && !IsNil(o.SecretAccessKey) {
		return true
	}

	return false
}

// SetSecretAccessKey gets a reference to the given string and assigns it to the SecretAccessKey field.
func (o *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) SetSecretAccessKey(v string) {
	o.SecretAccessKey = &v
}

func (o UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessKeyId) {
		toSerialize["access_key_id"] = o.AccessKeyId
	}
	if !IsNil(o.ArchiveTargetTypes) {
		toSerialize["archive_target_types"] = o.ArchiveTargetTypes
	}
	toSerialize["auto_archive"] = o.AutoArchive
	if !IsNil(o.AutoArchiveOnCollapseTypes) {
		toSerialize["auto_archive_on_collapse_types"] = o.AutoArchiveOnCollapseTypes
	}
	toSerialize["bucket"] = o.Bucket
	if !IsNil(o.Endpoint) {
		toSerialize["endpoint"] = o.Endpoint
	}
	toSerialize["prefix"] = o.Prefix
	toSerialize["region"] = o.Region
	if !IsNil(o.SecretAccessKey) {
		toSerialize["secret_access_key"] = o.SecretAccessKey
	}
	return toSerialize, nil
}

type NullableUpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner struct {
	value *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner
	isSet bool
}

func (v NullableUpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) Get() *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner {
	return v.value
}

func (v *NullableUpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) Set(val *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner(val *UpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) *NullableUpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner {
	return &NullableUpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner{value: val, isSet: true}
}

func (v NullableUpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProductConfigRequestArchiveSettingsS3ArchiveSettingsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


