/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// ChannelPublishingClosedCaptionStreamsInner struct for ChannelPublishingClosedCaptionStreamsInner
type ChannelPublishingClosedCaptionStreamsInner struct {
	// Indicates that the client should play the captioning media selection group if the user has not indicated a user preference. If both auto_select and default are not set, the first captioning media selection group will be used.
	AutoSelect *string `json:"auto_select,omitempty"`
	// Configures the captioning media selection group that will be played if the user has not indicated a user preference. If both auto_select and default are not set, the first captioning media selection group will be used.
	Default *string `json:"default,omitempty"`
	// Language code as RFC 5646, e.g. 'en' 'en-US'.
	Language *string `json:"language,omitempty"`
	// Source stream name.
	Name *string `json:"name,omitempty"`
}

// NewChannelPublishingClosedCaptionStreamsInner instantiates a new ChannelPublishingClosedCaptionStreamsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelPublishingClosedCaptionStreamsInner() *ChannelPublishingClosedCaptionStreamsInner {
	this := ChannelPublishingClosedCaptionStreamsInner{}
	return &this
}

// NewChannelPublishingClosedCaptionStreamsInnerWithDefaults instantiates a new ChannelPublishingClosedCaptionStreamsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelPublishingClosedCaptionStreamsInnerWithDefaults() *ChannelPublishingClosedCaptionStreamsInner {
	this := ChannelPublishingClosedCaptionStreamsInner{}
	return &this
}

// GetAutoSelect returns the AutoSelect field value if set, zero value otherwise.
func (o *ChannelPublishingClosedCaptionStreamsInner) GetAutoSelect() string {
	if o == nil || o.AutoSelect == nil {
		var ret string
		return ret
	}
	return *o.AutoSelect
}

// GetAutoSelectOk returns a tuple with the AutoSelect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPublishingClosedCaptionStreamsInner) GetAutoSelectOk() (*string, bool) {
	if o == nil || o.AutoSelect == nil {
		return nil, false
	}
	return o.AutoSelect, true
}

// HasAutoSelect returns a boolean if a field has been set.
func (o *ChannelPublishingClosedCaptionStreamsInner) HasAutoSelect() bool {
	if o != nil && o.AutoSelect != nil {
		return true
	}

	return false
}

// SetAutoSelect gets a reference to the given string and assigns it to the AutoSelect field.
func (o *ChannelPublishingClosedCaptionStreamsInner) SetAutoSelect(v string) {
	o.AutoSelect = &v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *ChannelPublishingClosedCaptionStreamsInner) GetDefault() string {
	if o == nil || o.Default == nil {
		var ret string
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPublishingClosedCaptionStreamsInner) GetDefaultOk() (*string, bool) {
	if o == nil || o.Default == nil {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *ChannelPublishingClosedCaptionStreamsInner) HasDefault() bool {
	if o != nil && o.Default != nil {
		return true
	}

	return false
}

// SetDefault gets a reference to the given string and assigns it to the Default field.
func (o *ChannelPublishingClosedCaptionStreamsInner) SetDefault(v string) {
	o.Default = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *ChannelPublishingClosedCaptionStreamsInner) GetLanguage() string {
	if o == nil || o.Language == nil {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPublishingClosedCaptionStreamsInner) GetLanguageOk() (*string, bool) {
	if o == nil || o.Language == nil {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *ChannelPublishingClosedCaptionStreamsInner) HasLanguage() bool {
	if o != nil && o.Language != nil {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *ChannelPublishingClosedCaptionStreamsInner) SetLanguage(v string) {
	o.Language = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ChannelPublishingClosedCaptionStreamsInner) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPublishingClosedCaptionStreamsInner) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ChannelPublishingClosedCaptionStreamsInner) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ChannelPublishingClosedCaptionStreamsInner) SetName(v string) {
	o.Name = &v
}

func (o ChannelPublishingClosedCaptionStreamsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AutoSelect != nil {
		toSerialize["auto_select"] = o.AutoSelect
	}
	if o.Default != nil {
		toSerialize["default"] = o.Default
	}
	if o.Language != nil {
		toSerialize["language"] = o.Language
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableChannelPublishingClosedCaptionStreamsInner struct {
	value *ChannelPublishingClosedCaptionStreamsInner
	isSet bool
}

func (v NullableChannelPublishingClosedCaptionStreamsInner) Get() *ChannelPublishingClosedCaptionStreamsInner {
	return v.value
}

func (v *NullableChannelPublishingClosedCaptionStreamsInner) Set(val *ChannelPublishingClosedCaptionStreamsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelPublishingClosedCaptionStreamsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelPublishingClosedCaptionStreamsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelPublishingClosedCaptionStreamsInner(val *ChannelPublishingClosedCaptionStreamsInner) *NullableChannelPublishingClosedCaptionStreamsInner {
	return &NullableChannelPublishingClosedCaptionStreamsInner{value: val, isSet: true}
}

func (v NullableChannelPublishingClosedCaptionStreamsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelPublishingClosedCaptionStreamsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


