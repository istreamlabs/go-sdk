/*
 * WBD Aventus Channels API
 *
 * API version: 0.0.0
 * Contact: live-control-plane-devs@wbd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the ChannelTranscodeOverlaysInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelTranscodeOverlaysInner{}

// ChannelTranscodeOverlaysInner struct for ChannelTranscodeOverlaysInner
type ChannelTranscodeOverlaysInner struct {
	// The URL of the image overlay. Only PNG is supported at the moment. The image's dimensions should match those of source for perfect pixel placement.
	ImageUrl *string `json:"image_url,omitempty" minLength:"1" doc:"The URL of the image overlay. Only PNG is supported at the moment. The image's dimensions should match those of source for perfect pixel placement."`
}

// NewChannelTranscodeOverlaysInner instantiates a new ChannelTranscodeOverlaysInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelTranscodeOverlaysInner() *ChannelTranscodeOverlaysInner {
	this := ChannelTranscodeOverlaysInner{}
	return &this
}

// NewChannelTranscodeOverlaysInnerWithDefaults instantiates a new ChannelTranscodeOverlaysInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelTranscodeOverlaysInnerWithDefaults() *ChannelTranscodeOverlaysInner {
	this := ChannelTranscodeOverlaysInner{}
	return &this
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise.
func (o *ChannelTranscodeOverlaysInner) GetImageUrl() string {
	if o == nil || IsNil(o.ImageUrl) {
		var ret string
		return ret
	}
	return *o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelTranscodeOverlaysInner) GetImageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ImageUrl) {
		return nil, false
	}
	return o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *ChannelTranscodeOverlaysInner) HasImageUrl() bool {
	if o != nil && !IsNil(o.ImageUrl) {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given string and assigns it to the ImageUrl field.
func (o *ChannelTranscodeOverlaysInner) SetImageUrl(v string) {
	o.ImageUrl = &v
}

func (o ChannelTranscodeOverlaysInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelTranscodeOverlaysInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ImageUrl) {
		toSerialize["image_url"] = o.ImageUrl
	}
	return toSerialize, nil
}

type NullableChannelTranscodeOverlaysInner struct {
	value *ChannelTranscodeOverlaysInner
	isSet bool
}

func (v NullableChannelTranscodeOverlaysInner) Get() *ChannelTranscodeOverlaysInner {
	return v.value
}

func (v *NullableChannelTranscodeOverlaysInner) Set(val *ChannelTranscodeOverlaysInner) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelTranscodeOverlaysInner) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelTranscodeOverlaysInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelTranscodeOverlaysInner(val *ChannelTranscodeOverlaysInner) *NullableChannelTranscodeOverlaysInner {
	return &NullableChannelTranscodeOverlaysInner{value: val, isSet: true}
}

func (v NullableChannelTranscodeOverlaysInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelTranscodeOverlaysInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


