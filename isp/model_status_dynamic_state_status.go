/*
 * WBD Aventus Channels API
 *
 * API version: 0.0.0
 * Contact: live-control-plane-devs@wbd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
	"time"
)

// checks if the StatusDynamicStateStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatusDynamicStateStatus{}

// StatusDynamicStateStatus The transcoder's dynamic state settings.
type StatusDynamicStateStatus struct {
	DynamicState *StatusDynamicStateStatusDynamicState `json:"dynamic_state,omitempty"`
	// The timestamp of the last update to the dynamic state.
	LastUpdate *time.Time `json:"last_update,omitempty" format:"date-time" doc:"The timestamp of the last update to the dynamic state."`
}

// NewStatusDynamicStateStatus instantiates a new StatusDynamicStateStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusDynamicStateStatus() *StatusDynamicStateStatus {
	this := StatusDynamicStateStatus{}
	return &this
}

// NewStatusDynamicStateStatusWithDefaults instantiates a new StatusDynamicStateStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusDynamicStateStatusWithDefaults() *StatusDynamicStateStatus {
	this := StatusDynamicStateStatus{}
	return &this
}

// GetDynamicState returns the DynamicState field value if set, zero value otherwise.
func (o *StatusDynamicStateStatus) GetDynamicState() StatusDynamicStateStatusDynamicState {
	if o == nil || IsNil(o.DynamicState) {
		var ret StatusDynamicStateStatusDynamicState
		return ret
	}
	return *o.DynamicState
}

// GetDynamicStateOk returns a tuple with the DynamicState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusDynamicStateStatus) GetDynamicStateOk() (*StatusDynamicStateStatusDynamicState, bool) {
	if o == nil || IsNil(o.DynamicState) {
		return nil, false
	}
	return o.DynamicState, true
}

// HasDynamicState returns a boolean if a field has been set.
func (o *StatusDynamicStateStatus) HasDynamicState() bool {
	if o != nil && !IsNil(o.DynamicState) {
		return true
	}

	return false
}

// SetDynamicState gets a reference to the given StatusDynamicStateStatusDynamicState and assigns it to the DynamicState field.
func (o *StatusDynamicStateStatus) SetDynamicState(v StatusDynamicStateStatusDynamicState) {
	o.DynamicState = &v
}

// GetLastUpdate returns the LastUpdate field value if set, zero value otherwise.
func (o *StatusDynamicStateStatus) GetLastUpdate() time.Time {
	if o == nil || IsNil(o.LastUpdate) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdate
}

// GetLastUpdateOk returns a tuple with the LastUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusDynamicStateStatus) GetLastUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdate) {
		return nil, false
	}
	return o.LastUpdate, true
}

// HasLastUpdate returns a boolean if a field has been set.
func (o *StatusDynamicStateStatus) HasLastUpdate() bool {
	if o != nil && !IsNil(o.LastUpdate) {
		return true
	}

	return false
}

// SetLastUpdate gets a reference to the given time.Time and assigns it to the LastUpdate field.
func (o *StatusDynamicStateStatus) SetLastUpdate(v time.Time) {
	o.LastUpdate = &v
}

func (o StatusDynamicStateStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatusDynamicStateStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DynamicState) {
		toSerialize["dynamic_state"] = o.DynamicState
	}
	if !IsNil(o.LastUpdate) {
		toSerialize["last_update"] = o.LastUpdate
	}
	return toSerialize, nil
}

type NullableStatusDynamicStateStatus struct {
	value *StatusDynamicStateStatus
	isSet bool
}

func (v NullableStatusDynamicStateStatus) Get() *StatusDynamicStateStatus {
	return v.value
}

func (v *NullableStatusDynamicStateStatus) Set(val *StatusDynamicStateStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusDynamicStateStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusDynamicStateStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusDynamicStateStatus(val *StatusDynamicStateStatus) *NullableStatusDynamicStateStatus {
	return &NullableStatusDynamicStateStatus{value: val, isSet: true}
}

func (v NullableStatusDynamicStateStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusDynamicStateStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


