/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// ChannelSignalingSegmentSettingsInnerTierFilter Specifies how to filter the provided segments, when received through in-band SCTE-35, based on the SCTE-35 SpliceInfoSection Tier.
type ChannelSignalingSegmentSettingsInnerTierFilter struct {
	ExplicitTier *ChannelSignalingSegmentSettingsInnerTierFilterExplicitTier `json:"explicit_tier,omitempty"`
}

// NewChannelSignalingSegmentSettingsInnerTierFilter instantiates a new ChannelSignalingSegmentSettingsInnerTierFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelSignalingSegmentSettingsInnerTierFilter() *ChannelSignalingSegmentSettingsInnerTierFilter {
	this := ChannelSignalingSegmentSettingsInnerTierFilter{}
	return &this
}

// NewChannelSignalingSegmentSettingsInnerTierFilterWithDefaults instantiates a new ChannelSignalingSegmentSettingsInnerTierFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelSignalingSegmentSettingsInnerTierFilterWithDefaults() *ChannelSignalingSegmentSettingsInnerTierFilter {
	this := ChannelSignalingSegmentSettingsInnerTierFilter{}
	return &this
}

// GetExplicitTier returns the ExplicitTier field value if set, zero value otherwise.
func (o *ChannelSignalingSegmentSettingsInnerTierFilter) GetExplicitTier() ChannelSignalingSegmentSettingsInnerTierFilterExplicitTier {
	if o == nil || o.ExplicitTier == nil {
		var ret ChannelSignalingSegmentSettingsInnerTierFilterExplicitTier
		return ret
	}
	return *o.ExplicitTier
}

// GetExplicitTierOk returns a tuple with the ExplicitTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelSignalingSegmentSettingsInnerTierFilter) GetExplicitTierOk() (*ChannelSignalingSegmentSettingsInnerTierFilterExplicitTier, bool) {
	if o == nil || o.ExplicitTier == nil {
		return nil, false
	}
	return o.ExplicitTier, true
}

// HasExplicitTier returns a boolean if a field has been set.
func (o *ChannelSignalingSegmentSettingsInnerTierFilter) HasExplicitTier() bool {
	if o != nil && o.ExplicitTier != nil {
		return true
	}

	return false
}

// SetExplicitTier gets a reference to the given ChannelSignalingSegmentSettingsInnerTierFilterExplicitTier and assigns it to the ExplicitTier field.
func (o *ChannelSignalingSegmentSettingsInnerTierFilter) SetExplicitTier(v ChannelSignalingSegmentSettingsInnerTierFilterExplicitTier) {
	o.ExplicitTier = &v
}

func (o ChannelSignalingSegmentSettingsInnerTierFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ExplicitTier != nil {
		toSerialize["explicit_tier"] = o.ExplicitTier
	}
	return json.Marshal(toSerialize)
}

type NullableChannelSignalingSegmentSettingsInnerTierFilter struct {
	value *ChannelSignalingSegmentSettingsInnerTierFilter
	isSet bool
}

func (v NullableChannelSignalingSegmentSettingsInnerTierFilter) Get() *ChannelSignalingSegmentSettingsInnerTierFilter {
	return v.value
}

func (v *NullableChannelSignalingSegmentSettingsInnerTierFilter) Set(val *ChannelSignalingSegmentSettingsInnerTierFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelSignalingSegmentSettingsInnerTierFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelSignalingSegmentSettingsInnerTierFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelSignalingSegmentSettingsInnerTierFilter(val *ChannelSignalingSegmentSettingsInnerTierFilter) *NullableChannelSignalingSegmentSettingsInnerTierFilter {
	return &NullableChannelSignalingSegmentSettingsInnerTierFilter{value: val, isSet: true}
}

func (v NullableChannelSignalingSegmentSettingsInnerTierFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelSignalingSegmentSettingsInnerTierFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


