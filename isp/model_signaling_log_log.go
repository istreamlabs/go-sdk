/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// SignalingLogLog struct for SignalingLogLog
type SignalingLogLog struct {
	Base64 string `json:"base64"`
	Message string `json:"message"`
	Pretty string `json:"pretty"`
}

// NewSignalingLogLog instantiates a new SignalingLogLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignalingLogLog(base64 string, message string, pretty string) *SignalingLogLog {
	this := SignalingLogLog{}
	this.Base64 = base64
	this.Message = message
	this.Pretty = pretty
	return &this
}

// NewSignalingLogLogWithDefaults instantiates a new SignalingLogLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignalingLogLogWithDefaults() *SignalingLogLog {
	this := SignalingLogLog{}
	return &this
}

// GetBase64 returns the Base64 field value
func (o *SignalingLogLog) GetBase64() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Base64
}

// GetBase64Ok returns a tuple with the Base64 field value
// and a boolean to check if the value has been set.
func (o *SignalingLogLog) GetBase64Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Base64, true
}

// SetBase64 sets field value
func (o *SignalingLogLog) SetBase64(v string) {
	o.Base64 = v
}

// GetMessage returns the Message field value
func (o *SignalingLogLog) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *SignalingLogLog) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *SignalingLogLog) SetMessage(v string) {
	o.Message = v
}

// GetPretty returns the Pretty field value
func (o *SignalingLogLog) GetPretty() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pretty
}

// GetPrettyOk returns a tuple with the Pretty field value
// and a boolean to check if the value has been set.
func (o *SignalingLogLog) GetPrettyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pretty, true
}

// SetPretty sets field value
func (o *SignalingLogLog) SetPretty(v string) {
	o.Pretty = v
}

func (o SignalingLogLog) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["base64"] = o.Base64
	}
	if true {
		toSerialize["message"] = o.Message
	}
	if true {
		toSerialize["pretty"] = o.Pretty
	}
	return json.Marshal(toSerialize)
}

type NullableSignalingLogLog struct {
	value *SignalingLogLog
	isSet bool
}

func (v NullableSignalingLogLog) Get() *SignalingLogLog {
	return v.value
}

func (v *NullableSignalingLogLog) Set(val *SignalingLogLog) {
	v.value = val
	v.isSet = true
}

func (v NullableSignalingLogLog) IsSet() bool {
	return v.isSet
}

func (v *NullableSignalingLogLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignalingLogLog(val *SignalingLogLog) *NullableSignalingLogLog {
	return &NullableSignalingLogLog{value: val, isSet: true}
}

func (v NullableSignalingLogLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignalingLogLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


