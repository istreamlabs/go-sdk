/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// ChannelPackagingContentProtectionCpix Only one of ['simple', 'atlas', 'cpix'] may be set.
type ChannelPackagingContentProtectionCpix struct {
	// Unique ID used for certificate settings, unique per distributor.
	CertificatesId *string `json:"certificates_id,omitempty"`
	// (Optional) Content ID that identifies this channel in the CPIX service. Value is defined by the DRM system owner, and if defined will be included as part of a POST request.
	ContentId *string `json:"content_id,omitempty"`
	// Unique ID used for credentials settings, unique per distributor.
	CredentialsId *string `json:"credentials_id,omitempty"`
	// Unique ID of the decryption key to use in case the server response contains content keys encrypted. The key is unique per distirutor, and configured ahead of time by the publishing team and the CPIX service owner.
	DecryptionKeyId *string `json:"decryption_key_id,omitempty"`
	// (Optional) DRM system keys to request. If not defined a GET request will be done, and any key returned will be handled. If defined, random kid(s) (key ids) will be generated on rotation for each DRM system, and a POST request will be done to create them.
	Drms *[]string `json:"drms,omitempty"`
	// (Optional) An identifier to a list of HTTP headers to be added to the request sent to the CPIX service.
	HeadersId *string `json:"headers_id,omitempty"`
	// CPIX service URI
	Uri *string `json:"uri,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ChannelPackagingContentProtectionCpix ChannelPackagingContentProtectionCpix

// NewChannelPackagingContentProtectionCpix instantiates a new ChannelPackagingContentProtectionCpix object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelPackagingContentProtectionCpix() *ChannelPackagingContentProtectionCpix {
	this := ChannelPackagingContentProtectionCpix{}
	return &this
}

// NewChannelPackagingContentProtectionCpixWithDefaults instantiates a new ChannelPackagingContentProtectionCpix object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelPackagingContentProtectionCpixWithDefaults() *ChannelPackagingContentProtectionCpix {
	this := ChannelPackagingContentProtectionCpix{}
	return &this
}

// GetCertificatesId returns the CertificatesId field value if set, zero value otherwise.
func (o *ChannelPackagingContentProtectionCpix) GetCertificatesId() string {
	if o == nil || o.CertificatesId == nil {
		var ret string
		return ret
	}
	return *o.CertificatesId
}

// GetCertificatesIdOk returns a tuple with the CertificatesId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingContentProtectionCpix) GetCertificatesIdOk() (*string, bool) {
	if o == nil || o.CertificatesId == nil {
		return nil, false
	}
	return o.CertificatesId, true
}

// HasCertificatesId returns a boolean if a field has been set.
func (o *ChannelPackagingContentProtectionCpix) HasCertificatesId() bool {
	if o != nil && o.CertificatesId != nil {
		return true
	}

	return false
}

// SetCertificatesId gets a reference to the given string and assigns it to the CertificatesId field.
func (o *ChannelPackagingContentProtectionCpix) SetCertificatesId(v string) {
	o.CertificatesId = &v
}

// GetContentId returns the ContentId field value if set, zero value otherwise.
func (o *ChannelPackagingContentProtectionCpix) GetContentId() string {
	if o == nil || o.ContentId == nil {
		var ret string
		return ret
	}
	return *o.ContentId
}

// GetContentIdOk returns a tuple with the ContentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingContentProtectionCpix) GetContentIdOk() (*string, bool) {
	if o == nil || o.ContentId == nil {
		return nil, false
	}
	return o.ContentId, true
}

// HasContentId returns a boolean if a field has been set.
func (o *ChannelPackagingContentProtectionCpix) HasContentId() bool {
	if o != nil && o.ContentId != nil {
		return true
	}

	return false
}

// SetContentId gets a reference to the given string and assigns it to the ContentId field.
func (o *ChannelPackagingContentProtectionCpix) SetContentId(v string) {
	o.ContentId = &v
}

// GetCredentialsId returns the CredentialsId field value if set, zero value otherwise.
func (o *ChannelPackagingContentProtectionCpix) GetCredentialsId() string {
	if o == nil || o.CredentialsId == nil {
		var ret string
		return ret
	}
	return *o.CredentialsId
}

// GetCredentialsIdOk returns a tuple with the CredentialsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingContentProtectionCpix) GetCredentialsIdOk() (*string, bool) {
	if o == nil || o.CredentialsId == nil {
		return nil, false
	}
	return o.CredentialsId, true
}

// HasCredentialsId returns a boolean if a field has been set.
func (o *ChannelPackagingContentProtectionCpix) HasCredentialsId() bool {
	if o != nil && o.CredentialsId != nil {
		return true
	}

	return false
}

// SetCredentialsId gets a reference to the given string and assigns it to the CredentialsId field.
func (o *ChannelPackagingContentProtectionCpix) SetCredentialsId(v string) {
	o.CredentialsId = &v
}

// GetDecryptionKeyId returns the DecryptionKeyId field value if set, zero value otherwise.
func (o *ChannelPackagingContentProtectionCpix) GetDecryptionKeyId() string {
	if o == nil || o.DecryptionKeyId == nil {
		var ret string
		return ret
	}
	return *o.DecryptionKeyId
}

// GetDecryptionKeyIdOk returns a tuple with the DecryptionKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingContentProtectionCpix) GetDecryptionKeyIdOk() (*string, bool) {
	if o == nil || o.DecryptionKeyId == nil {
		return nil, false
	}
	return o.DecryptionKeyId, true
}

// HasDecryptionKeyId returns a boolean if a field has been set.
func (o *ChannelPackagingContentProtectionCpix) HasDecryptionKeyId() bool {
	if o != nil && o.DecryptionKeyId != nil {
		return true
	}

	return false
}

// SetDecryptionKeyId gets a reference to the given string and assigns it to the DecryptionKeyId field.
func (o *ChannelPackagingContentProtectionCpix) SetDecryptionKeyId(v string) {
	o.DecryptionKeyId = &v
}

// GetDrms returns the Drms field value if set, zero value otherwise.
func (o *ChannelPackagingContentProtectionCpix) GetDrms() []string {
	if o == nil || o.Drms == nil {
		var ret []string
		return ret
	}
	return *o.Drms
}

// GetDrmsOk returns a tuple with the Drms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingContentProtectionCpix) GetDrmsOk() (*[]string, bool) {
	if o == nil || o.Drms == nil {
		return nil, false
	}
	return o.Drms, true
}

// HasDrms returns a boolean if a field has been set.
func (o *ChannelPackagingContentProtectionCpix) HasDrms() bool {
	if o != nil && o.Drms != nil {
		return true
	}

	return false
}

// SetDrms gets a reference to the given []string and assigns it to the Drms field.
func (o *ChannelPackagingContentProtectionCpix) SetDrms(v []string) {
	o.Drms = &v
}

// GetHeadersId returns the HeadersId field value if set, zero value otherwise.
func (o *ChannelPackagingContentProtectionCpix) GetHeadersId() string {
	if o == nil || o.HeadersId == nil {
		var ret string
		return ret
	}
	return *o.HeadersId
}

// GetHeadersIdOk returns a tuple with the HeadersId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingContentProtectionCpix) GetHeadersIdOk() (*string, bool) {
	if o == nil || o.HeadersId == nil {
		return nil, false
	}
	return o.HeadersId, true
}

// HasHeadersId returns a boolean if a field has been set.
func (o *ChannelPackagingContentProtectionCpix) HasHeadersId() bool {
	if o != nil && o.HeadersId != nil {
		return true
	}

	return false
}

// SetHeadersId gets a reference to the given string and assigns it to the HeadersId field.
func (o *ChannelPackagingContentProtectionCpix) SetHeadersId(v string) {
	o.HeadersId = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *ChannelPackagingContentProtectionCpix) GetUri() string {
	if o == nil || o.Uri == nil {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingContentProtectionCpix) GetUriOk() (*string, bool) {
	if o == nil || o.Uri == nil {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *ChannelPackagingContentProtectionCpix) HasUri() bool {
	if o != nil && o.Uri != nil {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *ChannelPackagingContentProtectionCpix) SetUri(v string) {
	o.Uri = &v
}

func (o ChannelPackagingContentProtectionCpix) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CertificatesId != nil {
		toSerialize["certificates_id"] = o.CertificatesId
	}
	if o.ContentId != nil {
		toSerialize["content_id"] = o.ContentId
	}
	if o.CredentialsId != nil {
		toSerialize["credentials_id"] = o.CredentialsId
	}
	if o.DecryptionKeyId != nil {
		toSerialize["decryption_key_id"] = o.DecryptionKeyId
	}
	if o.Drms != nil {
		toSerialize["drms"] = o.Drms
	}
	if o.HeadersId != nil {
		toSerialize["headers_id"] = o.HeadersId
	}
	if o.Uri != nil {
		toSerialize["uri"] = o.Uri
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ChannelPackagingContentProtectionCpix) UnmarshalJSON(bytes []byte) (err error) {
	varChannelPackagingContentProtectionCpix := _ChannelPackagingContentProtectionCpix{}

	if err = json.Unmarshal(bytes, &varChannelPackagingContentProtectionCpix); err == nil {
		*o = ChannelPackagingContentProtectionCpix(varChannelPackagingContentProtectionCpix)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "certificates_id")
		delete(additionalProperties, "content_id")
		delete(additionalProperties, "credentials_id")
		delete(additionalProperties, "decryption_key_id")
		delete(additionalProperties, "drms")
		delete(additionalProperties, "headers_id")
		delete(additionalProperties, "uri")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableChannelPackagingContentProtectionCpix struct {
	value *ChannelPackagingContentProtectionCpix
	isSet bool
}

func (v NullableChannelPackagingContentProtectionCpix) Get() *ChannelPackagingContentProtectionCpix {
	return v.value
}

func (v *NullableChannelPackagingContentProtectionCpix) Set(val *ChannelPackagingContentProtectionCpix) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelPackagingContentProtectionCpix) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelPackagingContentProtectionCpix) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelPackagingContentProtectionCpix(val *ChannelPackagingContentProtectionCpix) *NullableChannelPackagingContentProtectionCpix {
	return &NullableChannelPackagingContentProtectionCpix{value: val, isSet: true}
}

func (v NullableChannelPackagingContentProtectionCpix) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelPackagingContentProtectionCpix) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


