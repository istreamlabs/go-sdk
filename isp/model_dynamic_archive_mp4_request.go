/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the DynamicArchiveMP4Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DynamicArchiveMP4Request{}

// DynamicArchiveMP4Request struct for DynamicArchiveMP4Request
type DynamicArchiveMP4Request struct {
	// An optional URL to a JSON Schema document describing this resource
	Schema *string `json:"$schema,omitempty" format:"uri" doc:"An optional URL to a JSON Schema document describing this resource"`
	Archive DynamicArchiveMP4RequestArchive `json:"archive"`
	// Correlation ID for this FER archive request
	CorrelationId string `json:"correlation_id" doc:"Correlation ID for this FER archive request"`
	// URL of the main manifest to reference for the mp4
	ManifestUrl string `json:"manifest_url" doc:"URL of the main manifest to reference for the mp4"`
	Notification DynamicArchiveMP4RequestNotification `json:"notification"`
	// Filename for the generated mp4
	OutputFilename string `json:"output_filename" doc:"Filename for the generated mp4"`
	// Query string containing params for the manifest url
	QueryString string `json:"query_string" doc:"Query string containing params for the manifest url"`
}

// NewDynamicArchiveMP4Request instantiates a new DynamicArchiveMP4Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDynamicArchiveMP4Request(archive DynamicArchiveMP4RequestArchive, correlationId string, manifestUrl string, notification DynamicArchiveMP4RequestNotification, outputFilename string, queryString string) *DynamicArchiveMP4Request {
	this := DynamicArchiveMP4Request{}
	this.Archive = archive
	this.CorrelationId = correlationId
	this.ManifestUrl = manifestUrl
	this.Notification = notification
	this.OutputFilename = outputFilename
	this.QueryString = queryString
	return &this
}

// NewDynamicArchiveMP4RequestWithDefaults instantiates a new DynamicArchiveMP4Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDynamicArchiveMP4RequestWithDefaults() *DynamicArchiveMP4Request {
	this := DynamicArchiveMP4Request{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *DynamicArchiveMP4Request) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicArchiveMP4Request) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *DynamicArchiveMP4Request) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *DynamicArchiveMP4Request) SetSchema(v string) {
	o.Schema = &v
}

// GetArchive returns the Archive field value
func (o *DynamicArchiveMP4Request) GetArchive() DynamicArchiveMP4RequestArchive {
	if o == nil {
		var ret DynamicArchiveMP4RequestArchive
		return ret
	}

	return o.Archive
}

// GetArchiveOk returns a tuple with the Archive field value
// and a boolean to check if the value has been set.
func (o *DynamicArchiveMP4Request) GetArchiveOk() (*DynamicArchiveMP4RequestArchive, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Archive, true
}

// SetArchive sets field value
func (o *DynamicArchiveMP4Request) SetArchive(v DynamicArchiveMP4RequestArchive) {
	o.Archive = v
}

// GetCorrelationId returns the CorrelationId field value
func (o *DynamicArchiveMP4Request) GetCorrelationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CorrelationId
}

// GetCorrelationIdOk returns a tuple with the CorrelationId field value
// and a boolean to check if the value has been set.
func (o *DynamicArchiveMP4Request) GetCorrelationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CorrelationId, true
}

// SetCorrelationId sets field value
func (o *DynamicArchiveMP4Request) SetCorrelationId(v string) {
	o.CorrelationId = v
}

// GetManifestUrl returns the ManifestUrl field value
func (o *DynamicArchiveMP4Request) GetManifestUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ManifestUrl
}

// GetManifestUrlOk returns a tuple with the ManifestUrl field value
// and a boolean to check if the value has been set.
func (o *DynamicArchiveMP4Request) GetManifestUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ManifestUrl, true
}

// SetManifestUrl sets field value
func (o *DynamicArchiveMP4Request) SetManifestUrl(v string) {
	o.ManifestUrl = v
}

// GetNotification returns the Notification field value
func (o *DynamicArchiveMP4Request) GetNotification() DynamicArchiveMP4RequestNotification {
	if o == nil {
		var ret DynamicArchiveMP4RequestNotification
		return ret
	}

	return o.Notification
}

// GetNotificationOk returns a tuple with the Notification field value
// and a boolean to check if the value has been set.
func (o *DynamicArchiveMP4Request) GetNotificationOk() (*DynamicArchiveMP4RequestNotification, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Notification, true
}

// SetNotification sets field value
func (o *DynamicArchiveMP4Request) SetNotification(v DynamicArchiveMP4RequestNotification) {
	o.Notification = v
}

// GetOutputFilename returns the OutputFilename field value
func (o *DynamicArchiveMP4Request) GetOutputFilename() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OutputFilename
}

// GetOutputFilenameOk returns a tuple with the OutputFilename field value
// and a boolean to check if the value has been set.
func (o *DynamicArchiveMP4Request) GetOutputFilenameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutputFilename, true
}

// SetOutputFilename sets field value
func (o *DynamicArchiveMP4Request) SetOutputFilename(v string) {
	o.OutputFilename = v
}

// GetQueryString returns the QueryString field value
func (o *DynamicArchiveMP4Request) GetQueryString() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QueryString
}

// GetQueryStringOk returns a tuple with the QueryString field value
// and a boolean to check if the value has been set.
func (o *DynamicArchiveMP4Request) GetQueryStringOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QueryString, true
}

// SetQueryString sets field value
func (o *DynamicArchiveMP4Request) SetQueryString(v string) {
	o.QueryString = v
}

func (o DynamicArchiveMP4Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DynamicArchiveMP4Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schema) {
		toSerialize["$schema"] = o.Schema
	}
	toSerialize["archive"] = o.Archive
	toSerialize["correlation_id"] = o.CorrelationId
	toSerialize["manifest_url"] = o.ManifestUrl
	toSerialize["notification"] = o.Notification
	toSerialize["output_filename"] = o.OutputFilename
	toSerialize["query_string"] = o.QueryString
	return toSerialize, nil
}

type NullableDynamicArchiveMP4Request struct {
	value *DynamicArchiveMP4Request
	isSet bool
}

func (v NullableDynamicArchiveMP4Request) Get() *DynamicArchiveMP4Request {
	return v.value
}

func (v *NullableDynamicArchiveMP4Request) Set(val *DynamicArchiveMP4Request) {
	v.value = val
	v.isSet = true
}

func (v NullableDynamicArchiveMP4Request) IsSet() bool {
	return v.isSet
}

func (v *NullableDynamicArchiveMP4Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDynamicArchiveMP4Request(val *DynamicArchiveMP4Request) *NullableDynamicArchiveMP4Request {
	return &NullableDynamicArchiveMP4Request{value: val, isSet: true}
}

func (v NullableDynamicArchiveMP4Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDynamicArchiveMP4Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


