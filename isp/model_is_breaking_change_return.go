/*
 * WBD Aventus Channels API
 *
 * API version: 0.0.0
 * Contact: live-control-plane-devs@wbd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the IsBreakingChangeReturn type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IsBreakingChangeReturn{}

// IsBreakingChangeReturn struct for IsBreakingChangeReturn
type IsBreakingChangeReturn struct {
	// An optional URL to a JSON Schema document describing this resource
	Schema *string `json:"$schema,omitempty" format:"uri" doc:"An optional URL to a JSON Schema document describing this resource"`
	// Unique channel identifier
	Channelid string `json:"channelid" maxLength:"60" pattern:"/^([a-z0-9]+(-*[a-z0-9]+)*)$/" doc:"Unique channel identifier"`
	// The current revision of the channel.
	CurrentRevision int32 `json:"currentRevision" format:"int32" doc:"The current revision of the channel."`
	// True if the change will cause a break in user playback. False if the change will not cause a break in user playback or the channel doesn't exist
	IsBreakingChange bool `json:"isBreakingChange" doc:"True if the change will cause a break in user playback. False if the change will not cause a break in user playback or the channel doesn't exist"`
	// Organization name
	Organization string `json:"organization" doc:"Organization name"`
}

// NewIsBreakingChangeReturn instantiates a new IsBreakingChangeReturn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIsBreakingChangeReturn(channelid string, currentRevision int32, isBreakingChange bool, organization string) *IsBreakingChangeReturn {
	this := IsBreakingChangeReturn{}
	this.Channelid = channelid
	this.CurrentRevision = currentRevision
	this.IsBreakingChange = isBreakingChange
	this.Organization = organization
	return &this
}

// NewIsBreakingChangeReturnWithDefaults instantiates a new IsBreakingChangeReturn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIsBreakingChangeReturnWithDefaults() *IsBreakingChangeReturn {
	this := IsBreakingChangeReturn{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *IsBreakingChangeReturn) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IsBreakingChangeReturn) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *IsBreakingChangeReturn) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *IsBreakingChangeReturn) SetSchema(v string) {
	o.Schema = &v
}

// GetChannelid returns the Channelid field value
func (o *IsBreakingChangeReturn) GetChannelid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Channelid
}

// GetChannelidOk returns a tuple with the Channelid field value
// and a boolean to check if the value has been set.
func (o *IsBreakingChangeReturn) GetChannelidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Channelid, true
}

// SetChannelid sets field value
func (o *IsBreakingChangeReturn) SetChannelid(v string) {
	o.Channelid = v
}

// GetCurrentRevision returns the CurrentRevision field value
func (o *IsBreakingChangeReturn) GetCurrentRevision() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CurrentRevision
}

// GetCurrentRevisionOk returns a tuple with the CurrentRevision field value
// and a boolean to check if the value has been set.
func (o *IsBreakingChangeReturn) GetCurrentRevisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentRevision, true
}

// SetCurrentRevision sets field value
func (o *IsBreakingChangeReturn) SetCurrentRevision(v int32) {
	o.CurrentRevision = v
}

// GetIsBreakingChange returns the IsBreakingChange field value
func (o *IsBreakingChangeReturn) GetIsBreakingChange() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsBreakingChange
}

// GetIsBreakingChangeOk returns a tuple with the IsBreakingChange field value
// and a boolean to check if the value has been set.
func (o *IsBreakingChangeReturn) GetIsBreakingChangeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsBreakingChange, true
}

// SetIsBreakingChange sets field value
func (o *IsBreakingChangeReturn) SetIsBreakingChange(v bool) {
	o.IsBreakingChange = v
}

// GetOrganization returns the Organization field value
func (o *IsBreakingChangeReturn) GetOrganization() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value
// and a boolean to check if the value has been set.
func (o *IsBreakingChangeReturn) GetOrganizationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Organization, true
}

// SetOrganization sets field value
func (o *IsBreakingChangeReturn) SetOrganization(v string) {
	o.Organization = v
}

func (o IsBreakingChangeReturn) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IsBreakingChangeReturn) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schema) {
		toSerialize["$schema"] = o.Schema
	}
	toSerialize["channelid"] = o.Channelid
	toSerialize["currentRevision"] = o.CurrentRevision
	toSerialize["isBreakingChange"] = o.IsBreakingChange
	toSerialize["organization"] = o.Organization
	return toSerialize, nil
}

type NullableIsBreakingChangeReturn struct {
	value *IsBreakingChangeReturn
	isSet bool
}

func (v NullableIsBreakingChangeReturn) Get() *IsBreakingChangeReturn {
	return v.value
}

func (v *NullableIsBreakingChangeReturn) Set(val *IsBreakingChangeReturn) {
	v.value = val
	v.isSet = true
}

func (v NullableIsBreakingChangeReturn) IsSet() bool {
	return v.isSet
}

func (v *NullableIsBreakingChangeReturn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIsBreakingChangeReturn(val *IsBreakingChangeReturn) *NullableIsBreakingChangeReturn {
	return &NullableIsBreakingChangeReturn{value: val, isSet: true}
}

func (v NullableIsBreakingChangeReturn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIsBreakingChangeReturn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


