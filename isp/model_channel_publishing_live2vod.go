/*
 * WBD Aventus Channels API
 *
 * API version: 0.0.0
 * Contact: live-control-plane-devs@wbd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the ChannelPublishingLive2vod type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelPublishingLive2vod{}

// ChannelPublishingLive2vod Live2VOD configuration used to archive the channel data, this allows clip creation after the content is no longer live.
type ChannelPublishingLive2vod struct {
	// BETA - (Optional) Indicates whether the system should send the unpackaged segments produced from the transcoder to the L2V system for purposes of creating mp4s and/or repackaging.
	ClearCapture *bool `json:"clear_capture,omitempty" doc:"BETA - (Optional) Indicates whether the system should send the unpackaged segments produced from the transcoder to the L2V system for purposes of creating mp4s and/or repackaging."`
	// Product ID that VODs will be associated with in the Live2VOD system. The value of this ID is pre-configured in the Live2VOD portal.
	ProductId *string `json:"product_id,omitempty" minLength:"1" doc:"Product ID that VODs will be associated with in the Live2VOD system. The value of this ID is pre-configured in the Live2VOD portal."`
	// Specifies the retention time, in days, for archived content.
	RetentionDays *int32 `json:"retention_days,omitempty" format:"int32" minimum:"1" maximum:"30" doc:"Specifies the retention time, in days, for archived content."`
}

// NewChannelPublishingLive2vod instantiates a new ChannelPublishingLive2vod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelPublishingLive2vod() *ChannelPublishingLive2vod {
	this := ChannelPublishingLive2vod{}
	return &this
}

// NewChannelPublishingLive2vodWithDefaults instantiates a new ChannelPublishingLive2vod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelPublishingLive2vodWithDefaults() *ChannelPublishingLive2vod {
	this := ChannelPublishingLive2vod{}
	return &this
}

// GetClearCapture returns the ClearCapture field value if set, zero value otherwise.
func (o *ChannelPublishingLive2vod) GetClearCapture() bool {
	if o == nil || IsNil(o.ClearCapture) {
		var ret bool
		return ret
	}
	return *o.ClearCapture
}

// GetClearCaptureOk returns a tuple with the ClearCapture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPublishingLive2vod) GetClearCaptureOk() (*bool, bool) {
	if o == nil || IsNil(o.ClearCapture) {
		return nil, false
	}
	return o.ClearCapture, true
}

// HasClearCapture returns a boolean if a field has been set.
func (o *ChannelPublishingLive2vod) HasClearCapture() bool {
	if o != nil && !IsNil(o.ClearCapture) {
		return true
	}

	return false
}

// SetClearCapture gets a reference to the given bool and assigns it to the ClearCapture field.
func (o *ChannelPublishingLive2vod) SetClearCapture(v bool) {
	o.ClearCapture = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *ChannelPublishingLive2vod) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPublishingLive2vod) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *ChannelPublishingLive2vod) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *ChannelPublishingLive2vod) SetProductId(v string) {
	o.ProductId = &v
}

// GetRetentionDays returns the RetentionDays field value if set, zero value otherwise.
func (o *ChannelPublishingLive2vod) GetRetentionDays() int32 {
	if o == nil || IsNil(o.RetentionDays) {
		var ret int32
		return ret
	}
	return *o.RetentionDays
}

// GetRetentionDaysOk returns a tuple with the RetentionDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPublishingLive2vod) GetRetentionDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.RetentionDays) {
		return nil, false
	}
	return o.RetentionDays, true
}

// HasRetentionDays returns a boolean if a field has been set.
func (o *ChannelPublishingLive2vod) HasRetentionDays() bool {
	if o != nil && !IsNil(o.RetentionDays) {
		return true
	}

	return false
}

// SetRetentionDays gets a reference to the given int32 and assigns it to the RetentionDays field.
func (o *ChannelPublishingLive2vod) SetRetentionDays(v int32) {
	o.RetentionDays = &v
}

func (o ChannelPublishingLive2vod) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelPublishingLive2vod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClearCapture) {
		toSerialize["clear_capture"] = o.ClearCapture
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.RetentionDays) {
		toSerialize["retention_days"] = o.RetentionDays
	}
	return toSerialize, nil
}

type NullableChannelPublishingLive2vod struct {
	value *ChannelPublishingLive2vod
	isSet bool
}

func (v NullableChannelPublishingLive2vod) Get() *ChannelPublishingLive2vod {
	return v.value
}

func (v *NullableChannelPublishingLive2vod) Set(val *ChannelPublishingLive2vod) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelPublishingLive2vod) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelPublishingLive2vod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelPublishingLive2vod(val *ChannelPublishingLive2vod) *NullableChannelPublishingLive2vod {
	return &NullableChannelPublishingLive2vod{value: val, isSet: true}
}

func (v NullableChannelPublishingLive2vod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelPublishingLive2vod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
