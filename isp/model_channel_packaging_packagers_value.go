/*
 * WBD Aventus Channels API
 *
 * API version: 0.0.0
 * Contact: live-control-plane-devs@wbd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the ChannelPackagingPackagersValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelPackagingPackagersValue{}

// ChannelPackagingPackagersValue struct for ChannelPackagingPackagersValue
type ChannelPackagingPackagersValue struct {
	ContentProtection *ChannelPackagingPackagersValueContentProtection `json:"content_protection,omitempty"`
	Mp2t              *ChannelPackagingPackagersValueMp2t              `json:"mp2t,omitempty"`
	Mp4               *ChannelPackagingPackagersValueMp4               `json:"mp4,omitempty"`
	// Only one of ['web_vtt', 'ttml'] may be set.
	Ttml   *map[string]interface{}               `json:"ttml,omitempty" doc:"Only one of ['web_vtt', 'ttml'] may be set."`
	WebVtt *ChannelPackagingPackagersValueWebVtt `json:"web_vtt,omitempty"`
}

// NewChannelPackagingPackagersValue instantiates a new ChannelPackagingPackagersValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelPackagingPackagersValue() *ChannelPackagingPackagersValue {
	this := ChannelPackagingPackagersValue{}
	return &this
}

// NewChannelPackagingPackagersValueWithDefaults instantiates a new ChannelPackagingPackagersValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelPackagingPackagersValueWithDefaults() *ChannelPackagingPackagersValue {
	this := ChannelPackagingPackagersValue{}
	return &this
}

// GetContentProtection returns the ContentProtection field value if set, zero value otherwise.
func (o *ChannelPackagingPackagersValue) GetContentProtection() ChannelPackagingPackagersValueContentProtection {
	if o == nil || IsNil(o.ContentProtection) {
		var ret ChannelPackagingPackagersValueContentProtection
		return ret
	}
	return *o.ContentProtection
}

// GetContentProtectionOk returns a tuple with the ContentProtection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingPackagersValue) GetContentProtectionOk() (*ChannelPackagingPackagersValueContentProtection, bool) {
	if o == nil || IsNil(o.ContentProtection) {
		return nil, false
	}
	return o.ContentProtection, true
}

// HasContentProtection returns a boolean if a field has been set.
func (o *ChannelPackagingPackagersValue) HasContentProtection() bool {
	if o != nil && !IsNil(o.ContentProtection) {
		return true
	}

	return false
}

// SetContentProtection gets a reference to the given ChannelPackagingPackagersValueContentProtection and assigns it to the ContentProtection field.
func (o *ChannelPackagingPackagersValue) SetContentProtection(v ChannelPackagingPackagersValueContentProtection) {
	o.ContentProtection = &v
}

// GetMp2t returns the Mp2t field value if set, zero value otherwise.
func (o *ChannelPackagingPackagersValue) GetMp2t() ChannelPackagingPackagersValueMp2t {
	if o == nil || IsNil(o.Mp2t) {
		var ret ChannelPackagingPackagersValueMp2t
		return ret
	}
	return *o.Mp2t
}

// GetMp2tOk returns a tuple with the Mp2t field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingPackagersValue) GetMp2tOk() (*ChannelPackagingPackagersValueMp2t, bool) {
	if o == nil || IsNil(o.Mp2t) {
		return nil, false
	}
	return o.Mp2t, true
}

// HasMp2t returns a boolean if a field has been set.
func (o *ChannelPackagingPackagersValue) HasMp2t() bool {
	if o != nil && !IsNil(o.Mp2t) {
		return true
	}

	return false
}

// SetMp2t gets a reference to the given ChannelPackagingPackagersValueMp2t and assigns it to the Mp2t field.
func (o *ChannelPackagingPackagersValue) SetMp2t(v ChannelPackagingPackagersValueMp2t) {
	o.Mp2t = &v
}

// GetMp4 returns the Mp4 field value if set, zero value otherwise.
func (o *ChannelPackagingPackagersValue) GetMp4() ChannelPackagingPackagersValueMp4 {
	if o == nil || IsNil(o.Mp4) {
		var ret ChannelPackagingPackagersValueMp4
		return ret
	}
	return *o.Mp4
}

// GetMp4Ok returns a tuple with the Mp4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingPackagersValue) GetMp4Ok() (*ChannelPackagingPackagersValueMp4, bool) {
	if o == nil || IsNil(o.Mp4) {
		return nil, false
	}
	return o.Mp4, true
}

// HasMp4 returns a boolean if a field has been set.
func (o *ChannelPackagingPackagersValue) HasMp4() bool {
	if o != nil && !IsNil(o.Mp4) {
		return true
	}

	return false
}

// SetMp4 gets a reference to the given ChannelPackagingPackagersValueMp4 and assigns it to the Mp4 field.
func (o *ChannelPackagingPackagersValue) SetMp4(v ChannelPackagingPackagersValueMp4) {
	o.Mp4 = &v
}

// GetTtml returns the Ttml field value if set, zero value otherwise.
func (o *ChannelPackagingPackagersValue) GetTtml() map[string]interface{} {
	if o == nil || IsNil(o.Ttml) {
		var ret map[string]interface{}
		return ret
	}
	return *o.Ttml
}

// GetTtmlOk returns a tuple with the Ttml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingPackagersValue) GetTtmlOk() (*map[string]interface{}, bool) {
	if o == nil || IsNil(o.Ttml) {
		return nil, false
	}
	return o.Ttml, true
}

// HasTtml returns a boolean if a field has been set.
func (o *ChannelPackagingPackagersValue) HasTtml() bool {
	if o != nil && !IsNil(o.Ttml) {
		return true
	}

	return false
}

// SetTtml gets a reference to the given map[string]interface{} and assigns it to the Ttml field.
func (o *ChannelPackagingPackagersValue) SetTtml(v map[string]interface{}) {
	o.Ttml = &v
}

// GetWebVtt returns the WebVtt field value if set, zero value otherwise.
func (o *ChannelPackagingPackagersValue) GetWebVtt() ChannelPackagingPackagersValueWebVtt {
	if o == nil || IsNil(o.WebVtt) {
		var ret ChannelPackagingPackagersValueWebVtt
		return ret
	}
	return *o.WebVtt
}

// GetWebVttOk returns a tuple with the WebVtt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingPackagersValue) GetWebVttOk() (*ChannelPackagingPackagersValueWebVtt, bool) {
	if o == nil || IsNil(o.WebVtt) {
		return nil, false
	}
	return o.WebVtt, true
}

// HasWebVtt returns a boolean if a field has been set.
func (o *ChannelPackagingPackagersValue) HasWebVtt() bool {
	if o != nil && !IsNil(o.WebVtt) {
		return true
	}

	return false
}

// SetWebVtt gets a reference to the given ChannelPackagingPackagersValueWebVtt and assigns it to the WebVtt field.
func (o *ChannelPackagingPackagersValue) SetWebVtt(v ChannelPackagingPackagersValueWebVtt) {
	o.WebVtt = &v
}

func (o ChannelPackagingPackagersValue) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelPackagingPackagersValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContentProtection) {
		toSerialize["content_protection"] = o.ContentProtection
	}
	if !IsNil(o.Mp2t) {
		toSerialize["mp2t"] = o.Mp2t
	}
	if !IsNil(o.Mp4) {
		toSerialize["mp4"] = o.Mp4
	}
	if !IsNil(o.Ttml) {
		toSerialize["ttml"] = o.Ttml
	}
	if !IsNil(o.WebVtt) {
		toSerialize["web_vtt"] = o.WebVtt
	}
	return toSerialize, nil
}

type NullableChannelPackagingPackagersValue struct {
	value *ChannelPackagingPackagersValue
	isSet bool
}

func (v NullableChannelPackagingPackagersValue) Get() *ChannelPackagingPackagersValue {
	return v.value
}

func (v *NullableChannelPackagingPackagersValue) Set(val *ChannelPackagingPackagersValue) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelPackagingPackagersValue) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelPackagingPackagersValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelPackagingPackagersValue(val *ChannelPackagingPackagersValue) *NullableChannelPackagingPackagersValue {
	return &NullableChannelPackagingPackagersValue{value: val, isSet: true}
}

func (v NullableChannelPackagingPackagersValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelPackagingPackagersValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
