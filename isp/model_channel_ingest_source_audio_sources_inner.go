/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// ChannelIngestSourceAudioSourcesInner struct for ChannelIngestSourceAudioSourcesInner
type ChannelIngestSourceAudioSourcesInner struct {
	Id *string `json:"id,omitempty"`
	// RFC 5646, e.g. 'en' 'en-US'
	Language *string `json:"language,omitempty"`
	// Language fiendly name, e.g. 'English', 'Spanish'
	Name *string `json:"name,omitempty"`
	// Expression for choosing an audio track in the stream for this AudioSource https://istreamplanet.atlassian.net/wiki/spaces/T/pages/847970791/Proposal+Audio+Track+Selection
	Selector *string `json:"selector,omitempty"`
}

// NewChannelIngestSourceAudioSourcesInner instantiates a new ChannelIngestSourceAudioSourcesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelIngestSourceAudioSourcesInner() *ChannelIngestSourceAudioSourcesInner {
	this := ChannelIngestSourceAudioSourcesInner{}
	return &this
}

// NewChannelIngestSourceAudioSourcesInnerWithDefaults instantiates a new ChannelIngestSourceAudioSourcesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelIngestSourceAudioSourcesInnerWithDefaults() *ChannelIngestSourceAudioSourcesInner {
	this := ChannelIngestSourceAudioSourcesInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ChannelIngestSourceAudioSourcesInner) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelIngestSourceAudioSourcesInner) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ChannelIngestSourceAudioSourcesInner) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ChannelIngestSourceAudioSourcesInner) SetId(v string) {
	o.Id = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *ChannelIngestSourceAudioSourcesInner) GetLanguage() string {
	if o == nil || o.Language == nil {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelIngestSourceAudioSourcesInner) GetLanguageOk() (*string, bool) {
	if o == nil || o.Language == nil {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *ChannelIngestSourceAudioSourcesInner) HasLanguage() bool {
	if o != nil && o.Language != nil {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *ChannelIngestSourceAudioSourcesInner) SetLanguage(v string) {
	o.Language = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ChannelIngestSourceAudioSourcesInner) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelIngestSourceAudioSourcesInner) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ChannelIngestSourceAudioSourcesInner) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ChannelIngestSourceAudioSourcesInner) SetName(v string) {
	o.Name = &v
}

// GetSelector returns the Selector field value if set, zero value otherwise.
func (o *ChannelIngestSourceAudioSourcesInner) GetSelector() string {
	if o == nil || o.Selector == nil {
		var ret string
		return ret
	}
	return *o.Selector
}

// GetSelectorOk returns a tuple with the Selector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelIngestSourceAudioSourcesInner) GetSelectorOk() (*string, bool) {
	if o == nil || o.Selector == nil {
		return nil, false
	}
	return o.Selector, true
}

// HasSelector returns a boolean if a field has been set.
func (o *ChannelIngestSourceAudioSourcesInner) HasSelector() bool {
	if o != nil && o.Selector != nil {
		return true
	}

	return false
}

// SetSelector gets a reference to the given string and assigns it to the Selector field.
func (o *ChannelIngestSourceAudioSourcesInner) SetSelector(v string) {
	o.Selector = &v
}

func (o ChannelIngestSourceAudioSourcesInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Language != nil {
		toSerialize["language"] = o.Language
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Selector != nil {
		toSerialize["selector"] = o.Selector
	}
	return json.Marshal(toSerialize)
}

type NullableChannelIngestSourceAudioSourcesInner struct {
	value *ChannelIngestSourceAudioSourcesInner
	isSet bool
}

func (v NullableChannelIngestSourceAudioSourcesInner) Get() *ChannelIngestSourceAudioSourcesInner {
	return v.value
}

func (v *NullableChannelIngestSourceAudioSourcesInner) Set(val *ChannelIngestSourceAudioSourcesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelIngestSourceAudioSourcesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelIngestSourceAudioSourcesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelIngestSourceAudioSourcesInner(val *ChannelIngestSourceAudioSourcesInner) *NullableChannelIngestSourceAudioSourcesInner {
	return &NullableChannelIngestSourceAudioSourcesInner{value: val, isSet: true}
}

func (v NullableChannelIngestSourceAudioSourcesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelIngestSourceAudioSourcesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


