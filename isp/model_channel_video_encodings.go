/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// ChannelVideoEncodings struct for ChannelVideoEncodings
type ChannelVideoEncodings struct {
	// Average bitrate in bits per second
	Bitrate int32 `json:"bitrate"`
	// Video codec for encoding
	Codec *string `json:"codec,omitempty"`
	// Video height in pixels
	Height int32 `json:"height"`
	// Video encoding unique identifier
	Id string `json:"id"`
	// Video width in pixels
	Width int32 `json:"width"`
	AdditionalProperties map[string]interface{}
}

type _ChannelVideoEncodings ChannelVideoEncodings

// NewChannelVideoEncodings instantiates a new ChannelVideoEncodings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelVideoEncodings(bitrate int32, height int32, id string, width int32, ) *ChannelVideoEncodings {
	this := ChannelVideoEncodings{}
	this.Bitrate = bitrate
	this.Height = height
	this.Id = id
	this.Width = width
	return &this
}

// NewChannelVideoEncodingsWithDefaults instantiates a new ChannelVideoEncodings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelVideoEncodingsWithDefaults() *ChannelVideoEncodings {
	this := ChannelVideoEncodings{}
	return &this
}

// GetBitrate returns the Bitrate field value
func (o *ChannelVideoEncodings) GetBitrate() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Bitrate
}

// GetBitrateOk returns a tuple with the Bitrate field value
// and a boolean to check if the value has been set.
func (o *ChannelVideoEncodings) GetBitrateOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Bitrate, true
}

// SetBitrate sets field value
func (o *ChannelVideoEncodings) SetBitrate(v int32) {
	o.Bitrate = v
}

// GetCodec returns the Codec field value if set, zero value otherwise.
func (o *ChannelVideoEncodings) GetCodec() string {
	if o == nil || o.Codec == nil {
		var ret string
		return ret
	}
	return *o.Codec
}

// GetCodecOk returns a tuple with the Codec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelVideoEncodings) GetCodecOk() (*string, bool) {
	if o == nil || o.Codec == nil {
		return nil, false
	}
	return o.Codec, true
}

// HasCodec returns a boolean if a field has been set.
func (o *ChannelVideoEncodings) HasCodec() bool {
	if o != nil && o.Codec != nil {
		return true
	}

	return false
}

// SetCodec gets a reference to the given string and assigns it to the Codec field.
func (o *ChannelVideoEncodings) SetCodec(v string) {
	o.Codec = &v
}

// GetHeight returns the Height field value
func (o *ChannelVideoEncodings) GetHeight() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Height
}

// GetHeightOk returns a tuple with the Height field value
// and a boolean to check if the value has been set.
func (o *ChannelVideoEncodings) GetHeightOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Height, true
}

// SetHeight sets field value
func (o *ChannelVideoEncodings) SetHeight(v int32) {
	o.Height = v
}

// GetId returns the Id field value
func (o *ChannelVideoEncodings) GetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ChannelVideoEncodings) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ChannelVideoEncodings) SetId(v string) {
	o.Id = v
}

// GetWidth returns the Width field value
func (o *ChannelVideoEncodings) GetWidth() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Width
}

// GetWidthOk returns a tuple with the Width field value
// and a boolean to check if the value has been set.
func (o *ChannelVideoEncodings) GetWidthOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Width, true
}

// SetWidth sets field value
func (o *ChannelVideoEncodings) SetWidth(v int32) {
	o.Width = v
}

func (o ChannelVideoEncodings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["bitrate"] = o.Bitrate
	}
	if o.Codec != nil {
		toSerialize["codec"] = o.Codec
	}
	if true {
		toSerialize["height"] = o.Height
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["width"] = o.Width
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ChannelVideoEncodings) UnmarshalJSON(bytes []byte) (err error) {
	varChannelVideoEncodings := _ChannelVideoEncodings{}

	if err = json.Unmarshal(bytes, &varChannelVideoEncodings); err == nil {
		*o = ChannelVideoEncodings(varChannelVideoEncodings)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "bitrate")
		delete(additionalProperties, "codec")
		delete(additionalProperties, "height")
		delete(additionalProperties, "id")
		delete(additionalProperties, "width")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableChannelVideoEncodings struct {
	value *ChannelVideoEncodings
	isSet bool
}

func (v NullableChannelVideoEncodings) Get() *ChannelVideoEncodings {
	return v.value
}

func (v *NullableChannelVideoEncodings) Set(val *ChannelVideoEncodings) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelVideoEncodings) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelVideoEncodings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelVideoEncodings(val *ChannelVideoEncodings) *NullableChannelVideoEncodings {
	return &NullableChannelVideoEncodings{value: val, isSet: true}
}

func (v NullableChannelVideoEncodings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelVideoEncodings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


