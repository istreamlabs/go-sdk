/*
 * WBD Aventus Channels API
 *
 * API version: 0.0.0
 * Contact: live-control-plane-devs@wbd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the ChannelPublishingPublicationsInnerPublishPointsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelPublishingPublicationsInnerPublishPointsInner{}

// ChannelPublishingPublicationsInnerPublishPointsInner struct for ChannelPublishingPublicationsInnerPublishPointsInner
type ChannelPublishingPublicationsInnerPublishPointsInner struct {
	Http *ChannelPublishingPublicationsInnerPublishPointsInnerHttp `json:"http,omitempty"`
	// uniquely identifies this publish_point within a channel configuration. Can be referenced by other publish_points in the 'playlist_only_for' field.
	Id *string `json:"id,omitempty" doc:"uniquely identifies this publish_point within a channel configuration. Can be referenced by other publish_points in the 'playlist_only_for' field."`
	// playlist_only_for identifies the id of the publish_point that has the segments for this publish_point, which is only publishing a playlist for those segments. All publish_points within a publication must either have 'playlist_only_for' all set or all not set.
	PlaylistOnlyFor *string `json:"playlist_only_for,omitempty" doc:"playlist_only_for identifies the id of the publish_point that has the segments for this publish_point, which is only publishing a playlist for those segments. All publish_points within a publication must either have 'playlist_only_for' all set or all not set."`
}

// NewChannelPublishingPublicationsInnerPublishPointsInner instantiates a new ChannelPublishingPublicationsInnerPublishPointsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelPublishingPublicationsInnerPublishPointsInner() *ChannelPublishingPublicationsInnerPublishPointsInner {
	this := ChannelPublishingPublicationsInnerPublishPointsInner{}
	return &this
}

// NewChannelPublishingPublicationsInnerPublishPointsInnerWithDefaults instantiates a new ChannelPublishingPublicationsInnerPublishPointsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelPublishingPublicationsInnerPublishPointsInnerWithDefaults() *ChannelPublishingPublicationsInnerPublishPointsInner {
	this := ChannelPublishingPublicationsInnerPublishPointsInner{}
	return &this
}

// GetHttp returns the Http field value if set, zero value otherwise.
func (o *ChannelPublishingPublicationsInnerPublishPointsInner) GetHttp() ChannelPublishingPublicationsInnerPublishPointsInnerHttp {
	if o == nil || IsNil(o.Http) {
		var ret ChannelPublishingPublicationsInnerPublishPointsInnerHttp
		return ret
	}
	return *o.Http
}

// GetHttpOk returns a tuple with the Http field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPublishingPublicationsInnerPublishPointsInner) GetHttpOk() (*ChannelPublishingPublicationsInnerPublishPointsInnerHttp, bool) {
	if o == nil || IsNil(o.Http) {
		return nil, false
	}
	return o.Http, true
}

// HasHttp returns a boolean if a field has been set.
func (o *ChannelPublishingPublicationsInnerPublishPointsInner) HasHttp() bool {
	if o != nil && !IsNil(o.Http) {
		return true
	}

	return false
}

// SetHttp gets a reference to the given ChannelPublishingPublicationsInnerPublishPointsInnerHttp and assigns it to the Http field.
func (o *ChannelPublishingPublicationsInnerPublishPointsInner) SetHttp(v ChannelPublishingPublicationsInnerPublishPointsInnerHttp) {
	o.Http = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ChannelPublishingPublicationsInnerPublishPointsInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPublishingPublicationsInnerPublishPointsInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ChannelPublishingPublicationsInnerPublishPointsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ChannelPublishingPublicationsInnerPublishPointsInner) SetId(v string) {
	o.Id = &v
}

// GetPlaylistOnlyFor returns the PlaylistOnlyFor field value if set, zero value otherwise.
func (o *ChannelPublishingPublicationsInnerPublishPointsInner) GetPlaylistOnlyFor() string {
	if o == nil || IsNil(o.PlaylistOnlyFor) {
		var ret string
		return ret
	}
	return *o.PlaylistOnlyFor
}

// GetPlaylistOnlyForOk returns a tuple with the PlaylistOnlyFor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPublishingPublicationsInnerPublishPointsInner) GetPlaylistOnlyForOk() (*string, bool) {
	if o == nil || IsNil(o.PlaylistOnlyFor) {
		return nil, false
	}
	return o.PlaylistOnlyFor, true
}

// HasPlaylistOnlyFor returns a boolean if a field has been set.
func (o *ChannelPublishingPublicationsInnerPublishPointsInner) HasPlaylistOnlyFor() bool {
	if o != nil && !IsNil(o.PlaylistOnlyFor) {
		return true
	}

	return false
}

// SetPlaylistOnlyFor gets a reference to the given string and assigns it to the PlaylistOnlyFor field.
func (o *ChannelPublishingPublicationsInnerPublishPointsInner) SetPlaylistOnlyFor(v string) {
	o.PlaylistOnlyFor = &v
}

func (o ChannelPublishingPublicationsInnerPublishPointsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelPublishingPublicationsInnerPublishPointsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Http) {
		toSerialize["http"] = o.Http
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.PlaylistOnlyFor) {
		toSerialize["playlist_only_for"] = o.PlaylistOnlyFor
	}
	return toSerialize, nil
}

type NullableChannelPublishingPublicationsInnerPublishPointsInner struct {
	value *ChannelPublishingPublicationsInnerPublishPointsInner
	isSet bool
}

func (v NullableChannelPublishingPublicationsInnerPublishPointsInner) Get() *ChannelPublishingPublicationsInnerPublishPointsInner {
	return v.value
}

func (v *NullableChannelPublishingPublicationsInnerPublishPointsInner) Set(val *ChannelPublishingPublicationsInnerPublishPointsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelPublishingPublicationsInnerPublishPointsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelPublishingPublicationsInnerPublishPointsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelPublishingPublicationsInnerPublishPointsInner(val *ChannelPublishingPublicationsInnerPublishPointsInner) *NullableChannelPublishingPublicationsInnerPublishPointsInner {
	return &NullableChannelPublishingPublicationsInnerPublishPointsInner{value: val, isSet: true}
}

func (v NullableChannelPublishingPublicationsInnerPublishPointsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelPublishingPublicationsInnerPublishPointsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


