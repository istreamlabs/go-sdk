/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
	"time"
)

// InsertMetadataResult struct for InsertMetadataResult
type InsertMetadataResult struct {
	// An optional URL to a JSON Schema document describing this resource
	Schema *string `json:"$schema,omitempty"`
	// The media stream timestamp for where the transcoder inserted the metadata
	PresentationTime time.Time `json:"presentation_time"`
}

// NewInsertMetadataResult instantiates a new InsertMetadataResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInsertMetadataResult(presentationTime time.Time) *InsertMetadataResult {
	this := InsertMetadataResult{}
	this.PresentationTime = presentationTime
	return &this
}

// NewInsertMetadataResultWithDefaults instantiates a new InsertMetadataResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInsertMetadataResultWithDefaults() *InsertMetadataResult {
	this := InsertMetadataResult{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *InsertMetadataResult) GetSchema() string {
	if o == nil || o.Schema == nil {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsertMetadataResult) GetSchemaOk() (*string, bool) {
	if o == nil || o.Schema == nil {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *InsertMetadataResult) HasSchema() bool {
	if o != nil && o.Schema != nil {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *InsertMetadataResult) SetSchema(v string) {
	o.Schema = &v
}

// GetPresentationTime returns the PresentationTime field value
func (o *InsertMetadataResult) GetPresentationTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.PresentationTime
}

// GetPresentationTimeOk returns a tuple with the PresentationTime field value
// and a boolean to check if the value has been set.
func (o *InsertMetadataResult) GetPresentationTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PresentationTime, true
}

// SetPresentationTime sets field value
func (o *InsertMetadataResult) SetPresentationTime(v time.Time) {
	o.PresentationTime = v
}

func (o InsertMetadataResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Schema != nil {
		toSerialize["$schema"] = o.Schema
	}
	if true {
		toSerialize["presentation_time"] = o.PresentationTime
	}
	return json.Marshal(toSerialize)
}

type NullableInsertMetadataResult struct {
	value *InsertMetadataResult
	isSet bool
}

func (v NullableInsertMetadataResult) Get() *InsertMetadataResult {
	return v.value
}

func (v *NullableInsertMetadataResult) Set(val *InsertMetadataResult) {
	v.value = val
	v.isSet = true
}

func (v NullableInsertMetadataResult) IsSet() bool {
	return v.isSet
}

func (v *NullableInsertMetadataResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInsertMetadataResult(val *InsertMetadataResult) *NullableInsertMetadataResult {
	return &NullableInsertMetadataResult{value: val, isSet: true}
}

func (v NullableInsertMetadataResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInsertMetadataResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


