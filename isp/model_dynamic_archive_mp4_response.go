/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the DynamicArchiveMP4Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DynamicArchiveMP4Response{}

// DynamicArchiveMP4Response struct for DynamicArchiveMP4Response
type DynamicArchiveMP4Response struct {
	// An optional URL to a JSON Schema document describing this resource
	Schema *string `json:"$schema,omitempty" format:"uri" doc:"An optional URL to a JSON Schema document describing this resource"`
	// Identifier that is carried through the archive request
	CorrelationId *string `json:"correlation_id,omitempty" doc:"Identifier that is carried through the archive request"`
	// Task ID for the archive task started by the L2V service
	TaskId string `json:"task_id" doc:"Task ID for the archive task started by the L2V service"`
}

// NewDynamicArchiveMP4Response instantiates a new DynamicArchiveMP4Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDynamicArchiveMP4Response(taskId string) *DynamicArchiveMP4Response {
	this := DynamicArchiveMP4Response{}
	this.TaskId = taskId
	return &this
}

// NewDynamicArchiveMP4ResponseWithDefaults instantiates a new DynamicArchiveMP4Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDynamicArchiveMP4ResponseWithDefaults() *DynamicArchiveMP4Response {
	this := DynamicArchiveMP4Response{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *DynamicArchiveMP4Response) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicArchiveMP4Response) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *DynamicArchiveMP4Response) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *DynamicArchiveMP4Response) SetSchema(v string) {
	o.Schema = &v
}

// GetCorrelationId returns the CorrelationId field value if set, zero value otherwise.
func (o *DynamicArchiveMP4Response) GetCorrelationId() string {
	if o == nil || IsNil(o.CorrelationId) {
		var ret string
		return ret
	}
	return *o.CorrelationId
}

// GetCorrelationIdOk returns a tuple with the CorrelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicArchiveMP4Response) GetCorrelationIdOk() (*string, bool) {
	if o == nil || IsNil(o.CorrelationId) {
		return nil, false
	}
	return o.CorrelationId, true
}

// HasCorrelationId returns a boolean if a field has been set.
func (o *DynamicArchiveMP4Response) HasCorrelationId() bool {
	if o != nil && !IsNil(o.CorrelationId) {
		return true
	}

	return false
}

// SetCorrelationId gets a reference to the given string and assigns it to the CorrelationId field.
func (o *DynamicArchiveMP4Response) SetCorrelationId(v string) {
	o.CorrelationId = &v
}

// GetTaskId returns the TaskId field value
func (o *DynamicArchiveMP4Response) GetTaskId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value
// and a boolean to check if the value has been set.
func (o *DynamicArchiveMP4Response) GetTaskIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TaskId, true
}

// SetTaskId sets field value
func (o *DynamicArchiveMP4Response) SetTaskId(v string) {
	o.TaskId = v
}

func (o DynamicArchiveMP4Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DynamicArchiveMP4Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schema) {
		toSerialize["$schema"] = o.Schema
	}
	if !IsNil(o.CorrelationId) {
		toSerialize["correlation_id"] = o.CorrelationId
	}
	toSerialize["task_id"] = o.TaskId
	return toSerialize, nil
}

type NullableDynamicArchiveMP4Response struct {
	value *DynamicArchiveMP4Response
	isSet bool
}

func (v NullableDynamicArchiveMP4Response) Get() *DynamicArchiveMP4Response {
	return v.value
}

func (v *NullableDynamicArchiveMP4Response) Set(val *DynamicArchiveMP4Response) {
	v.value = val
	v.isSet = true
}

func (v NullableDynamicArchiveMP4Response) IsSet() bool {
	return v.isSet
}

func (v *NullableDynamicArchiveMP4Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDynamicArchiveMP4Response(val *DynamicArchiveMP4Response) *NullableDynamicArchiveMP4Response {
	return &NullableDynamicArchiveMP4Response{value: val, isSet: true}
}

func (v NullableDynamicArchiveMP4Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDynamicArchiveMP4Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


