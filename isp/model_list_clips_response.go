/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// ListClipsResponse struct for ListClipsResponse
type ListClipsResponse struct {
	// An optional URL to a JSON Schema document describing this resource
	Schema *string `json:"$schema,omitempty"`
	// List of clips for the channel
	ChannelClips []ListClipsResponseChannelClipsInner `json:"channel_clips"`
	// Reports failures to fetch the clips of a single VOD. Empty if clips from all VODs are successfully fetched.
	Errors []string `json:"errors"`
}

// NewListClipsResponse instantiates a new ListClipsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListClipsResponse(channelClips []ListClipsResponseChannelClipsInner, errors []string) *ListClipsResponse {
	this := ListClipsResponse{}
	this.ChannelClips = channelClips
	this.Errors = errors
	return &this
}

// NewListClipsResponseWithDefaults instantiates a new ListClipsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListClipsResponseWithDefaults() *ListClipsResponse {
	this := ListClipsResponse{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *ListClipsResponse) GetSchema() string {
	if o == nil || o.Schema == nil {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListClipsResponse) GetSchemaOk() (*string, bool) {
	if o == nil || o.Schema == nil {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *ListClipsResponse) HasSchema() bool {
	if o != nil && o.Schema != nil {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *ListClipsResponse) SetSchema(v string) {
	o.Schema = &v
}

// GetChannelClips returns the ChannelClips field value
func (o *ListClipsResponse) GetChannelClips() []ListClipsResponseChannelClipsInner {
	if o == nil {
		var ret []ListClipsResponseChannelClipsInner
		return ret
	}

	return o.ChannelClips
}

// GetChannelClipsOk returns a tuple with the ChannelClips field value
// and a boolean to check if the value has been set.
func (o *ListClipsResponse) GetChannelClipsOk() ([]ListClipsResponseChannelClipsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChannelClips, true
}

// SetChannelClips sets field value
func (o *ListClipsResponse) SetChannelClips(v []ListClipsResponseChannelClipsInner) {
	o.ChannelClips = v
}

// GetErrors returns the Errors field value
func (o *ListClipsResponse) GetErrors() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value
// and a boolean to check if the value has been set.
func (o *ListClipsResponse) GetErrorsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Errors, true
}

// SetErrors sets field value
func (o *ListClipsResponse) SetErrors(v []string) {
	o.Errors = v
}

func (o ListClipsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Schema != nil {
		toSerialize["$schema"] = o.Schema
	}
	if true {
		toSerialize["channel_clips"] = o.ChannelClips
	}
	if true {
		toSerialize["errors"] = o.Errors
	}
	return json.Marshal(toSerialize)
}

type NullableListClipsResponse struct {
	value *ListClipsResponse
	isSet bool
}

func (v NullableListClipsResponse) Get() *ListClipsResponse {
	return v.value
}

func (v *NullableListClipsResponse) Set(val *ListClipsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListClipsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListClipsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListClipsResponse(val *ListClipsResponse) *NullableListClipsResponse {
	return &NullableListClipsResponse{value: val, isSet: true}
}

func (v NullableListClipsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListClipsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


