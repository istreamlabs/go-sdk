/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// ChannelPackagingContentProtectionSimpleBasicAuth Only one of ['basic_auth'] may be set.
type ChannelPackagingContentProtectionSimpleBasicAuth struct {
	// Plain text password for basic auth.
	Password *string `json:"password,omitempty"`
	// Username for basic auth.
	Username *string `json:"username,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ChannelPackagingContentProtectionSimpleBasicAuth ChannelPackagingContentProtectionSimpleBasicAuth

// NewChannelPackagingContentProtectionSimpleBasicAuth instantiates a new ChannelPackagingContentProtectionSimpleBasicAuth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelPackagingContentProtectionSimpleBasicAuth() *ChannelPackagingContentProtectionSimpleBasicAuth {
	this := ChannelPackagingContentProtectionSimpleBasicAuth{}
	return &this
}

// NewChannelPackagingContentProtectionSimpleBasicAuthWithDefaults instantiates a new ChannelPackagingContentProtectionSimpleBasicAuth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelPackagingContentProtectionSimpleBasicAuthWithDefaults() *ChannelPackagingContentProtectionSimpleBasicAuth {
	this := ChannelPackagingContentProtectionSimpleBasicAuth{}
	return &this
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ChannelPackagingContentProtectionSimpleBasicAuth) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingContentProtectionSimpleBasicAuth) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ChannelPackagingContentProtectionSimpleBasicAuth) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ChannelPackagingContentProtectionSimpleBasicAuth) SetPassword(v string) {
	o.Password = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ChannelPackagingContentProtectionSimpleBasicAuth) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingContentProtectionSimpleBasicAuth) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ChannelPackagingContentProtectionSimpleBasicAuth) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ChannelPackagingContentProtectionSimpleBasicAuth) SetUsername(v string) {
	o.Username = &v
}

func (o ChannelPackagingContentProtectionSimpleBasicAuth) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ChannelPackagingContentProtectionSimpleBasicAuth) UnmarshalJSON(bytes []byte) (err error) {
	varChannelPackagingContentProtectionSimpleBasicAuth := _ChannelPackagingContentProtectionSimpleBasicAuth{}

	if err = json.Unmarshal(bytes, &varChannelPackagingContentProtectionSimpleBasicAuth); err == nil {
		*o = ChannelPackagingContentProtectionSimpleBasicAuth(varChannelPackagingContentProtectionSimpleBasicAuth)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "password")
		delete(additionalProperties, "username")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableChannelPackagingContentProtectionSimpleBasicAuth struct {
	value *ChannelPackagingContentProtectionSimpleBasicAuth
	isSet bool
}

func (v NullableChannelPackagingContentProtectionSimpleBasicAuth) Get() *ChannelPackagingContentProtectionSimpleBasicAuth {
	return v.value
}

func (v *NullableChannelPackagingContentProtectionSimpleBasicAuth) Set(val *ChannelPackagingContentProtectionSimpleBasicAuth) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelPackagingContentProtectionSimpleBasicAuth) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelPackagingContentProtectionSimpleBasicAuth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelPackagingContentProtectionSimpleBasicAuth(val *ChannelPackagingContentProtectionSimpleBasicAuth) *NullableChannelPackagingContentProtectionSimpleBasicAuth {
	return &NullableChannelPackagingContentProtectionSimpleBasicAuth{value: val, isSet: true}
}

func (v NullableChannelPackagingContentProtectionSimpleBasicAuth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelPackagingContentProtectionSimpleBasicAuth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


