/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// ChannelPackagingContentProtectionCommon Only one of ['bulk_file', 'sample_aes', 'common'] may be set.
type ChannelPackagingContentProtectionCommon struct {
	// Defines the scheme that can be used with Common Encryption
	SchemeType *string `json:"scheme_type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ChannelPackagingContentProtectionCommon ChannelPackagingContentProtectionCommon

// NewChannelPackagingContentProtectionCommon instantiates a new ChannelPackagingContentProtectionCommon object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelPackagingContentProtectionCommon() *ChannelPackagingContentProtectionCommon {
	this := ChannelPackagingContentProtectionCommon{}
	return &this
}

// NewChannelPackagingContentProtectionCommonWithDefaults instantiates a new ChannelPackagingContentProtectionCommon object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelPackagingContentProtectionCommonWithDefaults() *ChannelPackagingContentProtectionCommon {
	this := ChannelPackagingContentProtectionCommon{}
	return &this
}

// GetSchemeType returns the SchemeType field value if set, zero value otherwise.
func (o *ChannelPackagingContentProtectionCommon) GetSchemeType() string {
	if o == nil || o.SchemeType == nil {
		var ret string
		return ret
	}
	return *o.SchemeType
}

// GetSchemeTypeOk returns a tuple with the SchemeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPackagingContentProtectionCommon) GetSchemeTypeOk() (*string, bool) {
	if o == nil || o.SchemeType == nil {
		return nil, false
	}
	return o.SchemeType, true
}

// HasSchemeType returns a boolean if a field has been set.
func (o *ChannelPackagingContentProtectionCommon) HasSchemeType() bool {
	if o != nil && o.SchemeType != nil {
		return true
	}

	return false
}

// SetSchemeType gets a reference to the given string and assigns it to the SchemeType field.
func (o *ChannelPackagingContentProtectionCommon) SetSchemeType(v string) {
	o.SchemeType = &v
}

func (o ChannelPackagingContentProtectionCommon) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SchemeType != nil {
		toSerialize["scheme_type"] = o.SchemeType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ChannelPackagingContentProtectionCommon) UnmarshalJSON(bytes []byte) (err error) {
	varChannelPackagingContentProtectionCommon := _ChannelPackagingContentProtectionCommon{}

	if err = json.Unmarshal(bytes, &varChannelPackagingContentProtectionCommon); err == nil {
		*o = ChannelPackagingContentProtectionCommon(varChannelPackagingContentProtectionCommon)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "scheme_type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableChannelPackagingContentProtectionCommon struct {
	value *ChannelPackagingContentProtectionCommon
	isSet bool
}

func (v NullableChannelPackagingContentProtectionCommon) Get() *ChannelPackagingContentProtectionCommon {
	return v.value
}

func (v *NullableChannelPackagingContentProtectionCommon) Set(val *ChannelPackagingContentProtectionCommon) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelPackagingContentProtectionCommon) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelPackagingContentProtectionCommon) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelPackagingContentProtectionCommon(val *ChannelPackagingContentProtectionCommon) *NullableChannelPackagingContentProtectionCommon {
	return &NullableChannelPackagingContentProtectionCommon{value: val, isSet: true}
}

func (v NullableChannelPackagingContentProtectionCommon) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelPackagingContentProtectionCommon) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


