/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// ChannelPlaybackCmaf struct for ChannelPlaybackCmaf
type ChannelPlaybackCmaf struct {
	ContentProtection *ChannelPlaybackContentProtection `json:"content_protection,omitempty"`
	// Partial Presentation Playback URLs
	PartialPresentations *[]string `json:"partial_presentations,omitempty"`
	// Playback URL
	Url string `json:"url"`
	AdditionalProperties map[string]interface{}
}

type _ChannelPlaybackCmaf ChannelPlaybackCmaf

// NewChannelPlaybackCmaf instantiates a new ChannelPlaybackCmaf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelPlaybackCmaf(url string) *ChannelPlaybackCmaf {
	this := ChannelPlaybackCmaf{}
	this.Url = url
	return &this
}

// NewChannelPlaybackCmafWithDefaults instantiates a new ChannelPlaybackCmaf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelPlaybackCmafWithDefaults() *ChannelPlaybackCmaf {
	this := ChannelPlaybackCmaf{}
	return &this
}

// GetContentProtection returns the ContentProtection field value if set, zero value otherwise.
func (o *ChannelPlaybackCmaf) GetContentProtection() ChannelPlaybackContentProtection {
	if o == nil || o.ContentProtection == nil {
		var ret ChannelPlaybackContentProtection
		return ret
	}
	return *o.ContentProtection
}

// GetContentProtectionOk returns a tuple with the ContentProtection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPlaybackCmaf) GetContentProtectionOk() (*ChannelPlaybackContentProtection, bool) {
	if o == nil || o.ContentProtection == nil {
		return nil, false
	}
	return o.ContentProtection, true
}

// HasContentProtection returns a boolean if a field has been set.
func (o *ChannelPlaybackCmaf) HasContentProtection() bool {
	if o != nil && o.ContentProtection != nil {
		return true
	}

	return false
}

// SetContentProtection gets a reference to the given ChannelPlaybackContentProtection and assigns it to the ContentProtection field.
func (o *ChannelPlaybackCmaf) SetContentProtection(v ChannelPlaybackContentProtection) {
	o.ContentProtection = &v
}

// GetPartialPresentations returns the PartialPresentations field value if set, zero value otherwise.
func (o *ChannelPlaybackCmaf) GetPartialPresentations() []string {
	if o == nil || o.PartialPresentations == nil {
		var ret []string
		return ret
	}
	return *o.PartialPresentations
}

// GetPartialPresentationsOk returns a tuple with the PartialPresentations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelPlaybackCmaf) GetPartialPresentationsOk() (*[]string, bool) {
	if o == nil || o.PartialPresentations == nil {
		return nil, false
	}
	return o.PartialPresentations, true
}

// HasPartialPresentations returns a boolean if a field has been set.
func (o *ChannelPlaybackCmaf) HasPartialPresentations() bool {
	if o != nil && o.PartialPresentations != nil {
		return true
	}

	return false
}

// SetPartialPresentations gets a reference to the given []string and assigns it to the PartialPresentations field.
func (o *ChannelPlaybackCmaf) SetPartialPresentations(v []string) {
	o.PartialPresentations = &v
}

// GetUrl returns the Url field value
func (o *ChannelPlaybackCmaf) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ChannelPlaybackCmaf) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ChannelPlaybackCmaf) SetUrl(v string) {
	o.Url = v
}

func (o ChannelPlaybackCmaf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContentProtection != nil {
		toSerialize["content_protection"] = o.ContentProtection
	}
	if o.PartialPresentations != nil {
		toSerialize["partial_presentations"] = o.PartialPresentations
	}
	if true {
		toSerialize["url"] = o.Url
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ChannelPlaybackCmaf) UnmarshalJSON(bytes []byte) (err error) {
	varChannelPlaybackCmaf := _ChannelPlaybackCmaf{}

	if err = json.Unmarshal(bytes, &varChannelPlaybackCmaf); err == nil {
		*o = ChannelPlaybackCmaf(varChannelPlaybackCmaf)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "content_protection")
		delete(additionalProperties, "partial_presentations")
		delete(additionalProperties, "url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableChannelPlaybackCmaf struct {
	value *ChannelPlaybackCmaf
	isSet bool
}

func (v NullableChannelPlaybackCmaf) Get() *ChannelPlaybackCmaf {
	return v.value
}

func (v *NullableChannelPlaybackCmaf) Set(val *ChannelPlaybackCmaf) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelPlaybackCmaf) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelPlaybackCmaf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelPlaybackCmaf(val *ChannelPlaybackCmaf) *NullableChannelPlaybackCmaf {
	return &NullableChannelPlaybackCmaf{value: val, isSet: true}
}

func (v NullableChannelPlaybackCmaf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelPlaybackCmaf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


