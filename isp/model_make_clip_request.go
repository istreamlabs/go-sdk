/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the MakeClipRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MakeClipRequest{}

// MakeClipRequest struct for MakeClipRequest
type MakeClipRequest struct {
	// An optional URL to a JSON Schema document describing this resource
	Schema *string `json:"$schema,omitempty" format:"uri" doc:"An optional URL to a JSON Schema document describing this resource"`
	// Identifer that is carried through archive and collapse notifications for the clip creation
	CorrelationId *string `json:"correlation_id,omitempty" doc:"Identifer that is carried through archive and collapse notifications for the clip creation"`
	// Description of the clip being created
	Description *string `json:"description,omitempty" maxLength:"80" doc:"Description of the clip being created"`
	// End timestamp in RFC3339Nano format
	End string `json:"end" doc:"End timestamp in RFC3339Nano format"`
	// Overwrite existing clip. Default: false
	Overwrite *bool `json:"overwrite,omitempty" doc:"Overwrite existing clip. Default: false"`
	// Start timestamp in RFC3339Nano format
	Start string `json:"start" doc:"Start timestamp in RFC3339Nano format"`
}

// NewMakeClipRequest instantiates a new MakeClipRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMakeClipRequest(end string, start string) *MakeClipRequest {
	this := MakeClipRequest{}
	this.End = end
	this.Start = start
	return &this
}

// NewMakeClipRequestWithDefaults instantiates a new MakeClipRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMakeClipRequestWithDefaults() *MakeClipRequest {
	this := MakeClipRequest{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *MakeClipRequest) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MakeClipRequest) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *MakeClipRequest) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *MakeClipRequest) SetSchema(v string) {
	o.Schema = &v
}

// GetCorrelationId returns the CorrelationId field value if set, zero value otherwise.
func (o *MakeClipRequest) GetCorrelationId() string {
	if o == nil || IsNil(o.CorrelationId) {
		var ret string
		return ret
	}
	return *o.CorrelationId
}

// GetCorrelationIdOk returns a tuple with the CorrelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MakeClipRequest) GetCorrelationIdOk() (*string, bool) {
	if o == nil || IsNil(o.CorrelationId) {
		return nil, false
	}
	return o.CorrelationId, true
}

// HasCorrelationId returns a boolean if a field has been set.
func (o *MakeClipRequest) HasCorrelationId() bool {
	if o != nil && !IsNil(o.CorrelationId) {
		return true
	}

	return false
}

// SetCorrelationId gets a reference to the given string and assigns it to the CorrelationId field.
func (o *MakeClipRequest) SetCorrelationId(v string) {
	o.CorrelationId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MakeClipRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MakeClipRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MakeClipRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MakeClipRequest) SetDescription(v string) {
	o.Description = &v
}

// GetEnd returns the End field value
func (o *MakeClipRequest) GetEnd() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.End
}

// GetEndOk returns a tuple with the End field value
// and a boolean to check if the value has been set.
func (o *MakeClipRequest) GetEndOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.End, true
}

// SetEnd sets field value
func (o *MakeClipRequest) SetEnd(v string) {
	o.End = v
}

// GetOverwrite returns the Overwrite field value if set, zero value otherwise.
func (o *MakeClipRequest) GetOverwrite() bool {
	if o == nil || IsNil(o.Overwrite) {
		var ret bool
		return ret
	}
	return *o.Overwrite
}

// GetOverwriteOk returns a tuple with the Overwrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MakeClipRequest) GetOverwriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Overwrite) {
		return nil, false
	}
	return o.Overwrite, true
}

// HasOverwrite returns a boolean if a field has been set.
func (o *MakeClipRequest) HasOverwrite() bool {
	if o != nil && !IsNil(o.Overwrite) {
		return true
	}

	return false
}

// SetOverwrite gets a reference to the given bool and assigns it to the Overwrite field.
func (o *MakeClipRequest) SetOverwrite(v bool) {
	o.Overwrite = &v
}

// GetStart returns the Start field value
func (o *MakeClipRequest) GetStart() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *MakeClipRequest) GetStartOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *MakeClipRequest) SetStart(v string) {
	o.Start = v
}

func (o MakeClipRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MakeClipRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schema) {
		toSerialize["$schema"] = o.Schema
	}
	if !IsNil(o.CorrelationId) {
		toSerialize["correlation_id"] = o.CorrelationId
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["end"] = o.End
	if !IsNil(o.Overwrite) {
		toSerialize["overwrite"] = o.Overwrite
	}
	toSerialize["start"] = o.Start
	return toSerialize, nil
}

type NullableMakeClipRequest struct {
	value *MakeClipRequest
	isSet bool
}

func (v NullableMakeClipRequest) Get() *MakeClipRequest {
	return v.value
}

func (v *NullableMakeClipRequest) Set(val *MakeClipRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMakeClipRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMakeClipRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMakeClipRequest(val *MakeClipRequest) *NullableMakeClipRequest {
	return &NullableMakeClipRequest{value: val, isSet: true}
}

func (v NullableMakeClipRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMakeClipRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


