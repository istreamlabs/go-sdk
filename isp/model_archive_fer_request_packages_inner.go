/*
 * WBD Aventus Channels API
 *
 * API version: 0.0.0
 * Contact: live-control-plane-devs@wbd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the ArchiveFERRequestPackagesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArchiveFERRequestPackagesInner{}

// ArchiveFERRequestPackagesInner struct for ArchiveFERRequestPackagesInner
type ArchiveFERRequestPackagesInner struct {
	Archive ArchiveFERRequestPackagesInnerArchive `json:"archive"`
	Dash *ArchiveFERRequestPackagesInnerDash `json:"dash,omitempty"`
	Hls *ArchiveFERRequestPackagesInnerDash `json:"hls,omitempty"`
	PackageId string `json:"package_id"`
}

// NewArchiveFERRequestPackagesInner instantiates a new ArchiveFERRequestPackagesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArchiveFERRequestPackagesInner(archive ArchiveFERRequestPackagesInnerArchive, packageId string) *ArchiveFERRequestPackagesInner {
	this := ArchiveFERRequestPackagesInner{}
	this.Archive = archive
	this.PackageId = packageId
	return &this
}

// NewArchiveFERRequestPackagesInnerWithDefaults instantiates a new ArchiveFERRequestPackagesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArchiveFERRequestPackagesInnerWithDefaults() *ArchiveFERRequestPackagesInner {
	this := ArchiveFERRequestPackagesInner{}
	return &this
}

// GetArchive returns the Archive field value
func (o *ArchiveFERRequestPackagesInner) GetArchive() ArchiveFERRequestPackagesInnerArchive {
	if o == nil {
		var ret ArchiveFERRequestPackagesInnerArchive
		return ret
	}

	return o.Archive
}

// GetArchiveOk returns a tuple with the Archive field value
// and a boolean to check if the value has been set.
func (o *ArchiveFERRequestPackagesInner) GetArchiveOk() (*ArchiveFERRequestPackagesInnerArchive, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Archive, true
}

// SetArchive sets field value
func (o *ArchiveFERRequestPackagesInner) SetArchive(v ArchiveFERRequestPackagesInnerArchive) {
	o.Archive = v
}

// GetDash returns the Dash field value if set, zero value otherwise.
func (o *ArchiveFERRequestPackagesInner) GetDash() ArchiveFERRequestPackagesInnerDash {
	if o == nil || IsNil(o.Dash) {
		var ret ArchiveFERRequestPackagesInnerDash
		return ret
	}
	return *o.Dash
}

// GetDashOk returns a tuple with the Dash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArchiveFERRequestPackagesInner) GetDashOk() (*ArchiveFERRequestPackagesInnerDash, bool) {
	if o == nil || IsNil(o.Dash) {
		return nil, false
	}
	return o.Dash, true
}

// HasDash returns a boolean if a field has been set.
func (o *ArchiveFERRequestPackagesInner) HasDash() bool {
	if o != nil && !IsNil(o.Dash) {
		return true
	}

	return false
}

// SetDash gets a reference to the given ArchiveFERRequestPackagesInnerDash and assigns it to the Dash field.
func (o *ArchiveFERRequestPackagesInner) SetDash(v ArchiveFERRequestPackagesInnerDash) {
	o.Dash = &v
}

// GetHls returns the Hls field value if set, zero value otherwise.
func (o *ArchiveFERRequestPackagesInner) GetHls() ArchiveFERRequestPackagesInnerDash {
	if o == nil || IsNil(o.Hls) {
		var ret ArchiveFERRequestPackagesInnerDash
		return ret
	}
	return *o.Hls
}

// GetHlsOk returns a tuple with the Hls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArchiveFERRequestPackagesInner) GetHlsOk() (*ArchiveFERRequestPackagesInnerDash, bool) {
	if o == nil || IsNil(o.Hls) {
		return nil, false
	}
	return o.Hls, true
}

// HasHls returns a boolean if a field has been set.
func (o *ArchiveFERRequestPackagesInner) HasHls() bool {
	if o != nil && !IsNil(o.Hls) {
		return true
	}

	return false
}

// SetHls gets a reference to the given ArchiveFERRequestPackagesInnerDash and assigns it to the Hls field.
func (o *ArchiveFERRequestPackagesInner) SetHls(v ArchiveFERRequestPackagesInnerDash) {
	o.Hls = &v
}

// GetPackageId returns the PackageId field value
func (o *ArchiveFERRequestPackagesInner) GetPackageId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PackageId
}

// GetPackageIdOk returns a tuple with the PackageId field value
// and a boolean to check if the value has been set.
func (o *ArchiveFERRequestPackagesInner) GetPackageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PackageId, true
}

// SetPackageId sets field value
func (o *ArchiveFERRequestPackagesInner) SetPackageId(v string) {
	o.PackageId = v
}

func (o ArchiveFERRequestPackagesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArchiveFERRequestPackagesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["archive"] = o.Archive
	if !IsNil(o.Dash) {
		toSerialize["dash"] = o.Dash
	}
	if !IsNil(o.Hls) {
		toSerialize["hls"] = o.Hls
	}
	toSerialize["package_id"] = o.PackageId
	return toSerialize, nil
}

type NullableArchiveFERRequestPackagesInner struct {
	value *ArchiveFERRequestPackagesInner
	isSet bool
}

func (v NullableArchiveFERRequestPackagesInner) Get() *ArchiveFERRequestPackagesInner {
	return v.value
}

func (v *NullableArchiveFERRequestPackagesInner) Set(val *ArchiveFERRequestPackagesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableArchiveFERRequestPackagesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableArchiveFERRequestPackagesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArchiveFERRequestPackagesInner(val *ArchiveFERRequestPackagesInner) *NullableArchiveFERRequestPackagesInner {
	return &NullableArchiveFERRequestPackagesInner{value: val, isSet: true}
}

func (v NullableArchiveFERRequestPackagesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArchiveFERRequestPackagesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


