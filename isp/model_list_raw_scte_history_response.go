/*
 * WBD Aventus Channels API
 *
 * API version: 0.0.0
 * Contact: live-control-plane-devs@wbd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the ListRawSCTEHistoryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListRawSCTEHistoryResponse{}

// ListRawSCTEHistoryResponse struct for ListRawSCTEHistoryResponse
type ListRawSCTEHistoryResponse struct {
	// An optional URL to a JSON Schema document describing this resource
	Schema *string `json:"$schema,omitempty" format:"uri" doc:"An optional URL to a JSON Schema document describing this resource"`
	RawScte35 []ListRawSCTEHistoryByChannelResponseRawScte35Inner `json:"raw_scte35,omitempty"`
}

// NewListRawSCTEHistoryResponse instantiates a new ListRawSCTEHistoryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListRawSCTEHistoryResponse() *ListRawSCTEHistoryResponse {
	this := ListRawSCTEHistoryResponse{}
	return &this
}

// NewListRawSCTEHistoryResponseWithDefaults instantiates a new ListRawSCTEHistoryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListRawSCTEHistoryResponseWithDefaults() *ListRawSCTEHistoryResponse {
	this := ListRawSCTEHistoryResponse{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *ListRawSCTEHistoryResponse) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRawSCTEHistoryResponse) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *ListRawSCTEHistoryResponse) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *ListRawSCTEHistoryResponse) SetSchema(v string) {
	o.Schema = &v
}

// GetRawScte35 returns the RawScte35 field value if set, zero value otherwise.
func (o *ListRawSCTEHistoryResponse) GetRawScte35() []ListRawSCTEHistoryByChannelResponseRawScte35Inner {
	if o == nil || IsNil(o.RawScte35) {
		var ret []ListRawSCTEHistoryByChannelResponseRawScte35Inner
		return ret
	}
	return o.RawScte35
}

// GetRawScte35Ok returns a tuple with the RawScte35 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRawSCTEHistoryResponse) GetRawScte35Ok() ([]ListRawSCTEHistoryByChannelResponseRawScte35Inner, bool) {
	if o == nil || IsNil(o.RawScte35) {
		return nil, false
	}
	return o.RawScte35, true
}

// HasRawScte35 returns a boolean if a field has been set.
func (o *ListRawSCTEHistoryResponse) HasRawScte35() bool {
	if o != nil && !IsNil(o.RawScte35) {
		return true
	}

	return false
}

// SetRawScte35 gets a reference to the given []ListRawSCTEHistoryByChannelResponseRawScte35Inner and assigns it to the RawScte35 field.
func (o *ListRawSCTEHistoryResponse) SetRawScte35(v []ListRawSCTEHistoryByChannelResponseRawScte35Inner) {
	o.RawScte35 = v
}

func (o ListRawSCTEHistoryResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListRawSCTEHistoryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schema) {
		toSerialize["$schema"] = o.Schema
	}
	if !IsNil(o.RawScte35) {
		toSerialize["raw_scte35"] = o.RawScte35
	}
	return toSerialize, nil
}

type NullableListRawSCTEHistoryResponse struct {
	value *ListRawSCTEHistoryResponse
	isSet bool
}

func (v NullableListRawSCTEHistoryResponse) Get() *ListRawSCTEHistoryResponse {
	return v.value
}

func (v *NullableListRawSCTEHistoryResponse) Set(val *ListRawSCTEHistoryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListRawSCTEHistoryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListRawSCTEHistoryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListRawSCTEHistoryResponse(val *ListRawSCTEHistoryResponse) *NullableListRawSCTEHistoryResponse {
	return &NullableListRawSCTEHistoryResponse{value: val, isSet: true}
}

func (v NullableListRawSCTEHistoryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListRawSCTEHistoryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


