/*
 * WBD Aventus Channels API
 *
 * API version: 0.0.0
 * Contact: live-control-plane-devs@wbd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the StatusDynamicStateStatusDynamicState type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatusDynamicStateStatusDynamicState{}

// StatusDynamicStateStatusDynamicState The transcoder's dynamic state settings.
type StatusDynamicStateStatusDynamicState struct {
	// The complete list of muted audios.
	AudioMutes []SetDynamicStateRequestDynamicStateAudioMutesInner `json:"audio_mutes,omitempty" doc:"The complete list of muted audios."`
	// The complete list of graphic overlays.
	GraphicOverlays []SetDynamicStateRequestDynamicStateGraphicOverlaysInner `json:"graphic_overlays,omitempty" doc:"The complete list of graphic overlays."`
	// The complete list of text overlays.
	TextOverlays []SetDynamicStateRequestDynamicStateTextOverlaysInner `json:"text_overlays,omitempty" doc:"The complete list of text overlays."`
}

// NewStatusDynamicStateStatusDynamicState instantiates a new StatusDynamicStateStatusDynamicState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusDynamicStateStatusDynamicState() *StatusDynamicStateStatusDynamicState {
	this := StatusDynamicStateStatusDynamicState{}
	return &this
}

// NewStatusDynamicStateStatusDynamicStateWithDefaults instantiates a new StatusDynamicStateStatusDynamicState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusDynamicStateStatusDynamicStateWithDefaults() *StatusDynamicStateStatusDynamicState {
	this := StatusDynamicStateStatusDynamicState{}
	return &this
}

// GetAudioMutes returns the AudioMutes field value if set, zero value otherwise.
func (o *StatusDynamicStateStatusDynamicState) GetAudioMutes() []SetDynamicStateRequestDynamicStateAudioMutesInner {
	if o == nil || IsNil(o.AudioMutes) {
		var ret []SetDynamicStateRequestDynamicStateAudioMutesInner
		return ret
	}
	return o.AudioMutes
}

// GetAudioMutesOk returns a tuple with the AudioMutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusDynamicStateStatusDynamicState) GetAudioMutesOk() ([]SetDynamicStateRequestDynamicStateAudioMutesInner, bool) {
	if o == nil || IsNil(o.AudioMutes) {
		return nil, false
	}
	return o.AudioMutes, true
}

// HasAudioMutes returns a boolean if a field has been set.
func (o *StatusDynamicStateStatusDynamicState) HasAudioMutes() bool {
	if o != nil && !IsNil(o.AudioMutes) {
		return true
	}

	return false
}

// SetAudioMutes gets a reference to the given []SetDynamicStateRequestDynamicStateAudioMutesInner and assigns it to the AudioMutes field.
func (o *StatusDynamicStateStatusDynamicState) SetAudioMutes(v []SetDynamicStateRequestDynamicStateAudioMutesInner) {
	o.AudioMutes = v
}

// GetGraphicOverlays returns the GraphicOverlays field value if set, zero value otherwise.
func (o *StatusDynamicStateStatusDynamicState) GetGraphicOverlays() []SetDynamicStateRequestDynamicStateGraphicOverlaysInner {
	if o == nil || IsNil(o.GraphicOverlays) {
		var ret []SetDynamicStateRequestDynamicStateGraphicOverlaysInner
		return ret
	}
	return o.GraphicOverlays
}

// GetGraphicOverlaysOk returns a tuple with the GraphicOverlays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusDynamicStateStatusDynamicState) GetGraphicOverlaysOk() ([]SetDynamicStateRequestDynamicStateGraphicOverlaysInner, bool) {
	if o == nil || IsNil(o.GraphicOverlays) {
		return nil, false
	}
	return o.GraphicOverlays, true
}

// HasGraphicOverlays returns a boolean if a field has been set.
func (o *StatusDynamicStateStatusDynamicState) HasGraphicOverlays() bool {
	if o != nil && !IsNil(o.GraphicOverlays) {
		return true
	}

	return false
}

// SetGraphicOverlays gets a reference to the given []SetDynamicStateRequestDynamicStateGraphicOverlaysInner and assigns it to the GraphicOverlays field.
func (o *StatusDynamicStateStatusDynamicState) SetGraphicOverlays(v []SetDynamicStateRequestDynamicStateGraphicOverlaysInner) {
	o.GraphicOverlays = v
}

// GetTextOverlays returns the TextOverlays field value if set, zero value otherwise.
func (o *StatusDynamicStateStatusDynamicState) GetTextOverlays() []SetDynamicStateRequestDynamicStateTextOverlaysInner {
	if o == nil || IsNil(o.TextOverlays) {
		var ret []SetDynamicStateRequestDynamicStateTextOverlaysInner
		return ret
	}
	return o.TextOverlays
}

// GetTextOverlaysOk returns a tuple with the TextOverlays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusDynamicStateStatusDynamicState) GetTextOverlaysOk() ([]SetDynamicStateRequestDynamicStateTextOverlaysInner, bool) {
	if o == nil || IsNil(o.TextOverlays) {
		return nil, false
	}
	return o.TextOverlays, true
}

// HasTextOverlays returns a boolean if a field has been set.
func (o *StatusDynamicStateStatusDynamicState) HasTextOverlays() bool {
	if o != nil && !IsNil(o.TextOverlays) {
		return true
	}

	return false
}

// SetTextOverlays gets a reference to the given []SetDynamicStateRequestDynamicStateTextOverlaysInner and assigns it to the TextOverlays field.
func (o *StatusDynamicStateStatusDynamicState) SetTextOverlays(v []SetDynamicStateRequestDynamicStateTextOverlaysInner) {
	o.TextOverlays = v
}

func (o StatusDynamicStateStatusDynamicState) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatusDynamicStateStatusDynamicState) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AudioMutes) {
		toSerialize["audio_mutes"] = o.AudioMutes
	}
	if !IsNil(o.GraphicOverlays) {
		toSerialize["graphic_overlays"] = o.GraphicOverlays
	}
	if !IsNil(o.TextOverlays) {
		toSerialize["text_overlays"] = o.TextOverlays
	}
	return toSerialize, nil
}

type NullableStatusDynamicStateStatusDynamicState struct {
	value *StatusDynamicStateStatusDynamicState
	isSet bool
}

func (v NullableStatusDynamicStateStatusDynamicState) Get() *StatusDynamicStateStatusDynamicState {
	return v.value
}

func (v *NullableStatusDynamicStateStatusDynamicState) Set(val *StatusDynamicStateStatusDynamicState) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusDynamicStateStatusDynamicState) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusDynamicStateStatusDynamicState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusDynamicStateStatusDynamicState(val *StatusDynamicStateStatusDynamicState) *NullableStatusDynamicStateStatusDynamicState {
	return &NullableStatusDynamicStateStatusDynamicState{value: val, isSet: true}
}

func (v NullableStatusDynamicStateStatusDynamicState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusDynamicStateStatusDynamicState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


