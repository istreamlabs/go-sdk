/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// PutChannelRequestIngestSource Source provides a reference to the input media stream for this channel.
type PutChannelRequestIngestSource struct {
	AudioSources *[]ChannelIngestSourceAudioSources `json:"audio_sources,omitempty"`
	// Closed captions source embedding. If unspecified, defaults to ATSC_A53.
	CaptionsSource *string `json:"captions_source,omitempty"`
	// Unique identifier for this source.
	Id string `json:"id"`
	// Self link for the source.
	Self *string `json:"self,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PutChannelRequestIngestSource PutChannelRequestIngestSource

// NewPutChannelRequestIngestSource instantiates a new PutChannelRequestIngestSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutChannelRequestIngestSource(id string) *PutChannelRequestIngestSource {
	this := PutChannelRequestIngestSource{}
	this.Id = id
	return &this
}

// NewPutChannelRequestIngestSourceWithDefaults instantiates a new PutChannelRequestIngestSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutChannelRequestIngestSourceWithDefaults() *PutChannelRequestIngestSource {
	this := PutChannelRequestIngestSource{}
	return &this
}

// GetAudioSources returns the AudioSources field value if set, zero value otherwise.
func (o *PutChannelRequestIngestSource) GetAudioSources() []ChannelIngestSourceAudioSources {
	if o == nil || o.AudioSources == nil {
		var ret []ChannelIngestSourceAudioSources
		return ret
	}
	return *o.AudioSources
}

// GetAudioSourcesOk returns a tuple with the AudioSources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutChannelRequestIngestSource) GetAudioSourcesOk() (*[]ChannelIngestSourceAudioSources, bool) {
	if o == nil || o.AudioSources == nil {
		return nil, false
	}
	return o.AudioSources, true
}

// HasAudioSources returns a boolean if a field has been set.
func (o *PutChannelRequestIngestSource) HasAudioSources() bool {
	if o != nil && o.AudioSources != nil {
		return true
	}

	return false
}

// SetAudioSources gets a reference to the given []ChannelIngestSourceAudioSources and assigns it to the AudioSources field.
func (o *PutChannelRequestIngestSource) SetAudioSources(v []ChannelIngestSourceAudioSources) {
	o.AudioSources = &v
}

// GetCaptionsSource returns the CaptionsSource field value if set, zero value otherwise.
func (o *PutChannelRequestIngestSource) GetCaptionsSource() string {
	if o == nil || o.CaptionsSource == nil {
		var ret string
		return ret
	}
	return *o.CaptionsSource
}

// GetCaptionsSourceOk returns a tuple with the CaptionsSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutChannelRequestIngestSource) GetCaptionsSourceOk() (*string, bool) {
	if o == nil || o.CaptionsSource == nil {
		return nil, false
	}
	return o.CaptionsSource, true
}

// HasCaptionsSource returns a boolean if a field has been set.
func (o *PutChannelRequestIngestSource) HasCaptionsSource() bool {
	if o != nil && o.CaptionsSource != nil {
		return true
	}

	return false
}

// SetCaptionsSource gets a reference to the given string and assigns it to the CaptionsSource field.
func (o *PutChannelRequestIngestSource) SetCaptionsSource(v string) {
	o.CaptionsSource = &v
}

// GetId returns the Id field value
func (o *PutChannelRequestIngestSource) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PutChannelRequestIngestSource) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PutChannelRequestIngestSource) SetId(v string) {
	o.Id = v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *PutChannelRequestIngestSource) GetSelf() string {
	if o == nil || o.Self == nil {
		var ret string
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutChannelRequestIngestSource) GetSelfOk() (*string, bool) {
	if o == nil || o.Self == nil {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *PutChannelRequestIngestSource) HasSelf() bool {
	if o != nil && o.Self != nil {
		return true
	}

	return false
}

// SetSelf gets a reference to the given string and assigns it to the Self field.
func (o *PutChannelRequestIngestSource) SetSelf(v string) {
	o.Self = &v
}

func (o PutChannelRequestIngestSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AudioSources != nil {
		toSerialize["audio_sources"] = o.AudioSources
	}
	if o.CaptionsSource != nil {
		toSerialize["captions_source"] = o.CaptionsSource
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Self != nil {
		toSerialize["self"] = o.Self
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *PutChannelRequestIngestSource) UnmarshalJSON(bytes []byte) (err error) {
	varPutChannelRequestIngestSource := _PutChannelRequestIngestSource{}

	if err = json.Unmarshal(bytes, &varPutChannelRequestIngestSource); err == nil {
		*o = PutChannelRequestIngestSource(varPutChannelRequestIngestSource)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "audio_sources")
		delete(additionalProperties, "captions_source")
		delete(additionalProperties, "id")
		delete(additionalProperties, "self")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePutChannelRequestIngestSource struct {
	value *PutChannelRequestIngestSource
	isSet bool
}

func (v NullablePutChannelRequestIngestSource) Get() *PutChannelRequestIngestSource {
	return v.value
}

func (v *NullablePutChannelRequestIngestSource) Set(val *PutChannelRequestIngestSource) {
	v.value = val
	v.isSet = true
}

func (v NullablePutChannelRequestIngestSource) IsSet() bool {
	return v.isSet
}

func (v *NullablePutChannelRequestIngestSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutChannelRequestIngestSource(val *PutChannelRequestIngestSource) *NullablePutChannelRequestIngestSource {
	return &NullablePutChannelRequestIngestSource{value: val, isSet: true}
}

func (v NullablePutChannelRequestIngestSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutChannelRequestIngestSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


