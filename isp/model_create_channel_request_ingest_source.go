/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// CreateChannelRequestIngestSource Source provides a reference to the input media stream for this channel.
type CreateChannelRequestIngestSource struct {
	// Unique identifier for this source.
	Id string `json:"id"`
	AdditionalProperties map[string]interface{}
}

type _CreateChannelRequestIngestSource CreateChannelRequestIngestSource

// NewCreateChannelRequestIngestSource instantiates a new CreateChannelRequestIngestSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateChannelRequestIngestSource(id string, ) *CreateChannelRequestIngestSource {
	this := CreateChannelRequestIngestSource{}
	this.Id = id
	return &this
}

// NewCreateChannelRequestIngestSourceWithDefaults instantiates a new CreateChannelRequestIngestSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateChannelRequestIngestSourceWithDefaults() *CreateChannelRequestIngestSource {
	this := CreateChannelRequestIngestSource{}
	return &this
}

// GetId returns the Id field value
func (o *CreateChannelRequestIngestSource) GetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreateChannelRequestIngestSource) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateChannelRequestIngestSource) SetId(v string) {
	o.Id = v
}

func (o CreateChannelRequestIngestSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CreateChannelRequestIngestSource) UnmarshalJSON(bytes []byte) (err error) {
	varCreateChannelRequestIngestSource := _CreateChannelRequestIngestSource{}

	if err = json.Unmarshal(bytes, &varCreateChannelRequestIngestSource); err == nil {
		*o = CreateChannelRequestIngestSource(varCreateChannelRequestIngestSource)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateChannelRequestIngestSource struct {
	value *CreateChannelRequestIngestSource
	isSet bool
}

func (v NullableCreateChannelRequestIngestSource) Get() *CreateChannelRequestIngestSource {
	return v.value
}

func (v *NullableCreateChannelRequestIngestSource) Set(val *CreateChannelRequestIngestSource) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateChannelRequestIngestSource) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateChannelRequestIngestSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateChannelRequestIngestSource(val *CreateChannelRequestIngestSource) *NullableCreateChannelRequestIngestSource {
	return &NullableCreateChannelRequestIngestSource{value: val, isSet: true}
}

func (v NullableCreateChannelRequestIngestSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateChannelRequestIngestSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


