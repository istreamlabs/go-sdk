/*
 * iStreamPlanet Channels API
 *
 * This API provides a way to list, create, and run channels.  Channels consist of inputs (ingest), transcoding settings like codecs and bitrates, and outputs (publishing).  List calls use cursor-based pagination with [RFC 5988](https://tools.ietf.org/html/rfc5988) Link headers. Clients *should* read this header and follow the next link to read all pages of results. 
 *
 * API version: 0.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// Summary2 struct for Summary2
type Summary2 struct {
	// Content hash
	Etag string `json:"etag"`
	// Unique channel ID
	Id string `json:"id"`
	// Channel name
	Name *string `json:"name,omitempty"`
	// Link to this resource
	Self *string `json:"self,omitempty"`
	Source ChannelSource `json:"source"`
}

// NewSummary2 instantiates a new Summary2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSummary2(etag string, id string, source ChannelSource, ) *Summary2 {
	this := Summary2{}
	this.Etag = etag
	this.Id = id
	this.Source = source
	return &this
}

// NewSummary2WithDefaults instantiates a new Summary2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSummary2WithDefaults() *Summary2 {
	this := Summary2{}
	return &this
}

// GetEtag returns the Etag field value
func (o *Summary2) GetEtag() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Etag
}

// GetEtagOk returns a tuple with the Etag field value
// and a boolean to check if the value has been set.
func (o *Summary2) GetEtagOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Etag, true
}

// SetEtag sets field value
func (o *Summary2) SetEtag(v string) {
	o.Etag = v
}

// GetId returns the Id field value
func (o *Summary2) GetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Summary2) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Summary2) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Summary2) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Summary2) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Summary2) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Summary2) SetName(v string) {
	o.Name = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *Summary2) GetSelf() string {
	if o == nil || o.Self == nil {
		var ret string
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Summary2) GetSelfOk() (*string, bool) {
	if o == nil || o.Self == nil {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *Summary2) HasSelf() bool {
	if o != nil && o.Self != nil {
		return true
	}

	return false
}

// SetSelf gets a reference to the given string and assigns it to the Self field.
func (o *Summary2) SetSelf(v string) {
	o.Self = &v
}

// GetSource returns the Source field value
func (o *Summary2) GetSource() ChannelSource {
	if o == nil  {
		var ret ChannelSource
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *Summary2) GetSourceOk() (*ChannelSource, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *Summary2) SetSource(v ChannelSource) {
	o.Source = v
}

func (o Summary2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["etag"] = o.Etag
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Self != nil {
		toSerialize["self"] = o.Self
	}
	if true {
		toSerialize["source"] = o.Source
	}
	return json.Marshal(toSerialize)
}

type NullableSummary2 struct {
	value *Summary2
	isSet bool
}

func (v NullableSummary2) Get() *Summary2 {
	return v.value
}

func (v *NullableSummary2) Set(val *Summary2) {
	v.value = val
	v.isSet = true
}

func (v NullableSummary2) IsSet() bool {
	return v.isSet
}

func (v *NullableSummary2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSummary2(val *Summary2) *NullableSummary2 {
	return &NullableSummary2{value: val, isSet: true}
}

func (v NullableSummary2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSummary2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


