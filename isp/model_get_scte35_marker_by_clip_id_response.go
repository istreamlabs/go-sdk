/*
 * WBD Aventus Channels API
 *
 * API version: v1.19.25
 * Contact: live-control-plane-devs@wbd.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the GetScte35MarkerByClipIDResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetScte35MarkerByClipIDResponse{}

// GetScte35MarkerByClipIDResponse struct for GetScte35MarkerByClipIDResponse
type GetScte35MarkerByClipIDResponse struct {
	// An optional URL to a JSON Schema document describing this resource
	Schema *string `json:"$schema,omitempty" format:"uri" doc:"An optional URL to a JSON Schema document describing this resource"`
	// List of scte markers for clip
	Scte35Markers []GetScte35MarkerByClipIDResponseScte35MarkersInner `json:"scte35_markers" doc:"List of scte markers for clip"`
}

// NewGetScte35MarkerByClipIDResponse instantiates a new GetScte35MarkerByClipIDResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetScte35MarkerByClipIDResponse(scte35Markers []GetScte35MarkerByClipIDResponseScte35MarkersInner) *GetScte35MarkerByClipIDResponse {
	this := GetScte35MarkerByClipIDResponse{}
	this.Scte35Markers = scte35Markers
	return &this
}

// NewGetScte35MarkerByClipIDResponseWithDefaults instantiates a new GetScte35MarkerByClipIDResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetScte35MarkerByClipIDResponseWithDefaults() *GetScte35MarkerByClipIDResponse {
	this := GetScte35MarkerByClipIDResponse{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *GetScte35MarkerByClipIDResponse) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScte35MarkerByClipIDResponse) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *GetScte35MarkerByClipIDResponse) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *GetScte35MarkerByClipIDResponse) SetSchema(v string) {
	o.Schema = &v
}

// GetScte35Markers returns the Scte35Markers field value
func (o *GetScte35MarkerByClipIDResponse) GetScte35Markers() []GetScte35MarkerByClipIDResponseScte35MarkersInner {
	if o == nil {
		var ret []GetScte35MarkerByClipIDResponseScte35MarkersInner
		return ret
	}

	return o.Scte35Markers
}

// GetScte35MarkersOk returns a tuple with the Scte35Markers field value
// and a boolean to check if the value has been set.
func (o *GetScte35MarkerByClipIDResponse) GetScte35MarkersOk() ([]GetScte35MarkerByClipIDResponseScte35MarkersInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Scte35Markers, true
}

// SetScte35Markers sets field value
func (o *GetScte35MarkerByClipIDResponse) SetScte35Markers(v []GetScte35MarkerByClipIDResponseScte35MarkersInner) {
	o.Scte35Markers = v
}

func (o GetScte35MarkerByClipIDResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetScte35MarkerByClipIDResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schema) {
		toSerialize["$schema"] = o.Schema
	}
	toSerialize["scte35_markers"] = o.Scte35Markers
	return toSerialize, nil
}

type NullableGetScte35MarkerByClipIDResponse struct {
	value *GetScte35MarkerByClipIDResponse
	isSet bool
}

func (v NullableGetScte35MarkerByClipIDResponse) Get() *GetScte35MarkerByClipIDResponse {
	return v.value
}

func (v *NullableGetScte35MarkerByClipIDResponse) Set(val *GetScte35MarkerByClipIDResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetScte35MarkerByClipIDResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetScte35MarkerByClipIDResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetScte35MarkerByClipIDResponse(val *GetScte35MarkerByClipIDResponse) *NullableGetScte35MarkerByClipIDResponse {
	return &NullableGetScte35MarkerByClipIDResponse{value: val, isSet: true}
}

func (v NullableGetScte35MarkerByClipIDResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetScte35MarkerByClipIDResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


