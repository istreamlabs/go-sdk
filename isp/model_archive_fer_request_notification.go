/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the ArchiveFERRequestNotification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArchiveFERRequestNotification{}

// ArchiveFERRequestNotification Notification settings
type ArchiveFERRequestNotification struct {
	Sns ArchiveFERRequestNotificationSns `json:"sns"`
}

// NewArchiveFERRequestNotification instantiates a new ArchiveFERRequestNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArchiveFERRequestNotification(sns ArchiveFERRequestNotificationSns) *ArchiveFERRequestNotification {
	this := ArchiveFERRequestNotification{}
	this.Sns = sns
	return &this
}

// NewArchiveFERRequestNotificationWithDefaults instantiates a new ArchiveFERRequestNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArchiveFERRequestNotificationWithDefaults() *ArchiveFERRequestNotification {
	this := ArchiveFERRequestNotification{}
	return &this
}

// GetSns returns the Sns field value
func (o *ArchiveFERRequestNotification) GetSns() ArchiveFERRequestNotificationSns {
	if o == nil {
		var ret ArchiveFERRequestNotificationSns
		return ret
	}

	return o.Sns
}

// GetSnsOk returns a tuple with the Sns field value
// and a boolean to check if the value has been set.
func (o *ArchiveFERRequestNotification) GetSnsOk() (*ArchiveFERRequestNotificationSns, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sns, true
}

// SetSns sets field value
func (o *ArchiveFERRequestNotification) SetSns(v ArchiveFERRequestNotificationSns) {
	o.Sns = v
}

func (o ArchiveFERRequestNotification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArchiveFERRequestNotification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sns"] = o.Sns
	return toSerialize, nil
}

type NullableArchiveFERRequestNotification struct {
	value *ArchiveFERRequestNotification
	isSet bool
}

func (v NullableArchiveFERRequestNotification) Get() *ArchiveFERRequestNotification {
	return v.value
}

func (v *NullableArchiveFERRequestNotification) Set(val *ArchiveFERRequestNotification) {
	v.value = val
	v.isSet = true
}

func (v NullableArchiveFERRequestNotification) IsSet() bool {
	return v.isSet
}

func (v *NullableArchiveFERRequestNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArchiveFERRequestNotification(val *ArchiveFERRequestNotification) *NullableArchiveFERRequestNotification {
	return &NullableArchiveFERRequestNotification{value: val, isSet: true}
}

func (v NullableArchiveFERRequestNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArchiveFERRequestNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


