/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the DynamicArchiveMP4RequestClearPublication type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DynamicArchiveMP4RequestClearPublication{}

// DynamicArchiveMP4RequestClearPublication The clear publication for MP4 Generation
type DynamicArchiveMP4RequestClearPublication struct {
	PackagerId string `json:"packager_id"`
	PublicationParams string `json:"publication_params"`
}

// NewDynamicArchiveMP4RequestClearPublication instantiates a new DynamicArchiveMP4RequestClearPublication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDynamicArchiveMP4RequestClearPublication(packagerId string, publicationParams string) *DynamicArchiveMP4RequestClearPublication {
	this := DynamicArchiveMP4RequestClearPublication{}
	this.PackagerId = packagerId
	this.PublicationParams = publicationParams
	return &this
}

// NewDynamicArchiveMP4RequestClearPublicationWithDefaults instantiates a new DynamicArchiveMP4RequestClearPublication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDynamicArchiveMP4RequestClearPublicationWithDefaults() *DynamicArchiveMP4RequestClearPublication {
	this := DynamicArchiveMP4RequestClearPublication{}
	return &this
}

// GetPackagerId returns the PackagerId field value
func (o *DynamicArchiveMP4RequestClearPublication) GetPackagerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PackagerId
}

// GetPackagerIdOk returns a tuple with the PackagerId field value
// and a boolean to check if the value has been set.
func (o *DynamicArchiveMP4RequestClearPublication) GetPackagerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PackagerId, true
}

// SetPackagerId sets field value
func (o *DynamicArchiveMP4RequestClearPublication) SetPackagerId(v string) {
	o.PackagerId = v
}

// GetPublicationParams returns the PublicationParams field value
func (o *DynamicArchiveMP4RequestClearPublication) GetPublicationParams() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicationParams
}

// GetPublicationParamsOk returns a tuple with the PublicationParams field value
// and a boolean to check if the value has been set.
func (o *DynamicArchiveMP4RequestClearPublication) GetPublicationParamsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicationParams, true
}

// SetPublicationParams sets field value
func (o *DynamicArchiveMP4RequestClearPublication) SetPublicationParams(v string) {
	o.PublicationParams = v
}

func (o DynamicArchiveMP4RequestClearPublication) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DynamicArchiveMP4RequestClearPublication) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["packager_id"] = o.PackagerId
	toSerialize["publication_params"] = o.PublicationParams
	return toSerialize, nil
}

type NullableDynamicArchiveMP4RequestClearPublication struct {
	value *DynamicArchiveMP4RequestClearPublication
	isSet bool
}

func (v NullableDynamicArchiveMP4RequestClearPublication) Get() *DynamicArchiveMP4RequestClearPublication {
	return v.value
}

func (v *NullableDynamicArchiveMP4RequestClearPublication) Set(val *DynamicArchiveMP4RequestClearPublication) {
	v.value = val
	v.isSet = true
}

func (v NullableDynamicArchiveMP4RequestClearPublication) IsSet() bool {
	return v.isSet
}

func (v *NullableDynamicArchiveMP4RequestClearPublication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDynamicArchiveMP4RequestClearPublication(val *DynamicArchiveMP4RequestClearPublication) *NullableDynamicArchiveMP4RequestClearPublication {
	return &NullableDynamicArchiveMP4RequestClearPublication{value: val, isSet: true}
}

func (v NullableDynamicArchiveMP4RequestClearPublication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDynamicArchiveMP4RequestClearPublication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


