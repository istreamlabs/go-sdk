/*
 * iStreamPlanet Channels API
 *
 * API version: 0.0.0
 * Contact: support@istreamplanet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package isp

import (
	"encoding/json"
)

// checks if the UpdateProductConfigRequestNotificationsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateProductConfigRequestNotificationsInner{}

// UpdateProductConfigRequestNotificationsInner struct for UpdateProductConfigRequestNotificationsInner
type UpdateProductConfigRequestNotificationsInner struct {
	EventTypes []string `json:"event_types"`
	Name string `json:"name"`
	Notification UpdateProductConfigRequestNotificationsInnerNotification `json:"notification"`
}

// NewUpdateProductConfigRequestNotificationsInner instantiates a new UpdateProductConfigRequestNotificationsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateProductConfigRequestNotificationsInner(eventTypes []string, name string, notification UpdateProductConfigRequestNotificationsInnerNotification) *UpdateProductConfigRequestNotificationsInner {
	this := UpdateProductConfigRequestNotificationsInner{}
	this.EventTypes = eventTypes
	this.Name = name
	this.Notification = notification
	return &this
}

// NewUpdateProductConfigRequestNotificationsInnerWithDefaults instantiates a new UpdateProductConfigRequestNotificationsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateProductConfigRequestNotificationsInnerWithDefaults() *UpdateProductConfigRequestNotificationsInner {
	this := UpdateProductConfigRequestNotificationsInner{}
	return &this
}

// GetEventTypes returns the EventTypes field value
func (o *UpdateProductConfigRequestNotificationsInner) GetEventTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.EventTypes
}

// GetEventTypesOk returns a tuple with the EventTypes field value
// and a boolean to check if the value has been set.
func (o *UpdateProductConfigRequestNotificationsInner) GetEventTypesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventTypes, true
}

// SetEventTypes sets field value
func (o *UpdateProductConfigRequestNotificationsInner) SetEventTypes(v []string) {
	o.EventTypes = v
}

// GetName returns the Name field value
func (o *UpdateProductConfigRequestNotificationsInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateProductConfigRequestNotificationsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateProductConfigRequestNotificationsInner) SetName(v string) {
	o.Name = v
}

// GetNotification returns the Notification field value
func (o *UpdateProductConfigRequestNotificationsInner) GetNotification() UpdateProductConfigRequestNotificationsInnerNotification {
	if o == nil {
		var ret UpdateProductConfigRequestNotificationsInnerNotification
		return ret
	}

	return o.Notification
}

// GetNotificationOk returns a tuple with the Notification field value
// and a boolean to check if the value has been set.
func (o *UpdateProductConfigRequestNotificationsInner) GetNotificationOk() (*UpdateProductConfigRequestNotificationsInnerNotification, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Notification, true
}

// SetNotification sets field value
func (o *UpdateProductConfigRequestNotificationsInner) SetNotification(v UpdateProductConfigRequestNotificationsInnerNotification) {
	o.Notification = v
}

func (o UpdateProductConfigRequestNotificationsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateProductConfigRequestNotificationsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["event_types"] = o.EventTypes
	toSerialize["name"] = o.Name
	toSerialize["notification"] = o.Notification
	return toSerialize, nil
}

type NullableUpdateProductConfigRequestNotificationsInner struct {
	value *UpdateProductConfigRequestNotificationsInner
	isSet bool
}

func (v NullableUpdateProductConfigRequestNotificationsInner) Get() *UpdateProductConfigRequestNotificationsInner {
	return v.value
}

func (v *NullableUpdateProductConfigRequestNotificationsInner) Set(val *UpdateProductConfigRequestNotificationsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateProductConfigRequestNotificationsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateProductConfigRequestNotificationsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateProductConfigRequestNotificationsInner(val *UpdateProductConfigRequestNotificationsInner) *NullableUpdateProductConfigRequestNotificationsInner {
	return &NullableUpdateProductConfigRequestNotificationsInner{value: val, isSet: true}
}

func (v NullableUpdateProductConfigRequestNotificationsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateProductConfigRequestNotificationsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


