name: generate

on:
  pull_request:
  workflow_dispatch:

permissions:
  actions: read
  contents: write
  pull-requests: write

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  generate:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Determine head branch name
        id: pr-head
        run: |
          DATE=$(date '+%Y-%m-%d')
          echo "name=gen/$DATE" | tee -a "$GITHUB_OUTPUT"

      - name: Determine base branch name
        id: pr-base
        run: |
          case "${{ github.event_name }}" in
            pull_request)
              echo "name=${{ github.base_ref }}" | tee -a "$GITHUB_OUTPUT"
              ;;
            *)
              echo "name=${{ github.ref_name }}" | tee -a "$GITHUB_OUTPUT"
              ;;
          esac

      - name: Re-generate
        run: ./run.sh

      - name: Detect generated changes
        id: changes
        run: |
          echo "${{ steps.pr-head.outputs.name }}" >> .trigger
          git add .trigger
          git add isp
          git status -s

          if [ -n "$(git status -s)" ]; then
            echo "should-commit=true" | tee -a "$GITHUB_OUTPUT"
          else
            echo "should-commit=false" | tee -a "$GITHUB_OUTPUT"
          fi
        
      - name: Create Pull Request
        if: steps.changes.outputs.should-commit == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "re-generate sdk"
          branch: ${{ steps.pr-head.outputs.name }}
          base: ${{ steps.pr-base.outputs.name }}
          title: Auto-generate SDK
          body: |
            Generated by [${{ github.workflow }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
